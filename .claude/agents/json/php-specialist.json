{
  "agent": {
    "attribution": "# Attribution and Acknowledgments\n\n## Project Information\n- **Project**: GenAI Security Agents - Policy-as-Code Engine\n- **Repository**: genai-sec-agents\n- **License**: [To be determined]\n\n## Rule Card Sources\nRule Cards in this repository are based on:\n- Industry security standards and best practices\n- OWASP guidelines and recommendations  \n- CIS Benchmarks and controls\n- NIST Cybersecurity Framework\n- ASVS (Application Security Verification Standard)\n\n## Third-Party Components\n- **PyYAML**: YAML processing library\n- **jsonschema**: JSON Schema validation\n- **pytest**: Testing framework\n\n## OWASP CheatSheet Series\n- **Source**: https://github.com/OWASP/CheatSheetSeries\n- **License**: CC BY-SA 4.0\n- **Usage**: Semantic search corpus for security guidance\n- **Attribution**: \u00a9 OWASP Foundation, licensed under Creative Commons Attribution-ShareAlike 4.0 International License\n- **Local Path**: `vendor/owasp-cheatsheets/`\n- **Purpose**: Used to create normalized search corpus in `research/search_corpus/owasp/` for local semantic search capabilities\n\n## Contributors\n- Lead AppSec Engineer: [Name]\n- Development Team: [Names]\n\n## Standards References\nThis project implements security controls based on recognized industry standards. All Rule Cards include proper attribution to source standards in the `refs` section.",
    "build_date": "2025-09-04T18:06:34Z",
    "compiler_version": "1.0.0",
    "description": "PHP security specialist for PHP-specific vulnerabilities and secure coding patterns",
    "domains": [
      "PHP injection prevention",
      "PHP configuration security",
      "PHP secure coding",
      "PHP session security"
    ],
    "name": "php-specialist",
    "source_digest": "sha256:1d670f362a6a6b58b8ed484dde6669f82f10a8d3f0d2aedd082f138b0d22322c",
    "version": "4ea80e36-1757009194"
  },
  "rules": [
    {
      "detect": {
        "semgrep": [
          "php.security.ini.app-debug",
          "python.logging.security.audit.logging-sensitive-data",
          "java.lang.security.audit.system-exit",
          "javascript.express.security.audit.express-expose-sensitive-data"
        ]
      },
      "do": [
        "Set 'APP_DEBUG=false' in the production environment configuration"
      ],
      "dont": [
        "Do not expose debug information to end-users in production"
      ],
      "id": "PHP-PREVENT-ENVIRONMENT-DISABLE-001",
      "refs": {
        "owasp": [
          "A03:2021",
          "A06:2021",
          "A09:2021"
        ]
      },
      "requirement": "Ensure that the 'APP_DEBUG' environment variable is set to 'false' in production to prevent sensitive information disclosure and potential security vulnerabilities.",
      "scope": "web-application",
      "severity": "high",
      "title": "Disable debug mode in production environment",
      "verify": {
        "tests": [
          "Verify 'APP_DEBUG' is set to 'false' in production environment"
        ]
      }
    },
    {
      "detect": {
        "semgrep": [
          "php.laravel.security.cookie-settings",
          "python.django.security.audit.xss.direct-use-of-httpresp-write",
          "javascript.browser.security.audit.dom-based-xss",
          "java.spring.security.audit.spring-xss"
        ]
      },
      "do": [
        "Enable cookie encryption middleware for sensitive data",
        "Set 'http_only' attribute to 'true' to prevent client-side script access",
        "Configure 'same_site' attribute to 'lax' or 'strict' for better cookie security"
      ],
      "dont": [
        "Avoid disabling cookie encryption middleware without a specific use case"
      ],
      "id": "PHP-LARAVEL-SECURE-COOKIES-001",
      "refs": {
        "owasp": [
          "A03:2021",
          "A07:2021",
          "A10:2021"
        ]
      },
      "requirement": "Configure secure cookie attributes to enhance the security of session management and prevent common attacks like session hijacking and XSS.",
      "scope": "web-application",
      "severity": "medium",
      "title": "Secure Cookie Configuration for Laravel Applications",
      "verify": {
        "tests": [
          "Verify cookie encryption middleware is enabled",
          "Check 'http_only' and 'same_site' attributes are properly configured"
        ]
      }
    },
    {
      "detect": {
        "custom": [
          "custom-laravel-app-key-001"
        ],
        "semgrep": [
          "php.laravel.security.key-generation"
        ]
      },
      "do": [
        "Run 'php artisan key:generate' to generate a new application key",
        "Store the application key securely and avoid exposing it in version control"
      ],
      "dont": [
        "Do not hardcode or expose the application key in source code"
      ],
      "id": "PHP-KEY-ENCRYPT-001",
      "refs": {
        "owasp": [
          "A03:2021",
          "A06:2021",
          "A09:2021"
        ]
      },
      "requirement": "Ensure that the application key is generated and securely stored to protect sensitive data encrypted using Laravel's encryption mechanisms.",
      "scope": "web-application",
      "severity": "high",
      "title": "Generate and secure application key",
      "verify": {
        "tests": [
          "Verify the application key is generated and securely stored",
          "Ensure the application key is not exposed in source code or configuration files"
        ]
      }
    }
  ],
  "schema_version": "1.0",
  "validation_hooks": {
    "custom": [
      "custom-laravel-app-key-001"
    ],
    "semgrep": [
      "java.lang.security.audit.system-exit",
      "java.spring.security.audit.spring-xss",
      "javascript.browser.security.audit.dom-based-xss",
      "javascript.express.security.audit.express-expose-sensitive-data",
      "php.laravel.security.cookie-settings",
      "php.laravel.security.key-generation",
      "php.security.ini.app-debug",
      "python.django.security.audit.xss.direct-use-of-httpresp-write",
      "python.logging.security.audit.logging-sensitive-data"
    ]
  }
}