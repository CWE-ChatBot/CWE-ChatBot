{"$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/main/sarif-2.1/schema/sarif-schema-2.1.0.json", "version": "2.1.0", "runs": [{"tool": {"driver": {"name": "Checkov", "version": "3.2.477", "informationUri": "https://checkov.io", "rules": [{"id": "CKV_K8S_21", "name": "The default namespace should not be used", "shortDescription": {"text": "The default namespace should not be used"}, "fullDescription": {"text": "The default namespace should not be used"}, "help": {"text": "The default namespace should not be used\nResource: ServiceAccount.default.cwe-chatbot-sa"}, "defaultConfiguration": {"level": "error"}}, {"id": "CKV_DOCKER_2", "name": "Ensure that HEALTHCHECK instructions have been added to container images", "shortDescription": {"text": "Ensure that HEALTHCHECK instructions have been added to container images"}, "fullDescription": {"text": "Ensure that HEALTHCHECK instructions have been added to container images"}, "help": {"text": "Ensure that HEALTHCHECK instructions have been added to container images\nResource: /apps/chatbot/Dockerfile."}, "defaultConfiguration": {"level": "error"}}, {"id": "CKV2_GHA_1", "name": "Ensure top-level permissions are not set to write-all", "shortDescription": {"text": "Ensure top-level permissions are not set to write-all"}, "fullDescription": {"text": "Ensure top-level permissions are not set to write-all"}, "help": {"text": "Ensure top-level permissions are not set to write-all\nResource: on(Deploy CWE ChatBot to Cloud Run)"}, "defaultConfiguration": {"level": "error"}}], "organization": "bridgecrew"}}, "results": [{"ruleId": "CKV_K8S_21", "ruleIndex": 0, "level": "error", "attachments": [], "message": {"text": "The default namespace should not be used"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "apps/chatbot/infrastructure/service-account.yaml"}, "region": {"startLine": 5, "endLine": 16, "snippet": {"text": "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: cwe-chatbot-sa\n  annotations:\n    # Service account description\n    description: \"Minimal service account for CWE ChatBot Cloud Run deployment\"\n    # Project binding\n    project: \"${GCP_PROJECT_ID}\"\n\n# IAM Policy Bindings\n---\n"}}}}]}, {"ruleId": "CKV_DOCKER_2", "ruleIndex": 1, "level": "error", "attachments": [], "message": {"text": "Ensure that HEALTHCHECK instructions have been added to container images"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "apps/chatbot/Dockerfile"}, "region": {"startLine": 1, "endLine": 75, "snippet": {"text": "# Multi-stage build for enhanced security\nFROM python:3.11-slim@sha256:8df0e8faf75b3c17ac33dc90d76787bbbcae142679e11da8c6f16afae5605ea7 AS builder\n\n# Install build dependencies with cleanup\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n\n# Install Python dependencies\nCOPY apps/chatbot/requirements.txt .\nRUN pip install --no-cache-dir --user -r requirements.txt\n\n# Install cwe_ingestion package (required by chatbot)\nCOPY apps/cwe_ingestion/ /tmp/cwe_ingestion/\nRUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n\n# Production stage\nFROM python:3.11-slim@sha256:8df0e8faf75b3c17ac33dc90d76787bbbcae142679e11da8c6f16afae5605ea7\n\n# Security-hardened environment variables\nENV PYTHONUNBUFFERED=1 \\\n    PYTHONDONTWRITEBYTECODE=1 \\\n    PYTHONHASHSEED=random \\\n    PIP_NO_CACHE_DIR=1 \\\n    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n    # Security features\n    CHAINLIT_HOST=0.0.0.0 \\\n    CHAINLIT_PORT=8080 \\\n    # Memory security\n    MALLOC_CHECK_=2\n\n# Install minimal runtime dependencies\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n\n# Create secure non-root user\nRUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n\n# Set working directory\nWORKDIR /app\n\n# Copy Python packages from builder\nCOPY --from=builder --chown=appuser:appuser /root/.local /home/appuser/.local\nENV PATH=/home/appuser/.local/bin:$PATH\n\n# Copy application files with secure permissions\nCOPY --chown=appuser:appuser apps/chatbot/main.py ./main.py\nCOPY --chown=appuser:appuser apps/chatbot/chainlit.md ./chainlit.md\n# Create directories - let Chainlit auto-generate config.toml with correct format\nRUN mkdir -p ./.chainlit ./public\nCOPY --chown=appuser:appuser apps/chatbot/src/ ./src/\n\n# Create directories with proper permissions\nRUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py /app/chainlit.md && \\\n    chown -R appuser:appuser /app\n\n# Switch to non-root user\nUSER appuser\n\n# Expose port\nEXPOSE 8080\n\n# Start command for Cloud Run\n# Note: Cloud Run uses TCP startup probe on port 8080, not Docker HEALTHCHECK\nCMD [\"python\", \"-m\", \"chainlit\", \"run\", \"main.py\", \"--host\", \"0.0.0.0\", \"--port\", \"8080\"]"}}}}]}, {"ruleId": "CKV2_GHA_1", "ruleIndex": 2, "level": "error", "attachments": [], "message": {"text": "Ensure top-level permissions are not set to write-all"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": ".github/workflows/deploy-chatbot.yml"}, "region": {"startLine": 22, "endLine": 23, "snippet": {"text": ""}}}}]}]}]}