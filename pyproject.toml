[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "cwe-chatbot"
version = "0.1.0"
description = "CWE ChatBot - Conversational AI for Common Weakness Enumeration"
authors = ["CWE-ChatBot Team"]
packages = [
    # Expose the Chainlit app package at import path `src.*`
    {include = "src", from = "apps/chatbot"},
    {include = "shared", from = "."},
]

[tool.poetry.dependencies]
python = "^3.10"
# Core dependencies for CWE data ingestion pipeline
requests = "^2.31.0"
lxml = "^6.0.0"
defusedxml = "^0.7.1" 
#chromadb = "^0.4.15"
click = "^8.1.7"
numpy = "^1.24.3"
tiktoken = "^0.7.0"

# Story 2.1 Dependencies - Core NLU & Query Matching
chainlit = "^2.8.0"  # For chat interface
psycopg2-binary = "^2.9.0"  # For PostgreSQL connection
pgvector = "^0.2.0"  # For vector database operations
rank-bm25 = "^0.2.2"  # For sparse retrieval
cryptography = "^46.0.0"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}

# Story 1.4 Dependencies - Gemini API Integration
google-generativeai = "^0.8.0"  # For Gemini embedding model
psycopg = {extras = ["binary"], version = "^3.2.10"}

# Optional dependencies
httpx = {extras = ["http2"], version = "^0.28.1"}
google-cloud-aiplatform = "^1.119.0"
google-cloud-modelarmor = "^0.2.8"  # For Model Armor sanitize APIs
python-socketio = "5.14.0"
asyncpg = "^0.30.0"
sqlalchemy = "^2.0.44"
tenacity = "^8.2.0"  # For exponential backoff retries

[tool.poetry.extras]
local-embeddings = ["sentence-transformers"]

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
black = "^24.3.0"
ruff = "^0.6.0"
mypy = "^1.5.0"
toml = "^0.10.2"
pre-commit = "^3.4.0"
python-dotenv = "^1.0.0"

# Story 2.6 Dependencies - UI/UX Testing with Playwright
playwright = "^1.40.0"
pytest-playwright = "^0.4.3"
pytest-asyncio = "^0.21.1"
pytest-mock = "^3.12.0"

[tool.black]
line-length = 88
target-version = ['py310']

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W"]
ignore = ["E501"]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["E501", "E722", "F841", "W293", "F821", "E402", "F401", "W291", "N999", "N814", "N817"]
"apps/chatbot/tests/**/*.py" = ["E501", "E722", "F841", "W293", "F821", "E402", "F401", "W291", "N999", "N814", "N817"]
"apps/cwe_ingestion/tests/**/*.py" = ["F841"]
"tests/scripts/**/*.py" = ["E402", "W291", "F401", "N999", "N814", "N817", "F821"]



[tool.pytest.ini_options]
testpaths = ["apps/chatbot/tests", "shared/tests", "tests", "apps/tests"]
python_files = ["test_*.py", "*_test.py"]
# Exclude standalone test scripts that are meant to be run directly with python3
norecursedirs = ["tests/scripts", ".git", ".tox", "dist", "build", "*.egg"]
addopts = "--cov=apps/chatbot/src --cov=shared --cov-report=html --cov-report=term"
markers = [
    "security: marks tests as security-related tests",
    "security_critical: marks tests as critical for deployment gate (must pass before deployment)",
    "integration: marks tests as requiring real database or external services"
]

# Playwright-specific test configuration
[tool.pytest.ini_options.playwright]
# Default to chromium for UI tests, can be overridden with --browser flag
browser = "chromium"
# Use headed mode for interactive testing, can be overridden with --headless
headed = true
# Screenshot and video settings
screenshot = "only-on-failure"
video = "retain-on-failure"
# Base URL for testing (will be configured per environment)
base_url = "http://localhost:8000"

[tool.mypy]
python_version = "3.10"
# Strict type checking flags
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
# Display options
show_error_context = true
show_column_numbers = true
show_error_codes = true
# Module handling
ignore_missing_imports = true
explicit_package_bases = true
namespace_packages = true
# Check only first-party code
files = [
  "apps/chatbot/src",
  "shared",
  "apps/cwe_ingestion/cwe_ingestion",
]
disable_error_code = ["import-untyped"]
exclude = [
  "^build/.*",
  "^dist/.*",
  "^apps/.*/build/.*",
  "^apps/cwe_ingestion/build/lib/.*",
  "^scripts/.*",
  "^apps/cwe_ingestion/scripts/.*",
]

# Per-module overrides for gradual typing
[[tool.mypy.overrides]]
module = "apps.chatbot.src.*"
disallow_untyped_defs = false

# cwe_ingestion: Strict typing enabled - incremental fixes needed
# Removed ignore_errors overrides to enable full type checking

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
