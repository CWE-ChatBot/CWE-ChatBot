[{"check_type": "kubernetes", "results": {"passed_checks": [{"check_id": "CKV_K8S_41", "bc_check_id": null, "check_name": "Ensure that default service accounts are not actively used", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[5, "apiVersion: v1\n"], [6, "kind: ServiceAccount\n"], [7, "metadata:\n"], [8, "  name: cwe-chatbot-sa\n"], [9, "  annotations:\n"], [10, "    # Service account description\n"], [11, "    description: \"Minimal service account for CWE ChatBot Cloud Run deployment\"\n"], [12, "    # Project binding\n"], [13, "    project: \"${GCP_PROJECT_ID}\"\n"], [14, "\n"], [15, "# IAM Policy Bindings\n"], [16, "---\n"]], "file_path": "/apps/chatbot/infrastructure/service-account.yaml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/infrastructure/service-account.yaml", "repo_file_path": "/apps/chatbot/infrastructure/service-account.yaml", "file_line_range": [5, 16], "resource": "ServiceAccount.default.cwe-chatbot-sa", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.DefaultServiceAccount", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}], "failed_checks": [{"check_id": "CKV_K8S_21", "bc_check_id": null, "check_name": "The default namespace should not be used", "check_result": {"result": "FAILED", "evaluated_keys": []}, "code_block": [[5, "apiVersion: v1\n"], [6, "kind: ServiceAccount\n"], [7, "metadata:\n"], [8, "  name: cwe-chatbot-sa\n"], [9, "  annotations:\n"], [10, "    # Service account description\n"], [11, "    description: \"Minimal service account for CWE ChatBot Cloud Run deployment\"\n"], [12, "    # Project binding\n"], [13, "    project: \"${GCP_PROJECT_ID}\"\n"], [14, "\n"], [15, "# IAM Policy Bindings\n"], [16, "---\n"]], "file_path": "/apps/chatbot/infrastructure/service-account.yaml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/infrastructure/service-account.yaml", "repo_file_path": "/apps/chatbot/infrastructure/service-account.yaml", "file_line_range": [5, 16], "resource": "ServiceAccount.default.cwe-chatbot-sa", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.DefaultNamespace", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}], "skipped_checks": [], "parsing_errors": []}, "summary": {"passed": 1, "failed": 1, "skipped": 0, "parsing_errors": 0, "resource_count": 2, "checkov_version": "3.2.477"}, "url": "Add an api key '--bc-api-key <api-key>' to see more detailed insights via https://bridgecrew.cloud"}, {"check_type": "dockerfile", "results": {"passed_checks": [{"check_id": "CKV_DOCKER_7", "bc_check_id": null, "check_name": "Ensure the base image uses a non latest version tag", "check_result": {"result": "PASSED", "results_configuration": [{"instruction": "FROM", "startline": 20, "endline": 20, "content": "FROM python:3.11-slim@sha256:8df0e8faf75b3c17ac33dc90d76787bbbcae142679e11da8c6f16afae5605ea7\n", "value": "python:3.11-slim@sha256:8df0e8faf75b3c17ac33dc90d76787bbbcae142679e11da8c6f16afae5605ea7"}]}, "code_block": [[21, "FROM python:3.11-slim@sha256:8df0e8faf75b3c17ac33dc90d76787bbbcae142679e11da8c6f16afae5605ea7\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [21, 21], "resource": "/apps/chatbot/Dockerfile.FROM", "evaluations": null, "check_class": "checkov.dockerfile.checks.ReferenceLatestTag", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_DOCKER_11", "bc_check_id": null, "check_name": "Ensure From Alias are unique for multistage builds.", "check_result": {"result": "PASSED", "results_configuration": null}, "code_block": [[1, "# Multi-stage build for enhanced security\n"], [2, "FROM python:3.11-slim@sha256:8df0e8faf75b3c17ac33dc90d76787bbbcae142679e11da8c6f16afae5605ea7 AS builder\n"], [3, "\n"], [4, "# Install build dependencies with cleanup\n"], [5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"], [11, "\n"], [12, "# Install Python dependencies\n"], [13, "COPY apps/chatbot/requirements.txt .\n"], [14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"], [15, "\n"], [16, "# Install cwe_ingestion package (required by chatbot)\n"], [17, "COPY apps/cwe_ingestion/ /tmp/cwe_ingestion/\n"], [18, "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n"], [19, "\n"], [20, "# Production stage\n"], [21, "FROM python:3.11-slim@sha256:8df0e8faf75b3c17ac33dc90d76787bbbcae142679e11da8c6f16afae5605ea7\n"], [22, "\n"], [23, "# Security-hardened environment variables\n"], [24, "ENV PYTHONUNBUFFERED=1 \\\n"], [25, "    PYTHONDONTWRITEBYTECODE=1 \\\n"], [26, "    PYTHONHASHSEED=random \\\n"], [27, "    PIP_NO_CACHE_DIR=1 \\\n"], [28, "    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n"], [29, "    # Security features\n"], [30, "    CHAINLIT_HOST=0.0.0.0 \\\n"], [31, "    CHAINLIT_PORT=8080 \\\n"], [32, "    # Memory security\n"], [33, "    MALLOC_CHECK_=2\n"], [34, "\n"], [35, "# Install minimal runtime dependencies\n"], [36, "RUN apt-get update && \\\n"], [37, "    apt-get install -y --no-install-recommends \\\n"], [38, "        ca-certificates && \\\n"], [39, "    rm -rf /var/lib/apt/lists/* && \\\n"], [40, "    apt-get clean\n"], [41, "\n"], [42, "# Create secure non-root user\n"], [43, "RUN groupadd --gid 1000 appuser && \\\n"], [44, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"], [45, "\n"], [46, "# Set working directory\n"], [47, "WORKDIR /app\n"], [48, "\n"], [49, "# Copy Python packages from builder\n"], [50, "COPY --from=builder --chown=appuser:appuser /root/.local /home/appuser/.local\n"], [51, "ENV PATH=/home/appuser/.local/bin:$PATH\n"], [52, "\n"], [53, "# Copy application files with secure permissions\n"], [54, "COPY --chown=appuser:appuser apps/chatbot/main.py ./main.py\n"], [55, "COPY --chown=appuser:appuser apps/chatbot/chainlit.md ./chainlit.md\n"], [56, "# Create directories - let Chainlit auto-generate config.toml with correct format\n"], [57, "RUN mkdir -p ./.chainlit ./public\n"], [58, "COPY --chown=appuser:appuser apps/chatbot/src/ ./src/\n"], [59, "\n"], [60, "# Create directories with proper permissions\n"], [61, "RUN mkdir -p /app/logs && \\\n"], [62, "    chmod 755 /app && \\\n"], [63, "    chmod 750 /app/logs && \\\n"], [64, "    chmod 644 /app/*.py /app/chainlit.md && \\\n"], [65, "    chown -R appuser:appuser /app\n"], [66, "\n"], [67, "# Switch to non-root user\n"], [68, "USER appuser\n"], [69, "\n"], [70, "# Expose port\n"], [71, "EXPOSE 8080\n"], [72, "\n"], [73, "# Start command for Cloud Run\n"], [74, "# Note: Cloud Run uses TCP startup probe on port 8080, not Docker HEALTHCHECK\n"], [75, "CMD [\"python\", \"-m\", \"chainlit\", \"run\", \"main.py\", \"--host\", \"0.0.0.0\", \"--port\", \"8080\"]"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [1, 75], "resource": "/apps/chatbot/Dockerfile.", "evaluations": null, "check_class": "checkov.dockerfile.checks.AliasIsUnique", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_DOCKER_8", "bc_check_id": null, "check_name": "Ensure the last USER is not root", "check_result": {"result": "PASSED", "results_configuration": [{"instruction": "USER", "startline": 67, "endline": 67, "content": "USER appuser\n", "value": "appuser"}]}, "code_block": [[68, "USER appuser\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [68, 68], "resource": "/apps/chatbot/Dockerfile.USER", "evaluations": null, "check_class": "checkov.dockerfile.checks.RootUser", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_DOCKER_1", "bc_check_id": null, "check_name": "Ensure port 22 is not exposed", "check_result": {"result": "PASSED", "results_configuration": null}, "code_block": [[1, "# Multi-stage build for enhanced security\n"], [2, "FROM python:3.11-slim@sha256:8df0e8faf75b3c17ac33dc90d76787bbbcae142679e11da8c6f16afae5605ea7 AS builder\n"], [3, "\n"], [4, "# Install build dependencies with cleanup\n"], [5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"], [11, "\n"], [12, "# Install Python dependencies\n"], [13, "COPY apps/chatbot/requirements.txt .\n"], [14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"], [15, "\n"], [16, "# Install cwe_ingestion package (required by chatbot)\n"], [17, "COPY apps/cwe_ingestion/ /tmp/cwe_ingestion/\n"], [18, "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n"], [19, "\n"], [20, "# Production stage\n"], [21, "FROM python:3.11-slim@sha256:8df0e8faf75b3c17ac33dc90d76787bbbcae142679e11da8c6f16afae5605ea7\n"], [22, "\n"], [23, "# Security-hardened environment variables\n"], [24, "ENV PYTHONUNBUFFERED=1 \\\n"], [25, "    PYTHONDONTWRITEBYTECODE=1 \\\n"], [26, "    PYTHONHASHSEED=random \\\n"], [27, "    PIP_NO_CACHE_DIR=1 \\\n"], [28, "    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n"], [29, "    # Security features\n"], [30, "    CHAINLIT_HOST=0.0.0.0 \\\n"], [31, "    CHAINLIT_PORT=8080 \\\n"], [32, "    # Memory security\n"], [33, "    MALLOC_CHECK_=2\n"], [34, "\n"], [35, "# Install minimal runtime dependencies\n"], [36, "RUN apt-get update && \\\n"], [37, "    apt-get install -y --no-install-recommends \\\n"], [38, "        ca-certificates && \\\n"], [39, "    rm -rf /var/lib/apt/lists/* && \\\n"], [40, "    apt-get clean\n"], [41, "\n"], [42, "# Create secure non-root user\n"], [43, "RUN groupadd --gid 1000 appuser && \\\n"], [44, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"], [45, "\n"], [46, "# Set working directory\n"], [47, "WORKDIR /app\n"], [48, "\n"], [49, "# Copy Python packages from builder\n"], [50, "COPY --from=builder --chown=appuser:appuser /root/.local /home/appuser/.local\n"], [51, "ENV PATH=/home/appuser/.local/bin:$PATH\n"], [52, "\n"], [53, "# Copy application files with secure permissions\n"], [54, "COPY --chown=appuser:appuser apps/chatbot/main.py ./main.py\n"], [55, "COPY --chown=appuser:appuser apps/chatbot/chainlit.md ./chainlit.md\n"], [56, "# Create directories - let Chainlit auto-generate config.toml with correct format\n"], [57, "RUN mkdir -p ./.chainlit ./public\n"], [58, "COPY --chown=appuser:appuser apps/chatbot/src/ ./src/\n"], [59, "\n"], [60, "# Create directories with proper permissions\n"], [61, "RUN mkdir -p /app/logs && \\\n"], [62, "    chmod 755 /app && \\\n"], [63, "    chmod 750 /app/logs && \\\n"], [64, "    chmod 644 /app/*.py /app/chainlit.md && \\\n"], [65, "    chown -R appuser:appuser /app\n"], [66, "\n"], [67, "# Switch to non-root user\n"], [68, "USER appuser\n"], [69, "\n"], [70, "# Expose port\n"], [71, "EXPOSE 8080\n"], [72, "\n"], [73, "# Start command for Cloud Run\n"], [74, "# Note: Cloud Run uses TCP startup probe on port 8080, not Docker HEALTHCHECK\n"], [75, "CMD [\"python\", \"-m\", \"chainlit\", \"run\", \"main.py\", \"--host\", \"0.0.0.0\", \"--port\", \"8080\"]"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [1, 75], "resource": "/apps/chatbot/Dockerfile.", "evaluations": null, "check_class": "checkov.dockerfile.checks.ExposePort22", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_DOCKER_9", "bc_check_id": null, "check_name": "Ensure that APT isn't used", "check_result": {"result": "PASSED", "results_configuration": null}, "code_block": [[1, "# Multi-stage build for enhanced security\n"], [2, "FROM python:3.11-slim@sha256:8df0e8faf75b3c17ac33dc90d76787bbbcae142679e11da8c6f16afae5605ea7 AS builder\n"], [3, "\n"], [4, "# Install build dependencies with cleanup\n"], [5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"], [11, "\n"], [12, "# Install Python dependencies\n"], [13, "COPY apps/chatbot/requirements.txt .\n"], [14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"], [15, "\n"], [16, "# Install cwe_ingestion package (required by chatbot)\n"], [17, "COPY apps/cwe_ingestion/ /tmp/cwe_ingestion/\n"], [18, "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n"], [19, "\n"], [20, "# Production stage\n"], [21, "FROM python:3.11-slim@sha256:8df0e8faf75b3c17ac33dc90d76787bbbcae142679e11da8c6f16afae5605ea7\n"], [22, "\n"], [23, "# Security-hardened environment variables\n"], [24, "ENV PYTHONUNBUFFERED=1 \\\n"], [25, "    PYTHONDONTWRITEBYTECODE=1 \\\n"], [26, "    PYTHONHASHSEED=random \\\n"], [27, "    PIP_NO_CACHE_DIR=1 \\\n"], [28, "    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n"], [29, "    # Security features\n"], [30, "    CHAINLIT_HOST=0.0.0.0 \\\n"], [31, "    CHAINLIT_PORT=8080 \\\n"], [32, "    # Memory security\n"], [33, "    MALLOC_CHECK_=2\n"], [34, "\n"], [35, "# Install minimal runtime dependencies\n"], [36, "RUN apt-get update && \\\n"], [37, "    apt-get install -y --no-install-recommends \\\n"], [38, "        ca-certificates && \\\n"], [39, "    rm -rf /var/lib/apt/lists/* && \\\n"], [40, "    apt-get clean\n"], [41, "\n"], [42, "# Create secure non-root user\n"], [43, "RUN groupadd --gid 1000 appuser && \\\n"], [44, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"], [45, "\n"], [46, "# Set working directory\n"], [47, "WORKDIR /app\n"], [48, "\n"], [49, "# Copy Python packages from builder\n"], [50, "COPY --from=builder --chown=appuser:appuser /root/.local /home/appuser/.local\n"], [51, "ENV PATH=/home/appuser/.local/bin:$PATH\n"], [52, "\n"], [53, "# Copy application files with secure permissions\n"], [54, "COPY --chown=appuser:appuser apps/chatbot/main.py ./main.py\n"], [55, "COPY --chown=appuser:appuser apps/chatbot/chainlit.md ./chainlit.md\n"], [56, "# Create directories - let Chainlit auto-generate config.toml with correct format\n"], [57, "RUN mkdir -p ./.chainlit ./public\n"], [58, "COPY --chown=appuser:appuser apps/chatbot/src/ ./src/\n"], [59, "\n"], [60, "# Create directories with proper permissions\n"], [61, "RUN mkdir -p /app/logs && \\\n"], [62, "    chmod 755 /app && \\\n"], [63, "    chmod 750 /app/logs && \\\n"], [64, "    chmod 644 /app/*.py /app/chainlit.md && \\\n"], [65, "    chown -R appuser:appuser /app\n"], [66, "\n"], [67, "# Switch to non-root user\n"], [68, "USER appuser\n"], [69, "\n"], [70, "# Expose port\n"], [71, "EXPOSE 8080\n"], [72, "\n"], [73, "# Start command for Cloud Run\n"], [74, "# Note: Cloud Run uses TCP startup probe on port 8080, not Docker HEALTHCHECK\n"], [75, "CMD [\"python\", \"-m\", \"chainlit\", \"run\", \"main.py\", \"--host\", \"0.0.0.0\", \"--port\", \"8080\"]"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [1, 75], "resource": "/apps/chatbot/Dockerfile.", "evaluations": null, "check_class": "checkov.dockerfile.checks.RunUsingAPT", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_DOCKER_5", "bc_check_id": null, "check_name": "Ensure update instructions are not use alone in the Dockerfile", "check_result": {"result": "PASSED", "results_configuration": null}, "code_block": [[1, "# Multi-stage build for enhanced security\n"], [2, "FROM python:3.11-slim@sha256:8df0e8faf75b3c17ac33dc90d76787bbbcae142679e11da8c6f16afae5605ea7 AS builder\n"], [3, "\n"], [4, "# Install build dependencies with cleanup\n"], [5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"], [11, "\n"], [12, "# Install Python dependencies\n"], [13, "COPY apps/chatbot/requirements.txt .\n"], [14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"], [15, "\n"], [16, "# Install cwe_ingestion package (required by chatbot)\n"], [17, "COPY apps/cwe_ingestion/ /tmp/cwe_ingestion/\n"], [18, "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n"], [19, "\n"], [20, "# Production stage\n"], [21, "FROM python:3.11-slim@sha256:8df0e8faf75b3c17ac33dc90d76787bbbcae142679e11da8c6f16afae5605ea7\n"], [22, "\n"], [23, "# Security-hardened environment variables\n"], [24, "ENV PYTHONUNBUFFERED=1 \\\n"], [25, "    PYTHONDONTWRITEBYTECODE=1 \\\n"], [26, "    PYTHONHASHSEED=random \\\n"], [27, "    PIP_NO_CACHE_DIR=1 \\\n"], [28, "    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n"], [29, "    # Security features\n"], [30, "    CHAINLIT_HOST=0.0.0.0 \\\n"], [31, "    CHAINLIT_PORT=8080 \\\n"], [32, "    # Memory security\n"], [33, "    MALLOC_CHECK_=2\n"], [34, "\n"], [35, "# Install minimal runtime dependencies\n"], [36, "RUN apt-get update && \\\n"], [37, "    apt-get install -y --no-install-recommends \\\n"], [38, "        ca-certificates && \\\n"], [39, "    rm -rf /var/lib/apt/lists/* && \\\n"], [40, "    apt-get clean\n"], [41, "\n"], [42, "# Create secure non-root user\n"], [43, "RUN groupadd --gid 1000 appuser && \\\n"], [44, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"], [45, "\n"], [46, "# Set working directory\n"], [47, "WORKDIR /app\n"], [48, "\n"], [49, "# Copy Python packages from builder\n"], [50, "COPY --from=builder --chown=appuser:appuser /root/.local /home/appuser/.local\n"], [51, "ENV PATH=/home/appuser/.local/bin:$PATH\n"], [52, "\n"], [53, "# Copy application files with secure permissions\n"], [54, "COPY --chown=appuser:appuser apps/chatbot/main.py ./main.py\n"], [55, "COPY --chown=appuser:appuser apps/chatbot/chainlit.md ./chainlit.md\n"], [56, "# Create directories - let Chainlit auto-generate config.toml with correct format\n"], [57, "RUN mkdir -p ./.chainlit ./public\n"], [58, "COPY --chown=appuser:appuser apps/chatbot/src/ ./src/\n"], [59, "\n"], [60, "# Create directories with proper permissions\n"], [61, "RUN mkdir -p /app/logs && \\\n"], [62, "    chmod 755 /app && \\\n"], [63, "    chmod 750 /app/logs && \\\n"], [64, "    chmod 644 /app/*.py /app/chainlit.md && \\\n"], [65, "    chown -R appuser:appuser /app\n"], [66, "\n"], [67, "# Switch to non-root user\n"], [68, "USER appuser\n"], [69, "\n"], [70, "# Expose port\n"], [71, "EXPOSE 8080\n"], [72, "\n"], [73, "# Start command for Cloud Run\n"], [74, "# Note: Cloud Run uses TCP startup probe on port 8080, not Docker HEALTHCHECK\n"], [75, "CMD [\"python\", \"-m\", \"chainlit\", \"run\", \"main.py\", \"--host\", \"0.0.0.0\", \"--port\", \"8080\"]"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [1, 75], "resource": "/apps/chatbot/Dockerfile.", "evaluations": null, "check_class": "checkov.dockerfile.checks.UpdateNotAlone", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_DOCKER_10", "bc_check_id": null, "check_name": "Ensure that WORKDIR values are absolute paths", "check_result": {"result": "PASSED", "results_configuration": null}, "code_block": [[1, "# Multi-stage build for enhanced security\n"], [2, "FROM python:3.11-slim@sha256:8df0e8faf75b3c17ac33dc90d76787bbbcae142679e11da8c6f16afae5605ea7 AS builder\n"], [3, "\n"], [4, "# Install build dependencies with cleanup\n"], [5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"], [11, "\n"], [12, "# Install Python dependencies\n"], [13, "COPY apps/chatbot/requirements.txt .\n"], [14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"], [15, "\n"], [16, "# Install cwe_ingestion package (required by chatbot)\n"], [17, "COPY apps/cwe_ingestion/ /tmp/cwe_ingestion/\n"], [18, "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n"], [19, "\n"], [20, "# Production stage\n"], [21, "FROM python:3.11-slim@sha256:8df0e8faf75b3c17ac33dc90d76787bbbcae142679e11da8c6f16afae5605ea7\n"], [22, "\n"], [23, "# Security-hardened environment variables\n"], [24, "ENV PYTHONUNBUFFERED=1 \\\n"], [25, "    PYTHONDONTWRITEBYTECODE=1 \\\n"], [26, "    PYTHONHASHSEED=random \\\n"], [27, "    PIP_NO_CACHE_DIR=1 \\\n"], [28, "    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n"], [29, "    # Security features\n"], [30, "    CHAINLIT_HOST=0.0.0.0 \\\n"], [31, "    CHAINLIT_PORT=8080 \\\n"], [32, "    # Memory security\n"], [33, "    MALLOC_CHECK_=2\n"], [34, "\n"], [35, "# Install minimal runtime dependencies\n"], [36, "RUN apt-get update && \\\n"], [37, "    apt-get install -y --no-install-recommends \\\n"], [38, "        ca-certificates && \\\n"], [39, "    rm -rf /var/lib/apt/lists/* && \\\n"], [40, "    apt-get clean\n"], [41, "\n"], [42, "# Create secure non-root user\n"], [43, "RUN groupadd --gid 1000 appuser && \\\n"], [44, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"], [45, "\n"], [46, "# Set working directory\n"], [47, "WORKDIR /app\n"], [48, "\n"], [49, "# Copy Python packages from builder\n"], [50, "COPY --from=builder --chown=appuser:appuser /root/.local /home/appuser/.local\n"], [51, "ENV PATH=/home/appuser/.local/bin:$PATH\n"], [52, "\n"], [53, "# Copy application files with secure permissions\n"], [54, "COPY --chown=appuser:appuser apps/chatbot/main.py ./main.py\n"], [55, "COPY --chown=appuser:appuser apps/chatbot/chainlit.md ./chainlit.md\n"], [56, "# Create directories - let Chainlit auto-generate config.toml with correct format\n"], [57, "RUN mkdir -p ./.chainlit ./public\n"], [58, "COPY --chown=appuser:appuser apps/chatbot/src/ ./src/\n"], [59, "\n"], [60, "# Create directories with proper permissions\n"], [61, "RUN mkdir -p /app/logs && \\\n"], [62, "    chmod 755 /app && \\\n"], [63, "    chmod 750 /app/logs && \\\n"], [64, "    chmod 644 /app/*.py /app/chainlit.md && \\\n"], [65, "    chown -R appuser:appuser /app\n"], [66, "\n"], [67, "# Switch to non-root user\n"], [68, "USER appuser\n"], [69, "\n"], [70, "# Expose port\n"], [71, "EXPOSE 8080\n"], [72, "\n"], [73, "# Start command for Cloud Run\n"], [74, "# Note: Cloud Run uses TCP startup probe on port 8080, not Docker HEALTHCHECK\n"], [75, "CMD [\"python\", \"-m\", \"chainlit\", \"run\", \"main.py\", \"--host\", \"0.0.0.0\", \"--port\", \"8080\"]"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [1, 75], "resource": "/apps/chatbot/Dockerfile.", "evaluations": null, "check_class": "checkov.dockerfile.checks.WorkdirIsAbsolute", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_DOCKER_3", "bc_check_id": null, "check_name": "Ensure that a user for the container has been created", "check_result": {"result": "PASSED", "results_configuration": [{"instruction": "USER", "startline": 67, "endline": 67, "content": "USER appuser\n", "value": "appuser"}]}, "code_block": [[68, "USER appuser\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [68, 68], "resource": "/apps/chatbot/Dockerfile.USER", "evaluations": null, "check_class": "checkov.dockerfile.checks.UserExists", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_DOCKER_7", "bc_check_id": null, "check_name": "Ensure the base image uses a non latest version tag", "check_result": {"result": "PASSED", "results_configuration": [{"instruction": "FROM", "startline": 16, "endline": 16, "content": "FROM python:3.11.7-slim@sha256:2b8e95356fd2b21f2b95b65b9c6b6b5c2c2b14c8b5be7f69b7b3c9d1e2f3a4b5\n", "value": "python:3.11.7-slim@sha256:2b8e95356fd2b21f2b95b65b9c6b6b5c2c2b14c8b5be7f69b7b3c9d1e2f3a4b5"}]}, "code_block": [[17, "FROM python:3.11.7-slim@sha256:2b8e95356fd2b21f2b95b65b9c6b6b5c2c2b14c8b5be7f69b7b3c9d1e2f3a4b5\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [17, 17], "resource": "/apps/chatbot/Dockerfile.secure.FROM", "evaluations": null, "check_class": "checkov.dockerfile.checks.ReferenceLatestTag", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_DOCKER_11", "bc_check_id": null, "check_name": "Ensure From Alias are unique for multistage builds.", "check_result": {"result": "PASSED", "results_configuration": null}, "code_block": [[1, "# Multi-stage build for enhanced security\n"], [2, "FROM python:3.11.7-slim@sha256:2b8e95356fd2b21f2b95b65b9c6b6b5c2c2b14c8b5be7f69b7b3c9d1e2f3a4b5 AS builder\n"], [3, "\n"], [4, "# Install build dependencies with cleanup\n"], [5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"], [11, "\n"], [12, "# Install Python dependencies\n"], [13, "COPY requirements.txt .\n"], [14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"], [15, "\n"], [16, "# Production stage\n"], [17, "FROM python:3.11.7-slim@sha256:2b8e95356fd2b21f2b95b65b9c6b6b5c2c2b14c8b5be7f69b7b3c9d1e2f3a4b5\n"], [18, "\n"], [19, "# Security-hardened environment variables\n"], [20, "ENV PYTHONUNBUFFERED=1 \\\n"], [21, "    PYTHONDONTWRITEBYTECODE=1 \\\n"], [22, "    PYTHONHASHSEED=random \\\n"], [23, "    PIP_NO_CACHE_DIR=1 \\\n"], [24, "    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n"], [25, "    # Security features\n"], [26, "    CHAINLIT_HOST=0.0.0.0 \\\n"], [27, "    CHAINLIT_PORT=8080 \\\n"], [28, "    # Memory security\n"], [29, "    MALLOC_CHECK_=2\n"], [30, "\n"], [31, "# Install minimal runtime dependencies\n"], [32, "RUN apt-get update && \\\n"], [33, "    apt-get install -y --no-install-recommends \\\n"], [34, "        ca-certificates && \\\n"], [35, "    rm -rf /var/lib/apt/lists/* && \\\n"], [36, "    apt-get clean\n"], [37, "\n"], [38, "# Create secure non-root user\n"], [39, "RUN groupadd --gid 1000 appuser && \\\n"], [40, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"], [41, "\n"], [42, "# Set working directory\n"], [43, "WORKDIR /app\n"], [44, "\n"], [45, "# Copy Python packages from builder\n"], [46, "COPY --from=builder --chown=appuser:appuser /root/.local /home/appuser/.local\n"], [47, "ENV PATH=/home/appuser/.local/bin:$PATH\n"], [48, "\n"], [49, "# Copy application files with secure permissions\n"], [50, "COPY --chown=appuser:appuser main.py .\n"], [51, "COPY --chown=appuser:appuser healthcheck.py .\n"], [52, "\n"], [53, "# Create directories with proper permissions\n"], [54, "RUN mkdir -p /app/logs && \\\n"], [55, "    chmod 755 /app && \\\n"], [56, "    chmod 750 /app/logs && \\\n"], [57, "    chmod 644 /app/*.py && \\\n"], [58, "    chmod +x /app/healthcheck.py && \\\n"], [59, "    chown -R appuser:appuser /app\n"], [60, "\n"], [61, "# Switch to non-root user\n"], [62, "USER appuser\n"], [63, "\n"], [64, "# Expose port\n"], [65, "EXPOSE 8080\n"], [66, "\n"], [67, "# Secure health check\n"], [68, "HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \\\n"], [69, "    CMD python /app/healthcheck.py\n"], [70, "\n"], [71, "# Start command for Cloud Run\n"], [72, "CMD [\"python\", \"-m\", \"chainlit\", \"run\", \"main.py\", \"--host\", \"0.0.0.0\", \"--port\", \"8080\"]"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [1, 72], "resource": "/apps/chatbot/Dockerfile.secure.", "evaluations": null, "check_class": "checkov.dockerfile.checks.AliasIsUnique", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_DOCKER_8", "bc_check_id": null, "check_name": "Ensure the last USER is not root", "check_result": {"result": "PASSED", "results_configuration": [{"instruction": "USER", "startline": 61, "endline": 61, "content": "USER appuser\n", "value": "appuser"}]}, "code_block": [[62, "USER appuser\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [62, 62], "resource": "/apps/chatbot/Dockerfile.secure.USER", "evaluations": null, "check_class": "checkov.dockerfile.checks.RootUser", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_DOCKER_1", "bc_check_id": null, "check_name": "Ensure port 22 is not exposed", "check_result": {"result": "PASSED", "results_configuration": null}, "code_block": [[1, "# Multi-stage build for enhanced security\n"], [2, "FROM python:3.11.7-slim@sha256:2b8e95356fd2b21f2b95b65b9c6b6b5c2c2b14c8b5be7f69b7b3c9d1e2f3a4b5 AS builder\n"], [3, "\n"], [4, "# Install build dependencies with cleanup\n"], [5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"], [11, "\n"], [12, "# Install Python dependencies\n"], [13, "COPY requirements.txt .\n"], [14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"], [15, "\n"], [16, "# Production stage\n"], [17, "FROM python:3.11.7-slim@sha256:2b8e95356fd2b21f2b95b65b9c6b6b5c2c2b14c8b5be7f69b7b3c9d1e2f3a4b5\n"], [18, "\n"], [19, "# Security-hardened environment variables\n"], [20, "ENV PYTHONUNBUFFERED=1 \\\n"], [21, "    PYTHONDONTWRITEBYTECODE=1 \\\n"], [22, "    PYTHONHASHSEED=random \\\n"], [23, "    PIP_NO_CACHE_DIR=1 \\\n"], [24, "    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n"], [25, "    # Security features\n"], [26, "    CHAINLIT_HOST=0.0.0.0 \\\n"], [27, "    CHAINLIT_PORT=8080 \\\n"], [28, "    # Memory security\n"], [29, "    MALLOC_CHECK_=2\n"], [30, "\n"], [31, "# Install minimal runtime dependencies\n"], [32, "RUN apt-get update && \\\n"], [33, "    apt-get install -y --no-install-recommends \\\n"], [34, "        ca-certificates && \\\n"], [35, "    rm -rf /var/lib/apt/lists/* && \\\n"], [36, "    apt-get clean\n"], [37, "\n"], [38, "# Create secure non-root user\n"], [39, "RUN groupadd --gid 1000 appuser && \\\n"], [40, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"], [41, "\n"], [42, "# Set working directory\n"], [43, "WORKDIR /app\n"], [44, "\n"], [45, "# Copy Python packages from builder\n"], [46, "COPY --from=builder --chown=appuser:appuser /root/.local /home/appuser/.local\n"], [47, "ENV PATH=/home/appuser/.local/bin:$PATH\n"], [48, "\n"], [49, "# Copy application files with secure permissions\n"], [50, "COPY --chown=appuser:appuser main.py .\n"], [51, "COPY --chown=appuser:appuser healthcheck.py .\n"], [52, "\n"], [53, "# Create directories with proper permissions\n"], [54, "RUN mkdir -p /app/logs && \\\n"], [55, "    chmod 755 /app && \\\n"], [56, "    chmod 750 /app/logs && \\\n"], [57, "    chmod 644 /app/*.py && \\\n"], [58, "    chmod +x /app/healthcheck.py && \\\n"], [59, "    chown -R appuser:appuser /app\n"], [60, "\n"], [61, "# Switch to non-root user\n"], [62, "USER appuser\n"], [63, "\n"], [64, "# Expose port\n"], [65, "EXPOSE 8080\n"], [66, "\n"], [67, "# Secure health check\n"], [68, "HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \\\n"], [69, "    CMD python /app/healthcheck.py\n"], [70, "\n"], [71, "# Start command for Cloud Run\n"], [72, "CMD [\"python\", \"-m\", \"chainlit\", \"run\", \"main.py\", \"--host\", \"0.0.0.0\", \"--port\", \"8080\"]"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [1, 72], "resource": "/apps/chatbot/Dockerfile.secure.", "evaluations": null, "check_class": "checkov.dockerfile.checks.ExposePort22", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_DOCKER_9", "bc_check_id": null, "check_name": "Ensure that APT isn't used", "check_result": {"result": "PASSED", "results_configuration": null}, "code_block": [[1, "# Multi-stage build for enhanced security\n"], [2, "FROM python:3.11.7-slim@sha256:2b8e95356fd2b21f2b95b65b9c6b6b5c2c2b14c8b5be7f69b7b3c9d1e2f3a4b5 AS builder\n"], [3, "\n"], [4, "# Install build dependencies with cleanup\n"], [5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"], [11, "\n"], [12, "# Install Python dependencies\n"], [13, "COPY requirements.txt .\n"], [14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"], [15, "\n"], [16, "# Production stage\n"], [17, "FROM python:3.11.7-slim@sha256:2b8e95356fd2b21f2b95b65b9c6b6b5c2c2b14c8b5be7f69b7b3c9d1e2f3a4b5\n"], [18, "\n"], [19, "# Security-hardened environment variables\n"], [20, "ENV PYTHONUNBUFFERED=1 \\\n"], [21, "    PYTHONDONTWRITEBYTECODE=1 \\\n"], [22, "    PYTHONHASHSEED=random \\\n"], [23, "    PIP_NO_CACHE_DIR=1 \\\n"], [24, "    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n"], [25, "    # Security features\n"], [26, "    CHAINLIT_HOST=0.0.0.0 \\\n"], [27, "    CHAINLIT_PORT=8080 \\\n"], [28, "    # Memory security\n"], [29, "    MALLOC_CHECK_=2\n"], [30, "\n"], [31, "# Install minimal runtime dependencies\n"], [32, "RUN apt-get update && \\\n"], [33, "    apt-get install -y --no-install-recommends \\\n"], [34, "        ca-certificates && \\\n"], [35, "    rm -rf /var/lib/apt/lists/* && \\\n"], [36, "    apt-get clean\n"], [37, "\n"], [38, "# Create secure non-root user\n"], [39, "RUN groupadd --gid 1000 appuser && \\\n"], [40, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"], [41, "\n"], [42, "# Set working directory\n"], [43, "WORKDIR /app\n"], [44, "\n"], [45, "# Copy Python packages from builder\n"], [46, "COPY --from=builder --chown=appuser:appuser /root/.local /home/appuser/.local\n"], [47, "ENV PATH=/home/appuser/.local/bin:$PATH\n"], [48, "\n"], [49, "# Copy application files with secure permissions\n"], [50, "COPY --chown=appuser:appuser main.py .\n"], [51, "COPY --chown=appuser:appuser healthcheck.py .\n"], [52, "\n"], [53, "# Create directories with proper permissions\n"], [54, "RUN mkdir -p /app/logs && \\\n"], [55, "    chmod 755 /app && \\\n"], [56, "    chmod 750 /app/logs && \\\n"], [57, "    chmod 644 /app/*.py && \\\n"], [58, "    chmod +x /app/healthcheck.py && \\\n"], [59, "    chown -R appuser:appuser /app\n"], [60, "\n"], [61, "# Switch to non-root user\n"], [62, "USER appuser\n"], [63, "\n"], [64, "# Expose port\n"], [65, "EXPOSE 8080\n"], [66, "\n"], [67, "# Secure health check\n"], [68, "HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \\\n"], [69, "    CMD python /app/healthcheck.py\n"], [70, "\n"], [71, "# Start command for Cloud Run\n"], [72, "CMD [\"python\", \"-m\", \"chainlit\", \"run\", \"main.py\", \"--host\", \"0.0.0.0\", \"--port\", \"8080\"]"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [1, 72], "resource": "/apps/chatbot/Dockerfile.secure.", "evaluations": null, "check_class": "checkov.dockerfile.checks.RunUsingAPT", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_DOCKER_5", "bc_check_id": null, "check_name": "Ensure update instructions are not use alone in the Dockerfile", "check_result": {"result": "PASSED", "results_configuration": null}, "code_block": [[1, "# Multi-stage build for enhanced security\n"], [2, "FROM python:3.11.7-slim@sha256:2b8e95356fd2b21f2b95b65b9c6b6b5c2c2b14c8b5be7f69b7b3c9d1e2f3a4b5 AS builder\n"], [3, "\n"], [4, "# Install build dependencies with cleanup\n"], [5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"], [11, "\n"], [12, "# Install Python dependencies\n"], [13, "COPY requirements.txt .\n"], [14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"], [15, "\n"], [16, "# Production stage\n"], [17, "FROM python:3.11.7-slim@sha256:2b8e95356fd2b21f2b95b65b9c6b6b5c2c2b14c8b5be7f69b7b3c9d1e2f3a4b5\n"], [18, "\n"], [19, "# Security-hardened environment variables\n"], [20, "ENV PYTHONUNBUFFERED=1 \\\n"], [21, "    PYTHONDONTWRITEBYTECODE=1 \\\n"], [22, "    PYTHONHASHSEED=random \\\n"], [23, "    PIP_NO_CACHE_DIR=1 \\\n"], [24, "    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n"], [25, "    # Security features\n"], [26, "    CHAINLIT_HOST=0.0.0.0 \\\n"], [27, "    CHAINLIT_PORT=8080 \\\n"], [28, "    # Memory security\n"], [29, "    MALLOC_CHECK_=2\n"], [30, "\n"], [31, "# Install minimal runtime dependencies\n"], [32, "RUN apt-get update && \\\n"], [33, "    apt-get install -y --no-install-recommends \\\n"], [34, "        ca-certificates && \\\n"], [35, "    rm -rf /var/lib/apt/lists/* && \\\n"], [36, "    apt-get clean\n"], [37, "\n"], [38, "# Create secure non-root user\n"], [39, "RUN groupadd --gid 1000 appuser && \\\n"], [40, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"], [41, "\n"], [42, "# Set working directory\n"], [43, "WORKDIR /app\n"], [44, "\n"], [45, "# Copy Python packages from builder\n"], [46, "COPY --from=builder --chown=appuser:appuser /root/.local /home/appuser/.local\n"], [47, "ENV PATH=/home/appuser/.local/bin:$PATH\n"], [48, "\n"], [49, "# Copy application files with secure permissions\n"], [50, "COPY --chown=appuser:appuser main.py .\n"], [51, "COPY --chown=appuser:appuser healthcheck.py .\n"], [52, "\n"], [53, "# Create directories with proper permissions\n"], [54, "RUN mkdir -p /app/logs && \\\n"], [55, "    chmod 755 /app && \\\n"], [56, "    chmod 750 /app/logs && \\\n"], [57, "    chmod 644 /app/*.py && \\\n"], [58, "    chmod +x /app/healthcheck.py && \\\n"], [59, "    chown -R appuser:appuser /app\n"], [60, "\n"], [61, "# Switch to non-root user\n"], [62, "USER appuser\n"], [63, "\n"], [64, "# Expose port\n"], [65, "EXPOSE 8080\n"], [66, "\n"], [67, "# Secure health check\n"], [68, "HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \\\n"], [69, "    CMD python /app/healthcheck.py\n"], [70, "\n"], [71, "# Start command for Cloud Run\n"], [72, "CMD [\"python\", \"-m\", \"chainlit\", \"run\", \"main.py\", \"--host\", \"0.0.0.0\", \"--port\", \"8080\"]"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [1, 72], "resource": "/apps/chatbot/Dockerfile.secure.", "evaluations": null, "check_class": "checkov.dockerfile.checks.UpdateNotAlone", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_DOCKER_10", "bc_check_id": null, "check_name": "Ensure that WORKDIR values are absolute paths", "check_result": {"result": "PASSED", "results_configuration": null}, "code_block": [[1, "# Multi-stage build for enhanced security\n"], [2, "FROM python:3.11.7-slim@sha256:2b8e95356fd2b21f2b95b65b9c6b6b5c2c2b14c8b5be7f69b7b3c9d1e2f3a4b5 AS builder\n"], [3, "\n"], [4, "# Install build dependencies with cleanup\n"], [5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"], [11, "\n"], [12, "# Install Python dependencies\n"], [13, "COPY requirements.txt .\n"], [14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"], [15, "\n"], [16, "# Production stage\n"], [17, "FROM python:3.11.7-slim@sha256:2b8e95356fd2b21f2b95b65b9c6b6b5c2c2b14c8b5be7f69b7b3c9d1e2f3a4b5\n"], [18, "\n"], [19, "# Security-hardened environment variables\n"], [20, "ENV PYTHONUNBUFFERED=1 \\\n"], [21, "    PYTHONDONTWRITEBYTECODE=1 \\\n"], [22, "    PYTHONHASHSEED=random \\\n"], [23, "    PIP_NO_CACHE_DIR=1 \\\n"], [24, "    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n"], [25, "    # Security features\n"], [26, "    CHAINLIT_HOST=0.0.0.0 \\\n"], [27, "    CHAINLIT_PORT=8080 \\\n"], [28, "    # Memory security\n"], [29, "    MALLOC_CHECK_=2\n"], [30, "\n"], [31, "# Install minimal runtime dependencies\n"], [32, "RUN apt-get update && \\\n"], [33, "    apt-get install -y --no-install-recommends \\\n"], [34, "        ca-certificates && \\\n"], [35, "    rm -rf /var/lib/apt/lists/* && \\\n"], [36, "    apt-get clean\n"], [37, "\n"], [38, "# Create secure non-root user\n"], [39, "RUN groupadd --gid 1000 appuser && \\\n"], [40, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"], [41, "\n"], [42, "# Set working directory\n"], [43, "WORKDIR /app\n"], [44, "\n"], [45, "# Copy Python packages from builder\n"], [46, "COPY --from=builder --chown=appuser:appuser /root/.local /home/appuser/.local\n"], [47, "ENV PATH=/home/appuser/.local/bin:$PATH\n"], [48, "\n"], [49, "# Copy application files with secure permissions\n"], [50, "COPY --chown=appuser:appuser main.py .\n"], [51, "COPY --chown=appuser:appuser healthcheck.py .\n"], [52, "\n"], [53, "# Create directories with proper permissions\n"], [54, "RUN mkdir -p /app/logs && \\\n"], [55, "    chmod 755 /app && \\\n"], [56, "    chmod 750 /app/logs && \\\n"], [57, "    chmod 644 /app/*.py && \\\n"], [58, "    chmod +x /app/healthcheck.py && \\\n"], [59, "    chown -R appuser:appuser /app\n"], [60, "\n"], [61, "# Switch to non-root user\n"], [62, "USER appuser\n"], [63, "\n"], [64, "# Expose port\n"], [65, "EXPOSE 8080\n"], [66, "\n"], [67, "# Secure health check\n"], [68, "HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \\\n"], [69, "    CMD python /app/healthcheck.py\n"], [70, "\n"], [71, "# Start command for Cloud Run\n"], [72, "CMD [\"python\", \"-m\", \"chainlit\", \"run\", \"main.py\", \"--host\", \"0.0.0.0\", \"--port\", \"8080\"]"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [1, 72], "resource": "/apps/chatbot/Dockerfile.secure.", "evaluations": null, "check_class": "checkov.dockerfile.checks.WorkdirIsAbsolute", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_DOCKER_2", "bc_check_id": null, "check_name": "Ensure that HEALTHCHECK instructions have been added to container images", "check_result": {"result": "PASSED", "results_configuration": [{"instruction": "HEALTHCHECK", "startline": 67, "endline": 68, "content": "HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \\\n    CMD python /app/healthcheck.py\n", "value": "--interval=30s --timeout=10s --start-period=5s --retries=3     CMD python /app/healthcheck.py"}]}, "code_block": [[68, "HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \\\n"], [69, "    CMD python /app/healthcheck.py\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [68, 69], "resource": "/apps/chatbot/Dockerfile.secure.HEALTHCHECK", "evaluations": null, "check_class": "checkov.dockerfile.checks.HealthcheckExists", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_DOCKER_3", "bc_check_id": null, "check_name": "Ensure that a user for the container has been created", "check_result": {"result": "PASSED", "results_configuration": [{"instruction": "USER", "startline": 61, "endline": 61, "content": "USER appuser\n", "value": "appuser"}]}, "code_block": [[62, "USER appuser\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [62, 62], "resource": "/apps/chatbot/Dockerfile.secure.USER", "evaluations": null, "check_class": "checkov.dockerfile.checks.UserExists", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_16", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with pip via the 'PIP_TRUSTED_HOST' environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9, "resource_type": "RUN", "hash": "356327b8cba0e5b42ad6ebf6cdd6eb6815804cb2bc10e725ba7ea320865fb35f"}, "evaluated_keys": ["value"]}, "code_block": [[5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [5, 10], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_16", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with pip via the 'PIP_TRUSTED_HOST' environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13, "resource_type": "RUN", "hash": "0ecce5c9d6ed4de7d52dd31b4cf8656c6ca40f188cb68bcdc51cf7a3435f0911"}, "evaluated_keys": ["value"]}, "code_block": [[14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [14, 14], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_16", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with pip via the 'PIP_TRUSTED_HOST' environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n", "value": "pip install --no-cache-dir --user /tmp/cwe_ingestion/", "__startline__": 17, "__endline__": 17}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n", "value": "pip install --no-cache-dir --user /tmp/cwe_ingestion/", "__startline__": 17, "__endline__": 17, "resource_type": "RUN", "hash": "b3ea5d10af0655e321c59f00079e6e8c217386e287ec36b6a41fe5bf1a1c2989"}, "evaluated_keys": ["value"]}, "code_block": [[18, "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [18, 18], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_16", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with pip via the 'PIP_TRUSTED_HOST' environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 35, "__endline__": 39}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 35, "__endline__": 39, "resource_type": "RUN", "hash": "79f46ddec118a40fa13171a2fba6204a21a79bf7aa4ea611a4d62298000a39bc"}, "evaluated_keys": ["value"]}, "code_block": [[36, "RUN apt-get update && \\\n"], [37, "    apt-get install -y --no-install-recommends \\\n"], [38, "        ca-certificates && \\\n"], [39, "    rm -rf /var/lib/apt/lists/* && \\\n"], [40, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [36, 40], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_16", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with pip via the 'PIP_TRUSTED_HOST' environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 42, "__endline__": 43}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 42, "__endline__": 43, "resource_type": "RUN", "hash": "e127f4787431717d746b42ab0a00e6055452243ce949cb13c254e179589e5e9b"}, "evaluated_keys": ["value"]}, "code_block": [[43, "RUN groupadd --gid 1000 appuser && \\\n"], [44, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [43, 44], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_16", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with pip via the 'PIP_TRUSTED_HOST' environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN mkdir -p ./.chainlit ./public\n", "value": "mkdir -p ./.chainlit ./public", "__startline__": 56, "__endline__": 56}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p ./.chainlit ./public\n", "value": "mkdir -p ./.chainlit ./public", "__startline__": 56, "__endline__": 56, "resource_type": "RUN", "hash": "8b4b4366b191f373066ebeab94204a47bd6d4186046a26bbc35c3a27a1c416c9"}, "evaluated_keys": ["value"]}, "code_block": [[57, "RUN mkdir -p ./.chainlit ./public\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [57, 57], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_16", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with pip via the 'PIP_TRUSTED_HOST' environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py /app/chainlit.md && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py /app/chainlit.md &&     chown -R appuser:appuser /app", "__startline__": 60, "__endline__": 64}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py /app/chainlit.md && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py /app/chainlit.md &&     chown -R appuser:appuser /app", "__startline__": 60, "__endline__": 64, "resource_type": "RUN", "hash": "968962761996c89450c3c6c831fa6adae7a1d26fabfeab2bd65bd20f90dfeabc"}, "evaluated_keys": ["value"]}, "code_block": [[61, "RUN mkdir -p /app/logs && \\\n"], [62, "    chmod 755 /app && \\\n"], [63, "    chmod 750 /app/logs && \\\n"], [64, "    chmod 644 /app/*.py /app/chainlit.md && \\\n"], [65, "    chown -R appuser:appuser /app\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [61, 65], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_16", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with pip via the 'PIP_TRUSTED_HOST' environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "ENV", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "ENV PYTHONUNBUFFERED=1 \\\n    PYTHONDONTWRITEBYTECODE=1 \\\n    PYTHONHASHSEED=random \\\n    PIP_NO_CACHE_DIR=1 \\\n    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n    CHAINLIT_HOST=0.0.0.0 \\\n    CHAINLIT_PORT=8080 \\\n    MALLOC_CHECK_=2\n", "value": "PYTHONUNBUFFERED=1     PYTHONDONTWRITEBYTECODE=1     PYTHONHASHSEED=random     PIP_NO_CACHE_DIR=1     PIP_DISABLE_PIP_VERSION_CHECK=1     CHAINLIT_HOST=0.0.0.0     CHAINLIT_PORT=8080     MALLOC_CHECK_=2", "__startline__": 23, "__endline__": 32}, "label_": "resource: ENV", "id_": "ENV", "source_": "Dockerfile", "content": "ENV PYTHONUNBUFFERED=1 \\\n    PYTHONDONTWRITEBYTECODE=1 \\\n    PYTHONHASHSEED=random \\\n    PIP_NO_CACHE_DIR=1 \\\n    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n    CHAINLIT_HOST=0.0.0.0 \\\n    CHAINLIT_PORT=8080 \\\n    MALLOC_CHECK_=2\n", "value": "PYTHONUNBUFFERED=1     PYTHONDONTWRITEBYTECODE=1     PYTHONHASHSEED=random     PIP_NO_CACHE_DIR=1     PIP_DISABLE_PIP_VERSION_CHECK=1     CHAINLIT_HOST=0.0.0.0     CHAINLIT_PORT=8080     MALLOC_CHECK_=2", "__startline__": 23, "__endline__": 32, "resource_type": "ENV", "hash": "bc2cb08d60fee6e199fe22d8123f22b5929ee342069f927879a8a02bffe5c8a2"}, "evaluated_keys": ["value"]}, "code_block": [[24, "ENV PYTHONUNBUFFERED=1 \\\n"], [25, "    PYTHONDONTWRITEBYTECODE=1 \\\n"], [26, "    PYTHONHASHSEED=random \\\n"], [27, "    PIP_NO_CACHE_DIR=1 \\\n"], [28, "    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n"], [29, "    # Security features\n"], [30, "    CHAINLIT_HOST=0.0.0.0 \\\n"], [31, "    CHAINLIT_PORT=8080 \\\n"], [32, "    # Memory security\n"], [33, "    MALLOC_CHECK_=2\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [24, 33], "resource": "/apps/chatbot/Dockerfile.ENV", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_16", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with pip via the 'PIP_TRUSTED_HOST' environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "ENV", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "ENV PATH=/home/appuser/.local/bin:$PATH\n", "value": "PATH=/home/appuser/.local/bin:$PATH", "__startline__": 50, "__endline__": 50}, "label_": "resource: ENV", "id_": "ENV", "source_": "Dockerfile", "content": "ENV PATH=/home/appuser/.local/bin:$PATH\n", "value": "PATH=/home/appuser/.local/bin:$PATH", "__startline__": 50, "__endline__": 50, "resource_type": "ENV", "hash": "841ab2598f4be1046664ffd9b59c9ce73fba2f91cefdddf50e470c9d47b59d45"}, "evaluated_keys": ["value"]}, "code_block": [[51, "ENV PATH=/home/appuser/.local/bin:$PATH\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [51, 51], "resource": "/apps/chatbot/Dockerfile.ENV", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_16", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with pip via the 'PIP_TRUSTED_HOST' environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9, "resource_type": "RUN", "hash": "5e643101f0eb2e908e2ed30e55f7695cea5cddd31a1d0fa26a3c2f4290ff1307"}, "evaluated_keys": ["value"]}, "code_block": [[5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [5, 10], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_16", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with pip via the 'PIP_TRUSTED_HOST' environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13, "resource_type": "RUN", "hash": "ea58e290aadc1da0426820257be6a0195ba1aa64af3403c9ea66547979f26fb5"}, "evaluated_keys": ["value"]}, "code_block": [[14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [14, 14], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_16", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with pip via the 'PIP_TRUSTED_HOST' environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 31, "__endline__": 35}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 31, "__endline__": 35, "resource_type": "RUN", "hash": "4b837a125fbdb82fc32b01024470ea0adb0726512c78cfb0b12e09737e071222"}, "evaluated_keys": ["value"]}, "code_block": [[32, "RUN apt-get update && \\\n"], [33, "    apt-get install -y --no-install-recommends \\\n"], [34, "        ca-certificates && \\\n"], [35, "    rm -rf /var/lib/apt/lists/* && \\\n"], [36, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [32, 36], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_16", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with pip via the 'PIP_TRUSTED_HOST' environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 38, "__endline__": 39}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 38, "__endline__": 39, "resource_type": "RUN", "hash": "953888288557754d096763e73a8b3191302e5af2d8a5fddffb8c81b27a7fd23a"}, "evaluated_keys": ["value"]}, "code_block": [[39, "RUN groupadd --gid 1000 appuser && \\\n"], [40, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [39, 40], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_16", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with pip via the 'PIP_TRUSTED_HOST' environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py && \\\n    chmod +x /app/healthcheck.py && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py &&     chmod +x /app/healthcheck.py &&     chown -R appuser:appuser /app", "__startline__": 53, "__endline__": 58}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py && \\\n    chmod +x /app/healthcheck.py && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py &&     chmod +x /app/healthcheck.py &&     chown -R appuser:appuser /app", "__startline__": 53, "__endline__": 58, "resource_type": "RUN", "hash": "eacfc2e4248331c80311dfd7dd317301804f631030a21c81a608cc34db588f4e"}, "evaluated_keys": ["value"]}, "code_block": [[54, "RUN mkdir -p /app/logs && \\\n"], [55, "    chmod 755 /app && \\\n"], [56, "    chmod 750 /app/logs && \\\n"], [57, "    chmod 644 /app/*.py && \\\n"], [58, "    chmod +x /app/healthcheck.py && \\\n"], [59, "    chown -R appuser:appuser /app\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [54, 59], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_16", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with pip via the 'PIP_TRUSTED_HOST' environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "ENV", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "ENV PYTHONUNBUFFERED=1 \\\n    PYTHONDONTWRITEBYTECODE=1 \\\n    PYTHONHASHSEED=random \\\n    PIP_NO_CACHE_DIR=1 \\\n    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n    CHAINLIT_HOST=0.0.0.0 \\\n    CHAINLIT_PORT=8080 \\\n    MALLOC_CHECK_=2\n", "value": "PYTHONUNBUFFERED=1     PYTHONDONTWRITEBYTECODE=1     PYTHONHASHSEED=random     PIP_NO_CACHE_DIR=1     PIP_DISABLE_PIP_VERSION_CHECK=1     CHAINLIT_HOST=0.0.0.0     CHAINLIT_PORT=8080     MALLOC_CHECK_=2", "__startline__": 19, "__endline__": 28}, "label_": "resource: ENV", "id_": "ENV", "source_": "Dockerfile", "content": "ENV PYTHONUNBUFFERED=1 \\\n    PYTHONDONTWRITEBYTECODE=1 \\\n    PYTHONHASHSEED=random \\\n    PIP_NO_CACHE_DIR=1 \\\n    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n    CHAINLIT_HOST=0.0.0.0 \\\n    CHAINLIT_PORT=8080 \\\n    MALLOC_CHECK_=2\n", "value": "PYTHONUNBUFFERED=1     PYTHONDONTWRITEBYTECODE=1     PYTHONHASHSEED=random     PIP_NO_CACHE_DIR=1     PIP_DISABLE_PIP_VERSION_CHECK=1     CHAINLIT_HOST=0.0.0.0     CHAINLIT_PORT=8080     MALLOC_CHECK_=2", "__startline__": 19, "__endline__": 28, "resource_type": "ENV", "hash": "8221ae8cfb39d8076eefeb86d64ff8b317a55caf10ac125548bf5fb42e66c410"}, "evaluated_keys": ["value"]}, "code_block": [[20, "ENV PYTHONUNBUFFERED=1 \\\n"], [21, "    PYTHONDONTWRITEBYTECODE=1 \\\n"], [22, "    PYTHONHASHSEED=random \\\n"], [23, "    PIP_NO_CACHE_DIR=1 \\\n"], [24, "    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n"], [25, "    # Security features\n"], [26, "    CHAINLIT_HOST=0.0.0.0 \\\n"], [27, "    CHAINLIT_PORT=8080 \\\n"], [28, "    # Memory security\n"], [29, "    MALLOC_CHECK_=2\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [20, 29], "resource": "/apps/chatbot/Dockerfile.secure.ENV", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_16", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with pip via the 'PIP_TRUSTED_HOST' environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "ENV", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "ENV PATH=/home/appuser/.local/bin:$PATH\n", "value": "PATH=/home/appuser/.local/bin:$PATH", "__startline__": 46, "__endline__": 46}, "label_": "resource: ENV", "id_": "ENV", "source_": "Dockerfile", "content": "ENV PATH=/home/appuser/.local/bin:$PATH\n", "value": "PATH=/home/appuser/.local/bin:$PATH", "__startline__": 46, "__endline__": 46, "resource_type": "ENV", "hash": "e4a28b21ff5b3fc3dcfe2901b36eee744f27e146945279718785b242b35bcd31"}, "evaluated_keys": ["value"]}, "code_block": [[47, "ENV PATH=/home/appuser/.local/bin:$PATH\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [47, 47], "resource": "/apps/chatbot/Dockerfile.secure.ENV", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_1", "bc_check_id": null, "check_name": "Ensure that sudo isn't used", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9, "resource_type": "RUN", "hash": "356327b8cba0e5b42ad6ebf6cdd6eb6815804cb2bc10e725ba7ea320865fb35f"}, "evaluated_keys": ["value"]}, "code_block": [[5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [5, 10], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_1", "bc_check_id": null, "check_name": "Ensure that sudo isn't used", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13, "resource_type": "RUN", "hash": "0ecce5c9d6ed4de7d52dd31b4cf8656c6ca40f188cb68bcdc51cf7a3435f0911"}, "evaluated_keys": ["value"]}, "code_block": [[14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [14, 14], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_1", "bc_check_id": null, "check_name": "Ensure that sudo isn't used", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n", "value": "pip install --no-cache-dir --user /tmp/cwe_ingestion/", "__startline__": 17, "__endline__": 17}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n", "value": "pip install --no-cache-dir --user /tmp/cwe_ingestion/", "__startline__": 17, "__endline__": 17, "resource_type": "RUN", "hash": "b3ea5d10af0655e321c59f00079e6e8c217386e287ec36b6a41fe5bf1a1c2989"}, "evaluated_keys": ["value"]}, "code_block": [[18, "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [18, 18], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_1", "bc_check_id": null, "check_name": "Ensure that sudo isn't used", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 35, "__endline__": 39}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 35, "__endline__": 39, "resource_type": "RUN", "hash": "79f46ddec118a40fa13171a2fba6204a21a79bf7aa4ea611a4d62298000a39bc"}, "evaluated_keys": ["value"]}, "code_block": [[36, "RUN apt-get update && \\\n"], [37, "    apt-get install -y --no-install-recommends \\\n"], [38, "        ca-certificates && \\\n"], [39, "    rm -rf /var/lib/apt/lists/* && \\\n"], [40, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [36, 40], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_1", "bc_check_id": null, "check_name": "Ensure that sudo isn't used", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 42, "__endline__": 43}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 42, "__endline__": 43, "resource_type": "RUN", "hash": "e127f4787431717d746b42ab0a00e6055452243ce949cb13c254e179589e5e9b"}, "evaluated_keys": ["value"]}, "code_block": [[43, "RUN groupadd --gid 1000 appuser && \\\n"], [44, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [43, 44], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_1", "bc_check_id": null, "check_name": "Ensure that sudo isn't used", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN mkdir -p ./.chainlit ./public\n", "value": "mkdir -p ./.chainlit ./public", "__startline__": 56, "__endline__": 56}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p ./.chainlit ./public\n", "value": "mkdir -p ./.chainlit ./public", "__startline__": 56, "__endline__": 56, "resource_type": "RUN", "hash": "8b4b4366b191f373066ebeab94204a47bd6d4186046a26bbc35c3a27a1c416c9"}, "evaluated_keys": ["value"]}, "code_block": [[57, "RUN mkdir -p ./.chainlit ./public\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [57, 57], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_1", "bc_check_id": null, "check_name": "Ensure that sudo isn't used", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py /app/chainlit.md && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py /app/chainlit.md &&     chown -R appuser:appuser /app", "__startline__": 60, "__endline__": 64}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py /app/chainlit.md && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py /app/chainlit.md &&     chown -R appuser:appuser /app", "__startline__": 60, "__endline__": 64, "resource_type": "RUN", "hash": "968962761996c89450c3c6c831fa6adae7a1d26fabfeab2bd65bd20f90dfeabc"}, "evaluated_keys": ["value"]}, "code_block": [[61, "RUN mkdir -p /app/logs && \\\n"], [62, "    chmod 755 /app && \\\n"], [63, "    chmod 750 /app/logs && \\\n"], [64, "    chmod 644 /app/*.py /app/chainlit.md && \\\n"], [65, "    chown -R appuser:appuser /app\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [61, 65], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_1", "bc_check_id": null, "check_name": "Ensure that sudo isn't used", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9, "resource_type": "RUN", "hash": "5e643101f0eb2e908e2ed30e55f7695cea5cddd31a1d0fa26a3c2f4290ff1307"}, "evaluated_keys": ["value"]}, "code_block": [[5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [5, 10], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_1", "bc_check_id": null, "check_name": "Ensure that sudo isn't used", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13, "resource_type": "RUN", "hash": "ea58e290aadc1da0426820257be6a0195ba1aa64af3403c9ea66547979f26fb5"}, "evaluated_keys": ["value"]}, "code_block": [[14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [14, 14], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_1", "bc_check_id": null, "check_name": "Ensure that sudo isn't used", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 31, "__endline__": 35}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 31, "__endline__": 35, "resource_type": "RUN", "hash": "4b837a125fbdb82fc32b01024470ea0adb0726512c78cfb0b12e09737e071222"}, "evaluated_keys": ["value"]}, "code_block": [[32, "RUN apt-get update && \\\n"], [33, "    apt-get install -y --no-install-recommends \\\n"], [34, "        ca-certificates && \\\n"], [35, "    rm -rf /var/lib/apt/lists/* && \\\n"], [36, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [32, 36], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_1", "bc_check_id": null, "check_name": "Ensure that sudo isn't used", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 38, "__endline__": 39}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 38, "__endline__": 39, "resource_type": "RUN", "hash": "953888288557754d096763e73a8b3191302e5af2d8a5fddffb8c81b27a7fd23a"}, "evaluated_keys": ["value"]}, "code_block": [[39, "RUN groupadd --gid 1000 appuser && \\\n"], [40, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [39, 40], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_1", "bc_check_id": null, "check_name": "Ensure that sudo isn't used", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py && \\\n    chmod +x /app/healthcheck.py && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py &&     chmod +x /app/healthcheck.py &&     chown -R appuser:appuser /app", "__startline__": 53, "__endline__": 58}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py && \\\n    chmod +x /app/healthcheck.py && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py &&     chmod +x /app/healthcheck.py &&     chown -R appuser:appuser /app", "__startline__": 53, "__endline__": 58, "resource_type": "RUN", "hash": "eacfc2e4248331c80311dfd7dd317301804f631030a21c81a608cc34db588f4e"}, "evaluated_keys": ["value"]}, "code_block": [[54, "RUN mkdir -p /app/logs && \\\n"], [55, "    chmod 755 /app && \\\n"], [56, "    chmod 750 /app/logs && \\\n"], [57, "    chmod 644 /app/*.py && \\\n"], [58, "    chmod +x /app/healthcheck.py && \\\n"], [59, "    chown -R appuser:appuser /app\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [54, 59], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_14", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for git by setting the environment variable 'GIT_SSL_NO_VERIFY' to any value", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9, "resource_type": "RUN", "hash": "356327b8cba0e5b42ad6ebf6cdd6eb6815804cb2bc10e725ba7ea320865fb35f"}, "evaluated_keys": ["value"]}, "code_block": [[5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [5, 10], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_14", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for git by setting the environment variable 'GIT_SSL_NO_VERIFY' to any value", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13, "resource_type": "RUN", "hash": "0ecce5c9d6ed4de7d52dd31b4cf8656c6ca40f188cb68bcdc51cf7a3435f0911"}, "evaluated_keys": ["value"]}, "code_block": [[14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [14, 14], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_14", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for git by setting the environment variable 'GIT_SSL_NO_VERIFY' to any value", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n", "value": "pip install --no-cache-dir --user /tmp/cwe_ingestion/", "__startline__": 17, "__endline__": 17}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n", "value": "pip install --no-cache-dir --user /tmp/cwe_ingestion/", "__startline__": 17, "__endline__": 17, "resource_type": "RUN", "hash": "b3ea5d10af0655e321c59f00079e6e8c217386e287ec36b6a41fe5bf1a1c2989"}, "evaluated_keys": ["value"]}, "code_block": [[18, "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [18, 18], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_14", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for git by setting the environment variable 'GIT_SSL_NO_VERIFY' to any value", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 35, "__endline__": 39}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 35, "__endline__": 39, "resource_type": "RUN", "hash": "79f46ddec118a40fa13171a2fba6204a21a79bf7aa4ea611a4d62298000a39bc"}, "evaluated_keys": ["value"]}, "code_block": [[36, "RUN apt-get update && \\\n"], [37, "    apt-get install -y --no-install-recommends \\\n"], [38, "        ca-certificates && \\\n"], [39, "    rm -rf /var/lib/apt/lists/* && \\\n"], [40, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [36, 40], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_14", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for git by setting the environment variable 'GIT_SSL_NO_VERIFY' to any value", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 42, "__endline__": 43}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 42, "__endline__": 43, "resource_type": "RUN", "hash": "e127f4787431717d746b42ab0a00e6055452243ce949cb13c254e179589e5e9b"}, "evaluated_keys": ["value"]}, "code_block": [[43, "RUN groupadd --gid 1000 appuser && \\\n"], [44, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [43, 44], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_14", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for git by setting the environment variable 'GIT_SSL_NO_VERIFY' to any value", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN mkdir -p ./.chainlit ./public\n", "value": "mkdir -p ./.chainlit ./public", "__startline__": 56, "__endline__": 56}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p ./.chainlit ./public\n", "value": "mkdir -p ./.chainlit ./public", "__startline__": 56, "__endline__": 56, "resource_type": "RUN", "hash": "8b4b4366b191f373066ebeab94204a47bd6d4186046a26bbc35c3a27a1c416c9"}, "evaluated_keys": ["value"]}, "code_block": [[57, "RUN mkdir -p ./.chainlit ./public\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [57, 57], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_14", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for git by setting the environment variable 'GIT_SSL_NO_VERIFY' to any value", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py /app/chainlit.md && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py /app/chainlit.md &&     chown -R appuser:appuser /app", "__startline__": 60, "__endline__": 64}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py /app/chainlit.md && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py /app/chainlit.md &&     chown -R appuser:appuser /app", "__startline__": 60, "__endline__": 64, "resource_type": "RUN", "hash": "968962761996c89450c3c6c831fa6adae7a1d26fabfeab2bd65bd20f90dfeabc"}, "evaluated_keys": ["value"]}, "code_block": [[61, "RUN mkdir -p /app/logs && \\\n"], [62, "    chmod 755 /app && \\\n"], [63, "    chmod 750 /app/logs && \\\n"], [64, "    chmod 644 /app/*.py /app/chainlit.md && \\\n"], [65, "    chown -R appuser:appuser /app\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [61, 65], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_14", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for git by setting the environment variable 'GIT_SSL_NO_VERIFY' to any value", "check_result": {"result": "PASSED", "entity": {"block_name_": "ENV", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "ENV PYTHONUNBUFFERED=1 \\\n    PYTHONDONTWRITEBYTECODE=1 \\\n    PYTHONHASHSEED=random \\\n    PIP_NO_CACHE_DIR=1 \\\n    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n    CHAINLIT_HOST=0.0.0.0 \\\n    CHAINLIT_PORT=8080 \\\n    MALLOC_CHECK_=2\n", "value": "PYTHONUNBUFFERED=1     PYTHONDONTWRITEBYTECODE=1     PYTHONHASHSEED=random     PIP_NO_CACHE_DIR=1     PIP_DISABLE_PIP_VERSION_CHECK=1     CHAINLIT_HOST=0.0.0.0     CHAINLIT_PORT=8080     MALLOC_CHECK_=2", "__startline__": 23, "__endline__": 32}, "label_": "resource: ENV", "id_": "ENV", "source_": "Dockerfile", "content": "ENV PYTHONUNBUFFERED=1 \\\n    PYTHONDONTWRITEBYTECODE=1 \\\n    PYTHONHASHSEED=random \\\n    PIP_NO_CACHE_DIR=1 \\\n    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n    CHAINLIT_HOST=0.0.0.0 \\\n    CHAINLIT_PORT=8080 \\\n    MALLOC_CHECK_=2\n", "value": "PYTHONUNBUFFERED=1     PYTHONDONTWRITEBYTECODE=1     PYTHONHASHSEED=random     PIP_NO_CACHE_DIR=1     PIP_DISABLE_PIP_VERSION_CHECK=1     CHAINLIT_HOST=0.0.0.0     CHAINLIT_PORT=8080     MALLOC_CHECK_=2", "__startline__": 23, "__endline__": 32, "resource_type": "ENV", "hash": "bc2cb08d60fee6e199fe22d8123f22b5929ee342069f927879a8a02bffe5c8a2"}, "evaluated_keys": ["value"]}, "code_block": [[24, "ENV PYTHONUNBUFFERED=1 \\\n"], [25, "    PYTHONDONTWRITEBYTECODE=1 \\\n"], [26, "    PYTHONHASHSEED=random \\\n"], [27, "    PIP_NO_CACHE_DIR=1 \\\n"], [28, "    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n"], [29, "    # Security features\n"], [30, "    CHAINLIT_HOST=0.0.0.0 \\\n"], [31, "    CHAINLIT_PORT=8080 \\\n"], [32, "    # Memory security\n"], [33, "    MALLOC_CHECK_=2\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [24, 33], "resource": "/apps/chatbot/Dockerfile.ENV", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_14", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for git by setting the environment variable 'GIT_SSL_NO_VERIFY' to any value", "check_result": {"result": "PASSED", "entity": {"block_name_": "ENV", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "ENV PATH=/home/appuser/.local/bin:$PATH\n", "value": "PATH=/home/appuser/.local/bin:$PATH", "__startline__": 50, "__endline__": 50}, "label_": "resource: ENV", "id_": "ENV", "source_": "Dockerfile", "content": "ENV PATH=/home/appuser/.local/bin:$PATH\n", "value": "PATH=/home/appuser/.local/bin:$PATH", "__startline__": 50, "__endline__": 50, "resource_type": "ENV", "hash": "841ab2598f4be1046664ffd9b59c9ce73fba2f91cefdddf50e470c9d47b59d45"}, "evaluated_keys": ["value"]}, "code_block": [[51, "ENV PATH=/home/appuser/.local/bin:$PATH\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [51, 51], "resource": "/apps/chatbot/Dockerfile.ENV", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_14", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for git by setting the environment variable 'GIT_SSL_NO_VERIFY' to any value", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9, "resource_type": "RUN", "hash": "5e643101f0eb2e908e2ed30e55f7695cea5cddd31a1d0fa26a3c2f4290ff1307"}, "evaluated_keys": ["value"]}, "code_block": [[5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [5, 10], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_14", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for git by setting the environment variable 'GIT_SSL_NO_VERIFY' to any value", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13, "resource_type": "RUN", "hash": "ea58e290aadc1da0426820257be6a0195ba1aa64af3403c9ea66547979f26fb5"}, "evaluated_keys": ["value"]}, "code_block": [[14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [14, 14], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_14", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for git by setting the environment variable 'GIT_SSL_NO_VERIFY' to any value", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 31, "__endline__": 35}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 31, "__endline__": 35, "resource_type": "RUN", "hash": "4b837a125fbdb82fc32b01024470ea0adb0726512c78cfb0b12e09737e071222"}, "evaluated_keys": ["value"]}, "code_block": [[32, "RUN apt-get update && \\\n"], [33, "    apt-get install -y --no-install-recommends \\\n"], [34, "        ca-certificates && \\\n"], [35, "    rm -rf /var/lib/apt/lists/* && \\\n"], [36, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [32, 36], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_14", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for git by setting the environment variable 'GIT_SSL_NO_VERIFY' to any value", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 38, "__endline__": 39}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 38, "__endline__": 39, "resource_type": "RUN", "hash": "953888288557754d096763e73a8b3191302e5af2d8a5fddffb8c81b27a7fd23a"}, "evaluated_keys": ["value"]}, "code_block": [[39, "RUN groupadd --gid 1000 appuser && \\\n"], [40, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [39, 40], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_14", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for git by setting the environment variable 'GIT_SSL_NO_VERIFY' to any value", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py && \\\n    chmod +x /app/healthcheck.py && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py &&     chmod +x /app/healthcheck.py &&     chown -R appuser:appuser /app", "__startline__": 53, "__endline__": 58}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py && \\\n    chmod +x /app/healthcheck.py && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py &&     chmod +x /app/healthcheck.py &&     chown -R appuser:appuser /app", "__startline__": 53, "__endline__": 58, "resource_type": "RUN", "hash": "eacfc2e4248331c80311dfd7dd317301804f631030a21c81a608cc34db588f4e"}, "evaluated_keys": ["value"]}, "code_block": [[54, "RUN mkdir -p /app/logs && \\\n"], [55, "    chmod 755 /app && \\\n"], [56, "    chmod 750 /app/logs && \\\n"], [57, "    chmod 644 /app/*.py && \\\n"], [58, "    chmod +x /app/healthcheck.py && \\\n"], [59, "    chown -R appuser:appuser /app\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [54, 59], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_14", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for git by setting the environment variable 'GIT_SSL_NO_VERIFY' to any value", "check_result": {"result": "PASSED", "entity": {"block_name_": "ENV", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "ENV PYTHONUNBUFFERED=1 \\\n    PYTHONDONTWRITEBYTECODE=1 \\\n    PYTHONHASHSEED=random \\\n    PIP_NO_CACHE_DIR=1 \\\n    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n    CHAINLIT_HOST=0.0.0.0 \\\n    CHAINLIT_PORT=8080 \\\n    MALLOC_CHECK_=2\n", "value": "PYTHONUNBUFFERED=1     PYTHONDONTWRITEBYTECODE=1     PYTHONHASHSEED=random     PIP_NO_CACHE_DIR=1     PIP_DISABLE_PIP_VERSION_CHECK=1     CHAINLIT_HOST=0.0.0.0     CHAINLIT_PORT=8080     MALLOC_CHECK_=2", "__startline__": 19, "__endline__": 28}, "label_": "resource: ENV", "id_": "ENV", "source_": "Dockerfile", "content": "ENV PYTHONUNBUFFERED=1 \\\n    PYTHONDONTWRITEBYTECODE=1 \\\n    PYTHONHASHSEED=random \\\n    PIP_NO_CACHE_DIR=1 \\\n    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n    CHAINLIT_HOST=0.0.0.0 \\\n    CHAINLIT_PORT=8080 \\\n    MALLOC_CHECK_=2\n", "value": "PYTHONUNBUFFERED=1     PYTHONDONTWRITEBYTECODE=1     PYTHONHASHSEED=random     PIP_NO_CACHE_DIR=1     PIP_DISABLE_PIP_VERSION_CHECK=1     CHAINLIT_HOST=0.0.0.0     CHAINLIT_PORT=8080     MALLOC_CHECK_=2", "__startline__": 19, "__endline__": 28, "resource_type": "ENV", "hash": "8221ae8cfb39d8076eefeb86d64ff8b317a55caf10ac125548bf5fb42e66c410"}, "evaluated_keys": ["value"]}, "code_block": [[20, "ENV PYTHONUNBUFFERED=1 \\\n"], [21, "    PYTHONDONTWRITEBYTECODE=1 \\\n"], [22, "    PYTHONHASHSEED=random \\\n"], [23, "    PIP_NO_CACHE_DIR=1 \\\n"], [24, "    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n"], [25, "    # Security features\n"], [26, "    CHAINLIT_HOST=0.0.0.0 \\\n"], [27, "    CHAINLIT_PORT=8080 \\\n"], [28, "    # Memory security\n"], [29, "    MALLOC_CHECK_=2\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [20, 29], "resource": "/apps/chatbot/Dockerfile.secure.ENV", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_14", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for git by setting the environment variable 'GIT_SSL_NO_VERIFY' to any value", "check_result": {"result": "PASSED", "entity": {"block_name_": "ENV", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "ENV PATH=/home/appuser/.local/bin:$PATH\n", "value": "PATH=/home/appuser/.local/bin:$PATH", "__startline__": 46, "__endline__": 46}, "label_": "resource: ENV", "id_": "ENV", "source_": "Dockerfile", "content": "ENV PATH=/home/appuser/.local/bin:$PATH\n", "value": "PATH=/home/appuser/.local/bin:$PATH", "__startline__": 46, "__endline__": 46, "resource_type": "ENV", "hash": "e4a28b21ff5b3fc3dcfe2901b36eee744f27e146945279718785b242b35bcd31"}, "evaluated_keys": ["value"]}, "code_block": [[47, "ENV PATH=/home/appuser/.local/bin:$PATH\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [47, 47], "resource": "/apps/chatbot/Dockerfile.secure.ENV", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_17", "bc_check_id": null, "check_name": "Ensure that 'chpasswd' is not used to set or remove passwords", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9, "resource_type": "RUN", "hash": "356327b8cba0e5b42ad6ebf6cdd6eb6815804cb2bc10e725ba7ea320865fb35f"}, "evaluated_keys": ["value"]}, "code_block": [[5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [5, 10], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_17", "bc_check_id": null, "check_name": "Ensure that 'chpasswd' is not used to set or remove passwords", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13, "resource_type": "RUN", "hash": "0ecce5c9d6ed4de7d52dd31b4cf8656c6ca40f188cb68bcdc51cf7a3435f0911"}, "evaluated_keys": ["value"]}, "code_block": [[14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [14, 14], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_17", "bc_check_id": null, "check_name": "Ensure that 'chpasswd' is not used to set or remove passwords", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n", "value": "pip install --no-cache-dir --user /tmp/cwe_ingestion/", "__startline__": 17, "__endline__": 17}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n", "value": "pip install --no-cache-dir --user /tmp/cwe_ingestion/", "__startline__": 17, "__endline__": 17, "resource_type": "RUN", "hash": "b3ea5d10af0655e321c59f00079e6e8c217386e287ec36b6a41fe5bf1a1c2989"}, "evaluated_keys": ["value"]}, "code_block": [[18, "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [18, 18], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_17", "bc_check_id": null, "check_name": "Ensure that 'chpasswd' is not used to set or remove passwords", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 35, "__endline__": 39}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 35, "__endline__": 39, "resource_type": "RUN", "hash": "79f46ddec118a40fa13171a2fba6204a21a79bf7aa4ea611a4d62298000a39bc"}, "evaluated_keys": ["value"]}, "code_block": [[36, "RUN apt-get update && \\\n"], [37, "    apt-get install -y --no-install-recommends \\\n"], [38, "        ca-certificates && \\\n"], [39, "    rm -rf /var/lib/apt/lists/* && \\\n"], [40, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [36, 40], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_17", "bc_check_id": null, "check_name": "Ensure that 'chpasswd' is not used to set or remove passwords", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 42, "__endline__": 43}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 42, "__endline__": 43, "resource_type": "RUN", "hash": "e127f4787431717d746b42ab0a00e6055452243ce949cb13c254e179589e5e9b"}, "evaluated_keys": ["value"]}, "code_block": [[43, "RUN groupadd --gid 1000 appuser && \\\n"], [44, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [43, 44], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_17", "bc_check_id": null, "check_name": "Ensure that 'chpasswd' is not used to set or remove passwords", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN mkdir -p ./.chainlit ./public\n", "value": "mkdir -p ./.chainlit ./public", "__startline__": 56, "__endline__": 56}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p ./.chainlit ./public\n", "value": "mkdir -p ./.chainlit ./public", "__startline__": 56, "__endline__": 56, "resource_type": "RUN", "hash": "8b4b4366b191f373066ebeab94204a47bd6d4186046a26bbc35c3a27a1c416c9"}, "evaluated_keys": ["value"]}, "code_block": [[57, "RUN mkdir -p ./.chainlit ./public\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [57, 57], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_17", "bc_check_id": null, "check_name": "Ensure that 'chpasswd' is not used to set or remove passwords", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py /app/chainlit.md && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py /app/chainlit.md &&     chown -R appuser:appuser /app", "__startline__": 60, "__endline__": 64}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py /app/chainlit.md && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py /app/chainlit.md &&     chown -R appuser:appuser /app", "__startline__": 60, "__endline__": 64, "resource_type": "RUN", "hash": "968962761996c89450c3c6c831fa6adae7a1d26fabfeab2bd65bd20f90dfeabc"}, "evaluated_keys": ["value"]}, "code_block": [[61, "RUN mkdir -p /app/logs && \\\n"], [62, "    chmod 755 /app && \\\n"], [63, "    chmod 750 /app/logs && \\\n"], [64, "    chmod 644 /app/*.py /app/chainlit.md && \\\n"], [65, "    chown -R appuser:appuser /app\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [61, 65], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_17", "bc_check_id": null, "check_name": "Ensure that 'chpasswd' is not used to set or remove passwords", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9, "resource_type": "RUN", "hash": "5e643101f0eb2e908e2ed30e55f7695cea5cddd31a1d0fa26a3c2f4290ff1307"}, "evaluated_keys": ["value"]}, "code_block": [[5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [5, 10], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_17", "bc_check_id": null, "check_name": "Ensure that 'chpasswd' is not used to set or remove passwords", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13, "resource_type": "RUN", "hash": "ea58e290aadc1da0426820257be6a0195ba1aa64af3403c9ea66547979f26fb5"}, "evaluated_keys": ["value"]}, "code_block": [[14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [14, 14], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_17", "bc_check_id": null, "check_name": "Ensure that 'chpasswd' is not used to set or remove passwords", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 31, "__endline__": 35}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 31, "__endline__": 35, "resource_type": "RUN", "hash": "4b837a125fbdb82fc32b01024470ea0adb0726512c78cfb0b12e09737e071222"}, "evaluated_keys": ["value"]}, "code_block": [[32, "RUN apt-get update && \\\n"], [33, "    apt-get install -y --no-install-recommends \\\n"], [34, "        ca-certificates && \\\n"], [35, "    rm -rf /var/lib/apt/lists/* && \\\n"], [36, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [32, 36], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_17", "bc_check_id": null, "check_name": "Ensure that 'chpasswd' is not used to set or remove passwords", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 38, "__endline__": 39}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 38, "__endline__": 39, "resource_type": "RUN", "hash": "953888288557754d096763e73a8b3191302e5af2d8a5fddffb8c81b27a7fd23a"}, "evaluated_keys": ["value"]}, "code_block": [[39, "RUN groupadd --gid 1000 appuser && \\\n"], [40, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [39, 40], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_17", "bc_check_id": null, "check_name": "Ensure that 'chpasswd' is not used to set or remove passwords", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py && \\\n    chmod +x /app/healthcheck.py && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py &&     chmod +x /app/healthcheck.py &&     chown -R appuser:appuser /app", "__startline__": 53, "__endline__": 58}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py && \\\n    chmod +x /app/healthcheck.py && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py &&     chmod +x /app/healthcheck.py &&     chown -R appuser:appuser /app", "__startline__": 53, "__endline__": 58, "resource_type": "RUN", "hash": "eacfc2e4248331c80311dfd7dd317301804f631030a21c81a608cc34db588f4e"}, "evaluated_keys": ["value"]}, "code_block": [[54, "RUN mkdir -p /app/logs && \\\n"], [55, "    chmod 755 /app && \\\n"], [56, "    chmod 750 /app/logs && \\\n"], [57, "    chmod 644 /app/*.py && \\\n"], [58, "    chmod +x /app/healthcheck.py && \\\n"], [59, "    chown -R appuser:appuser /app\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [54, 59], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_6", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the NODE_TLS_REJECT_UNAUTHORIZED environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9, "resource_type": "RUN", "hash": "356327b8cba0e5b42ad6ebf6cdd6eb6815804cb2bc10e725ba7ea320865fb35f"}, "evaluated_keys": ["value"]}, "code_block": [[5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [5, 10], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_6", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the NODE_TLS_REJECT_UNAUTHORIZED environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13, "resource_type": "RUN", "hash": "0ecce5c9d6ed4de7d52dd31b4cf8656c6ca40f188cb68bcdc51cf7a3435f0911"}, "evaluated_keys": ["value"]}, "code_block": [[14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [14, 14], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_6", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the NODE_TLS_REJECT_UNAUTHORIZED environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n", "value": "pip install --no-cache-dir --user /tmp/cwe_ingestion/", "__startline__": 17, "__endline__": 17}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n", "value": "pip install --no-cache-dir --user /tmp/cwe_ingestion/", "__startline__": 17, "__endline__": 17, "resource_type": "RUN", "hash": "b3ea5d10af0655e321c59f00079e6e8c217386e287ec36b6a41fe5bf1a1c2989"}, "evaluated_keys": ["value"]}, "code_block": [[18, "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [18, 18], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_6", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the NODE_TLS_REJECT_UNAUTHORIZED environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 35, "__endline__": 39}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 35, "__endline__": 39, "resource_type": "RUN", "hash": "79f46ddec118a40fa13171a2fba6204a21a79bf7aa4ea611a4d62298000a39bc"}, "evaluated_keys": ["value"]}, "code_block": [[36, "RUN apt-get update && \\\n"], [37, "    apt-get install -y --no-install-recommends \\\n"], [38, "        ca-certificates && \\\n"], [39, "    rm -rf /var/lib/apt/lists/* && \\\n"], [40, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [36, 40], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_6", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the NODE_TLS_REJECT_UNAUTHORIZED environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 42, "__endline__": 43}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 42, "__endline__": 43, "resource_type": "RUN", "hash": "e127f4787431717d746b42ab0a00e6055452243ce949cb13c254e179589e5e9b"}, "evaluated_keys": ["value"]}, "code_block": [[43, "RUN groupadd --gid 1000 appuser && \\\n"], [44, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [43, 44], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_6", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the NODE_TLS_REJECT_UNAUTHORIZED environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN mkdir -p ./.chainlit ./public\n", "value": "mkdir -p ./.chainlit ./public", "__startline__": 56, "__endline__": 56}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p ./.chainlit ./public\n", "value": "mkdir -p ./.chainlit ./public", "__startline__": 56, "__endline__": 56, "resource_type": "RUN", "hash": "8b4b4366b191f373066ebeab94204a47bd6d4186046a26bbc35c3a27a1c416c9"}, "evaluated_keys": ["value"]}, "code_block": [[57, "RUN mkdir -p ./.chainlit ./public\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [57, 57], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_6", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the NODE_TLS_REJECT_UNAUTHORIZED environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py /app/chainlit.md && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py /app/chainlit.md &&     chown -R appuser:appuser /app", "__startline__": 60, "__endline__": 64}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py /app/chainlit.md && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py /app/chainlit.md &&     chown -R appuser:appuser /app", "__startline__": 60, "__endline__": 64, "resource_type": "RUN", "hash": "968962761996c89450c3c6c831fa6adae7a1d26fabfeab2bd65bd20f90dfeabc"}, "evaluated_keys": ["value"]}, "code_block": [[61, "RUN mkdir -p /app/logs && \\\n"], [62, "    chmod 755 /app && \\\n"], [63, "    chmod 750 /app/logs && \\\n"], [64, "    chmod 644 /app/*.py /app/chainlit.md && \\\n"], [65, "    chown -R appuser:appuser /app\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [61, 65], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_6", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the NODE_TLS_REJECT_UNAUTHORIZED environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "ENV", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "ENV PYTHONUNBUFFERED=1 \\\n    PYTHONDONTWRITEBYTECODE=1 \\\n    PYTHONHASHSEED=random \\\n    PIP_NO_CACHE_DIR=1 \\\n    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n    CHAINLIT_HOST=0.0.0.0 \\\n    CHAINLIT_PORT=8080 \\\n    MALLOC_CHECK_=2\n", "value": "PYTHONUNBUFFERED=1     PYTHONDONTWRITEBYTECODE=1     PYTHONHASHSEED=random     PIP_NO_CACHE_DIR=1     PIP_DISABLE_PIP_VERSION_CHECK=1     CHAINLIT_HOST=0.0.0.0     CHAINLIT_PORT=8080     MALLOC_CHECK_=2", "__startline__": 23, "__endline__": 32}, "label_": "resource: ENV", "id_": "ENV", "source_": "Dockerfile", "content": "ENV PYTHONUNBUFFERED=1 \\\n    PYTHONDONTWRITEBYTECODE=1 \\\n    PYTHONHASHSEED=random \\\n    PIP_NO_CACHE_DIR=1 \\\n    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n    CHAINLIT_HOST=0.0.0.0 \\\n    CHAINLIT_PORT=8080 \\\n    MALLOC_CHECK_=2\n", "value": "PYTHONUNBUFFERED=1     PYTHONDONTWRITEBYTECODE=1     PYTHONHASHSEED=random     PIP_NO_CACHE_DIR=1     PIP_DISABLE_PIP_VERSION_CHECK=1     CHAINLIT_HOST=0.0.0.0     CHAINLIT_PORT=8080     MALLOC_CHECK_=2", "__startline__": 23, "__endline__": 32, "resource_type": "ENV", "hash": "bc2cb08d60fee6e199fe22d8123f22b5929ee342069f927879a8a02bffe5c8a2"}, "evaluated_keys": ["value"]}, "code_block": [[24, "ENV PYTHONUNBUFFERED=1 \\\n"], [25, "    PYTHONDONTWRITEBYTECODE=1 \\\n"], [26, "    PYTHONHASHSEED=random \\\n"], [27, "    PIP_NO_CACHE_DIR=1 \\\n"], [28, "    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n"], [29, "    # Security features\n"], [30, "    CHAINLIT_HOST=0.0.0.0 \\\n"], [31, "    CHAINLIT_PORT=8080 \\\n"], [32, "    # Memory security\n"], [33, "    MALLOC_CHECK_=2\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [24, 33], "resource": "/apps/chatbot/Dockerfile.ENV", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_6", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the NODE_TLS_REJECT_UNAUTHORIZED environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "ENV", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "ENV PATH=/home/appuser/.local/bin:$PATH\n", "value": "PATH=/home/appuser/.local/bin:$PATH", "__startline__": 50, "__endline__": 50}, "label_": "resource: ENV", "id_": "ENV", "source_": "Dockerfile", "content": "ENV PATH=/home/appuser/.local/bin:$PATH\n", "value": "PATH=/home/appuser/.local/bin:$PATH", "__startline__": 50, "__endline__": 50, "resource_type": "ENV", "hash": "841ab2598f4be1046664ffd9b59c9ce73fba2f91cefdddf50e470c9d47b59d45"}, "evaluated_keys": ["value"]}, "code_block": [[51, "ENV PATH=/home/appuser/.local/bin:$PATH\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [51, 51], "resource": "/apps/chatbot/Dockerfile.ENV", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_6", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the NODE_TLS_REJECT_UNAUTHORIZED environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9, "resource_type": "RUN", "hash": "5e643101f0eb2e908e2ed30e55f7695cea5cddd31a1d0fa26a3c2f4290ff1307"}, "evaluated_keys": ["value"]}, "code_block": [[5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [5, 10], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_6", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the NODE_TLS_REJECT_UNAUTHORIZED environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13, "resource_type": "RUN", "hash": "ea58e290aadc1da0426820257be6a0195ba1aa64af3403c9ea66547979f26fb5"}, "evaluated_keys": ["value"]}, "code_block": [[14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [14, 14], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_6", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the NODE_TLS_REJECT_UNAUTHORIZED environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 31, "__endline__": 35}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 31, "__endline__": 35, "resource_type": "RUN", "hash": "4b837a125fbdb82fc32b01024470ea0adb0726512c78cfb0b12e09737e071222"}, "evaluated_keys": ["value"]}, "code_block": [[32, "RUN apt-get update && \\\n"], [33, "    apt-get install -y --no-install-recommends \\\n"], [34, "        ca-certificates && \\\n"], [35, "    rm -rf /var/lib/apt/lists/* && \\\n"], [36, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [32, 36], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_6", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the NODE_TLS_REJECT_UNAUTHORIZED environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 38, "__endline__": 39}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 38, "__endline__": 39, "resource_type": "RUN", "hash": "953888288557754d096763e73a8b3191302e5af2d8a5fddffb8c81b27a7fd23a"}, "evaluated_keys": ["value"]}, "code_block": [[39, "RUN groupadd --gid 1000 appuser && \\\n"], [40, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [39, 40], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_6", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the NODE_TLS_REJECT_UNAUTHORIZED environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py && \\\n    chmod +x /app/healthcheck.py && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py &&     chmod +x /app/healthcheck.py &&     chown -R appuser:appuser /app", "__startline__": 53, "__endline__": 58}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py && \\\n    chmod +x /app/healthcheck.py && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py &&     chmod +x /app/healthcheck.py &&     chown -R appuser:appuser /app", "__startline__": 53, "__endline__": 58, "resource_type": "RUN", "hash": "eacfc2e4248331c80311dfd7dd317301804f631030a21c81a608cc34db588f4e"}, "evaluated_keys": ["value"]}, "code_block": [[54, "RUN mkdir -p /app/logs && \\\n"], [55, "    chmod 755 /app && \\\n"], [56, "    chmod 750 /app/logs && \\\n"], [57, "    chmod 644 /app/*.py && \\\n"], [58, "    chmod +x /app/healthcheck.py && \\\n"], [59, "    chown -R appuser:appuser /app\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [54, 59], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_6", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the NODE_TLS_REJECT_UNAUTHORIZED environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "ENV", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "ENV PYTHONUNBUFFERED=1 \\\n    PYTHONDONTWRITEBYTECODE=1 \\\n    PYTHONHASHSEED=random \\\n    PIP_NO_CACHE_DIR=1 \\\n    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n    CHAINLIT_HOST=0.0.0.0 \\\n    CHAINLIT_PORT=8080 \\\n    MALLOC_CHECK_=2\n", "value": "PYTHONUNBUFFERED=1     PYTHONDONTWRITEBYTECODE=1     PYTHONHASHSEED=random     PIP_NO_CACHE_DIR=1     PIP_DISABLE_PIP_VERSION_CHECK=1     CHAINLIT_HOST=0.0.0.0     CHAINLIT_PORT=8080     MALLOC_CHECK_=2", "__startline__": 19, "__endline__": 28}, "label_": "resource: ENV", "id_": "ENV", "source_": "Dockerfile", "content": "ENV PYTHONUNBUFFERED=1 \\\n    PYTHONDONTWRITEBYTECODE=1 \\\n    PYTHONHASHSEED=random \\\n    PIP_NO_CACHE_DIR=1 \\\n    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n    CHAINLIT_HOST=0.0.0.0 \\\n    CHAINLIT_PORT=8080 \\\n    MALLOC_CHECK_=2\n", "value": "PYTHONUNBUFFERED=1     PYTHONDONTWRITEBYTECODE=1     PYTHONHASHSEED=random     PIP_NO_CACHE_DIR=1     PIP_DISABLE_PIP_VERSION_CHECK=1     CHAINLIT_HOST=0.0.0.0     CHAINLIT_PORT=8080     MALLOC_CHECK_=2", "__startline__": 19, "__endline__": 28, "resource_type": "ENV", "hash": "8221ae8cfb39d8076eefeb86d64ff8b317a55caf10ac125548bf5fb42e66c410"}, "evaluated_keys": ["value"]}, "code_block": [[20, "ENV PYTHONUNBUFFERED=1 \\\n"], [21, "    PYTHONDONTWRITEBYTECODE=1 \\\n"], [22, "    PYTHONHASHSEED=random \\\n"], [23, "    PIP_NO_CACHE_DIR=1 \\\n"], [24, "    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n"], [25, "    # Security features\n"], [26, "    CHAINLIT_HOST=0.0.0.0 \\\n"], [27, "    CHAINLIT_PORT=8080 \\\n"], [28, "    # Memory security\n"], [29, "    MALLOC_CHECK_=2\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [20, 29], "resource": "/apps/chatbot/Dockerfile.secure.ENV", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_6", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the NODE_TLS_REJECT_UNAUTHORIZED environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "ENV", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "ENV PATH=/home/appuser/.local/bin:$PATH\n", "value": "PATH=/home/appuser/.local/bin:$PATH", "__startline__": 46, "__endline__": 46}, "label_": "resource: ENV", "id_": "ENV", "source_": "Dockerfile", "content": "ENV PATH=/home/appuser/.local/bin:$PATH\n", "value": "PATH=/home/appuser/.local/bin:$PATH", "__startline__": 46, "__endline__": 46, "resource_type": "ENV", "hash": "e4a28b21ff5b3fc3dcfe2901b36eee744f27e146945279718785b242b35bcd31"}, "evaluated_keys": ["value"]}, "code_block": [[47, "ENV PATH=/home/appuser/.local/bin:$PATH\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [47, 47], "resource": "/apps/chatbot/Dockerfile.secure.ENV", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_12", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for npm via the 'NPM_CONFIG_STRICT_SSL' environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9, "resource_type": "RUN", "hash": "356327b8cba0e5b42ad6ebf6cdd6eb6815804cb2bc10e725ba7ea320865fb35f"}, "evaluated_keys": ["value"]}, "code_block": [[5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [5, 10], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_12", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for npm via the 'NPM_CONFIG_STRICT_SSL' environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13, "resource_type": "RUN", "hash": "0ecce5c9d6ed4de7d52dd31b4cf8656c6ca40f188cb68bcdc51cf7a3435f0911"}, "evaluated_keys": ["value"]}, "code_block": [[14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [14, 14], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_12", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for npm via the 'NPM_CONFIG_STRICT_SSL' environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n", "value": "pip install --no-cache-dir --user /tmp/cwe_ingestion/", "__startline__": 17, "__endline__": 17}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n", "value": "pip install --no-cache-dir --user /tmp/cwe_ingestion/", "__startline__": 17, "__endline__": 17, "resource_type": "RUN", "hash": "b3ea5d10af0655e321c59f00079e6e8c217386e287ec36b6a41fe5bf1a1c2989"}, "evaluated_keys": ["value"]}, "code_block": [[18, "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [18, 18], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_12", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for npm via the 'NPM_CONFIG_STRICT_SSL' environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 35, "__endline__": 39}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 35, "__endline__": 39, "resource_type": "RUN", "hash": "79f46ddec118a40fa13171a2fba6204a21a79bf7aa4ea611a4d62298000a39bc"}, "evaluated_keys": ["value"]}, "code_block": [[36, "RUN apt-get update && \\\n"], [37, "    apt-get install -y --no-install-recommends \\\n"], [38, "        ca-certificates && \\\n"], [39, "    rm -rf /var/lib/apt/lists/* && \\\n"], [40, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [36, 40], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_12", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for npm via the 'NPM_CONFIG_STRICT_SSL' environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 42, "__endline__": 43}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 42, "__endline__": 43, "resource_type": "RUN", "hash": "e127f4787431717d746b42ab0a00e6055452243ce949cb13c254e179589e5e9b"}, "evaluated_keys": ["value"]}, "code_block": [[43, "RUN groupadd --gid 1000 appuser && \\\n"], [44, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [43, 44], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_12", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for npm via the 'NPM_CONFIG_STRICT_SSL' environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN mkdir -p ./.chainlit ./public\n", "value": "mkdir -p ./.chainlit ./public", "__startline__": 56, "__endline__": 56}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p ./.chainlit ./public\n", "value": "mkdir -p ./.chainlit ./public", "__startline__": 56, "__endline__": 56, "resource_type": "RUN", "hash": "8b4b4366b191f373066ebeab94204a47bd6d4186046a26bbc35c3a27a1c416c9"}, "evaluated_keys": ["value"]}, "code_block": [[57, "RUN mkdir -p ./.chainlit ./public\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [57, 57], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_12", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for npm via the 'NPM_CONFIG_STRICT_SSL' environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py /app/chainlit.md && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py /app/chainlit.md &&     chown -R appuser:appuser /app", "__startline__": 60, "__endline__": 64}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py /app/chainlit.md && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py /app/chainlit.md &&     chown -R appuser:appuser /app", "__startline__": 60, "__endline__": 64, "resource_type": "RUN", "hash": "968962761996c89450c3c6c831fa6adae7a1d26fabfeab2bd65bd20f90dfeabc"}, "evaluated_keys": ["value"]}, "code_block": [[61, "RUN mkdir -p /app/logs && \\\n"], [62, "    chmod 755 /app && \\\n"], [63, "    chmod 750 /app/logs && \\\n"], [64, "    chmod 644 /app/*.py /app/chainlit.md && \\\n"], [65, "    chown -R appuser:appuser /app\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [61, 65], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_12", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for npm via the 'NPM_CONFIG_STRICT_SSL' environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "ENV", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "ENV PYTHONUNBUFFERED=1 \\\n    PYTHONDONTWRITEBYTECODE=1 \\\n    PYTHONHASHSEED=random \\\n    PIP_NO_CACHE_DIR=1 \\\n    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n    CHAINLIT_HOST=0.0.0.0 \\\n    CHAINLIT_PORT=8080 \\\n    MALLOC_CHECK_=2\n", "value": "PYTHONUNBUFFERED=1     PYTHONDONTWRITEBYTECODE=1     PYTHONHASHSEED=random     PIP_NO_CACHE_DIR=1     PIP_DISABLE_PIP_VERSION_CHECK=1     CHAINLIT_HOST=0.0.0.0     CHAINLIT_PORT=8080     MALLOC_CHECK_=2", "__startline__": 23, "__endline__": 32}, "label_": "resource: ENV", "id_": "ENV", "source_": "Dockerfile", "content": "ENV PYTHONUNBUFFERED=1 \\\n    PYTHONDONTWRITEBYTECODE=1 \\\n    PYTHONHASHSEED=random \\\n    PIP_NO_CACHE_DIR=1 \\\n    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n    CHAINLIT_HOST=0.0.0.0 \\\n    CHAINLIT_PORT=8080 \\\n    MALLOC_CHECK_=2\n", "value": "PYTHONUNBUFFERED=1     PYTHONDONTWRITEBYTECODE=1     PYTHONHASHSEED=random     PIP_NO_CACHE_DIR=1     PIP_DISABLE_PIP_VERSION_CHECK=1     CHAINLIT_HOST=0.0.0.0     CHAINLIT_PORT=8080     MALLOC_CHECK_=2", "__startline__": 23, "__endline__": 32, "resource_type": "ENV", "hash": "bc2cb08d60fee6e199fe22d8123f22b5929ee342069f927879a8a02bffe5c8a2"}, "evaluated_keys": ["value"]}, "code_block": [[24, "ENV PYTHONUNBUFFERED=1 \\\n"], [25, "    PYTHONDONTWRITEBYTECODE=1 \\\n"], [26, "    PYTHONHASHSEED=random \\\n"], [27, "    PIP_NO_CACHE_DIR=1 \\\n"], [28, "    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n"], [29, "    # Security features\n"], [30, "    CHAINLIT_HOST=0.0.0.0 \\\n"], [31, "    CHAINLIT_PORT=8080 \\\n"], [32, "    # Memory security\n"], [33, "    MALLOC_CHECK_=2\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [24, 33], "resource": "/apps/chatbot/Dockerfile.ENV", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_12", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for npm via the 'NPM_CONFIG_STRICT_SSL' environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "ENV", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "ENV PATH=/home/appuser/.local/bin:$PATH\n", "value": "PATH=/home/appuser/.local/bin:$PATH", "__startline__": 50, "__endline__": 50}, "label_": "resource: ENV", "id_": "ENV", "source_": "Dockerfile", "content": "ENV PATH=/home/appuser/.local/bin:$PATH\n", "value": "PATH=/home/appuser/.local/bin:$PATH", "__startline__": 50, "__endline__": 50, "resource_type": "ENV", "hash": "841ab2598f4be1046664ffd9b59c9ce73fba2f91cefdddf50e470c9d47b59d45"}, "evaluated_keys": ["value"]}, "code_block": [[51, "ENV PATH=/home/appuser/.local/bin:$PATH\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [51, 51], "resource": "/apps/chatbot/Dockerfile.ENV", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_12", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for npm via the 'NPM_CONFIG_STRICT_SSL' environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9, "resource_type": "RUN", "hash": "5e643101f0eb2e908e2ed30e55f7695cea5cddd31a1d0fa26a3c2f4290ff1307"}, "evaluated_keys": ["value"]}, "code_block": [[5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [5, 10], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_12", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for npm via the 'NPM_CONFIG_STRICT_SSL' environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13, "resource_type": "RUN", "hash": "ea58e290aadc1da0426820257be6a0195ba1aa64af3403c9ea66547979f26fb5"}, "evaluated_keys": ["value"]}, "code_block": [[14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [14, 14], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_12", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for npm via the 'NPM_CONFIG_STRICT_SSL' environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 31, "__endline__": 35}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 31, "__endline__": 35, "resource_type": "RUN", "hash": "4b837a125fbdb82fc32b01024470ea0adb0726512c78cfb0b12e09737e071222"}, "evaluated_keys": ["value"]}, "code_block": [[32, "RUN apt-get update && \\\n"], [33, "    apt-get install -y --no-install-recommends \\\n"], [34, "        ca-certificates && \\\n"], [35, "    rm -rf /var/lib/apt/lists/* && \\\n"], [36, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [32, 36], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_12", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for npm via the 'NPM_CONFIG_STRICT_SSL' environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 38, "__endline__": 39}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 38, "__endline__": 39, "resource_type": "RUN", "hash": "953888288557754d096763e73a8b3191302e5af2d8a5fddffb8c81b27a7fd23a"}, "evaluated_keys": ["value"]}, "code_block": [[39, "RUN groupadd --gid 1000 appuser && \\\n"], [40, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [39, 40], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_12", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for npm via the 'NPM_CONFIG_STRICT_SSL' environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py && \\\n    chmod +x /app/healthcheck.py && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py &&     chmod +x /app/healthcheck.py &&     chown -R appuser:appuser /app", "__startline__": 53, "__endline__": 58}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py && \\\n    chmod +x /app/healthcheck.py && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py &&     chmod +x /app/healthcheck.py &&     chown -R appuser:appuser /app", "__startline__": 53, "__endline__": 58, "resource_type": "RUN", "hash": "eacfc2e4248331c80311dfd7dd317301804f631030a21c81a608cc34db588f4e"}, "evaluated_keys": ["value"]}, "code_block": [[54, "RUN mkdir -p /app/logs && \\\n"], [55, "    chmod 755 /app && \\\n"], [56, "    chmod 750 /app/logs && \\\n"], [57, "    chmod 644 /app/*.py && \\\n"], [58, "    chmod +x /app/healthcheck.py && \\\n"], [59, "    chown -R appuser:appuser /app\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [54, 59], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_12", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for npm via the 'NPM_CONFIG_STRICT_SSL' environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "ENV", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "ENV PYTHONUNBUFFERED=1 \\\n    PYTHONDONTWRITEBYTECODE=1 \\\n    PYTHONHASHSEED=random \\\n    PIP_NO_CACHE_DIR=1 \\\n    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n    CHAINLIT_HOST=0.0.0.0 \\\n    CHAINLIT_PORT=8080 \\\n    MALLOC_CHECK_=2\n", "value": "PYTHONUNBUFFERED=1     PYTHONDONTWRITEBYTECODE=1     PYTHONHASHSEED=random     PIP_NO_CACHE_DIR=1     PIP_DISABLE_PIP_VERSION_CHECK=1     CHAINLIT_HOST=0.0.0.0     CHAINLIT_PORT=8080     MALLOC_CHECK_=2", "__startline__": 19, "__endline__": 28}, "label_": "resource: ENV", "id_": "ENV", "source_": "Dockerfile", "content": "ENV PYTHONUNBUFFERED=1 \\\n    PYTHONDONTWRITEBYTECODE=1 \\\n    PYTHONHASHSEED=random \\\n    PIP_NO_CACHE_DIR=1 \\\n    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n    CHAINLIT_HOST=0.0.0.0 \\\n    CHAINLIT_PORT=8080 \\\n    MALLOC_CHECK_=2\n", "value": "PYTHONUNBUFFERED=1     PYTHONDONTWRITEBYTECODE=1     PYTHONHASHSEED=random     PIP_NO_CACHE_DIR=1     PIP_DISABLE_PIP_VERSION_CHECK=1     CHAINLIT_HOST=0.0.0.0     CHAINLIT_PORT=8080     MALLOC_CHECK_=2", "__startline__": 19, "__endline__": 28, "resource_type": "ENV", "hash": "8221ae8cfb39d8076eefeb86d64ff8b317a55caf10ac125548bf5fb42e66c410"}, "evaluated_keys": ["value"]}, "code_block": [[20, "ENV PYTHONUNBUFFERED=1 \\\n"], [21, "    PYTHONDONTWRITEBYTECODE=1 \\\n"], [22, "    PYTHONHASHSEED=random \\\n"], [23, "    PIP_NO_CACHE_DIR=1 \\\n"], [24, "    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n"], [25, "    # Security features\n"], [26, "    CHAINLIT_HOST=0.0.0.0 \\\n"], [27, "    CHAINLIT_PORT=8080 \\\n"], [28, "    # Memory security\n"], [29, "    MALLOC_CHECK_=2\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [20, 29], "resource": "/apps/chatbot/Dockerfile.secure.ENV", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_12", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for npm via the 'NPM_CONFIG_STRICT_SSL' environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "ENV", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "ENV PATH=/home/appuser/.local/bin:$PATH\n", "value": "PATH=/home/appuser/.local/bin:$PATH", "__startline__": 46, "__endline__": 46}, "label_": "resource: ENV", "id_": "ENV", "source_": "Dockerfile", "content": "ENV PATH=/home/appuser/.local/bin:$PATH\n", "value": "PATH=/home/appuser/.local/bin:$PATH", "__startline__": 46, "__endline__": 46, "resource_type": "ENV", "hash": "e4a28b21ff5b3fc3dcfe2901b36eee744f27e146945279718785b242b35bcd31"}, "evaluated_keys": ["value"]}, "code_block": [[47, "ENV PATH=/home/appuser/.local/bin:$PATH\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [47, 47], "resource": "/apps/chatbot/Dockerfile.secure.ENV", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_5", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the PYTHONHTTPSVERIFY environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9, "resource_type": "RUN", "hash": "356327b8cba0e5b42ad6ebf6cdd6eb6815804cb2bc10e725ba7ea320865fb35f"}, "evaluated_keys": ["value"]}, "code_block": [[5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [5, 10], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_5", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the PYTHONHTTPSVERIFY environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13, "resource_type": "RUN", "hash": "0ecce5c9d6ed4de7d52dd31b4cf8656c6ca40f188cb68bcdc51cf7a3435f0911"}, "evaluated_keys": ["value"]}, "code_block": [[14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [14, 14], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_5", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the PYTHONHTTPSVERIFY environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n", "value": "pip install --no-cache-dir --user /tmp/cwe_ingestion/", "__startline__": 17, "__endline__": 17}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n", "value": "pip install --no-cache-dir --user /tmp/cwe_ingestion/", "__startline__": 17, "__endline__": 17, "resource_type": "RUN", "hash": "b3ea5d10af0655e321c59f00079e6e8c217386e287ec36b6a41fe5bf1a1c2989"}, "evaluated_keys": ["value"]}, "code_block": [[18, "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [18, 18], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_5", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the PYTHONHTTPSVERIFY environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 35, "__endline__": 39}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 35, "__endline__": 39, "resource_type": "RUN", "hash": "79f46ddec118a40fa13171a2fba6204a21a79bf7aa4ea611a4d62298000a39bc"}, "evaluated_keys": ["value"]}, "code_block": [[36, "RUN apt-get update && \\\n"], [37, "    apt-get install -y --no-install-recommends \\\n"], [38, "        ca-certificates && \\\n"], [39, "    rm -rf /var/lib/apt/lists/* && \\\n"], [40, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [36, 40], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_5", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the PYTHONHTTPSVERIFY environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 42, "__endline__": 43}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 42, "__endline__": 43, "resource_type": "RUN", "hash": "e127f4787431717d746b42ab0a00e6055452243ce949cb13c254e179589e5e9b"}, "evaluated_keys": ["value"]}, "code_block": [[43, "RUN groupadd --gid 1000 appuser && \\\n"], [44, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [43, 44], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_5", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the PYTHONHTTPSVERIFY environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN mkdir -p ./.chainlit ./public\n", "value": "mkdir -p ./.chainlit ./public", "__startline__": 56, "__endline__": 56}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p ./.chainlit ./public\n", "value": "mkdir -p ./.chainlit ./public", "__startline__": 56, "__endline__": 56, "resource_type": "RUN", "hash": "8b4b4366b191f373066ebeab94204a47bd6d4186046a26bbc35c3a27a1c416c9"}, "evaluated_keys": ["value"]}, "code_block": [[57, "RUN mkdir -p ./.chainlit ./public\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [57, 57], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_5", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the PYTHONHTTPSVERIFY environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py /app/chainlit.md && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py /app/chainlit.md &&     chown -R appuser:appuser /app", "__startline__": 60, "__endline__": 64}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py /app/chainlit.md && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py /app/chainlit.md &&     chown -R appuser:appuser /app", "__startline__": 60, "__endline__": 64, "resource_type": "RUN", "hash": "968962761996c89450c3c6c831fa6adae7a1d26fabfeab2bd65bd20f90dfeabc"}, "evaluated_keys": ["value"]}, "code_block": [[61, "RUN mkdir -p /app/logs && \\\n"], [62, "    chmod 755 /app && \\\n"], [63, "    chmod 750 /app/logs && \\\n"], [64, "    chmod 644 /app/*.py /app/chainlit.md && \\\n"], [65, "    chown -R appuser:appuser /app\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [61, 65], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_5", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the PYTHONHTTPSVERIFY environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "ENV", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "ENV PYTHONUNBUFFERED=1 \\\n    PYTHONDONTWRITEBYTECODE=1 \\\n    PYTHONHASHSEED=random \\\n    PIP_NO_CACHE_DIR=1 \\\n    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n    CHAINLIT_HOST=0.0.0.0 \\\n    CHAINLIT_PORT=8080 \\\n    MALLOC_CHECK_=2\n", "value": "PYTHONUNBUFFERED=1     PYTHONDONTWRITEBYTECODE=1     PYTHONHASHSEED=random     PIP_NO_CACHE_DIR=1     PIP_DISABLE_PIP_VERSION_CHECK=1     CHAINLIT_HOST=0.0.0.0     CHAINLIT_PORT=8080     MALLOC_CHECK_=2", "__startline__": 23, "__endline__": 32}, "label_": "resource: ENV", "id_": "ENV", "source_": "Dockerfile", "content": "ENV PYTHONUNBUFFERED=1 \\\n    PYTHONDONTWRITEBYTECODE=1 \\\n    PYTHONHASHSEED=random \\\n    PIP_NO_CACHE_DIR=1 \\\n    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n    CHAINLIT_HOST=0.0.0.0 \\\n    CHAINLIT_PORT=8080 \\\n    MALLOC_CHECK_=2\n", "value": "PYTHONUNBUFFERED=1     PYTHONDONTWRITEBYTECODE=1     PYTHONHASHSEED=random     PIP_NO_CACHE_DIR=1     PIP_DISABLE_PIP_VERSION_CHECK=1     CHAINLIT_HOST=0.0.0.0     CHAINLIT_PORT=8080     MALLOC_CHECK_=2", "__startline__": 23, "__endline__": 32, "resource_type": "ENV", "hash": "bc2cb08d60fee6e199fe22d8123f22b5929ee342069f927879a8a02bffe5c8a2"}, "evaluated_keys": ["value"]}, "code_block": [[24, "ENV PYTHONUNBUFFERED=1 \\\n"], [25, "    PYTHONDONTWRITEBYTECODE=1 \\\n"], [26, "    PYTHONHASHSEED=random \\\n"], [27, "    PIP_NO_CACHE_DIR=1 \\\n"], [28, "    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n"], [29, "    # Security features\n"], [30, "    CHAINLIT_HOST=0.0.0.0 \\\n"], [31, "    CHAINLIT_PORT=8080 \\\n"], [32, "    # Memory security\n"], [33, "    MALLOC_CHECK_=2\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [24, 33], "resource": "/apps/chatbot/Dockerfile.ENV", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_5", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the PYTHONHTTPSVERIFY environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "ENV", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "ENV PATH=/home/appuser/.local/bin:$PATH\n", "value": "PATH=/home/appuser/.local/bin:$PATH", "__startline__": 50, "__endline__": 50}, "label_": "resource: ENV", "id_": "ENV", "source_": "Dockerfile", "content": "ENV PATH=/home/appuser/.local/bin:$PATH\n", "value": "PATH=/home/appuser/.local/bin:$PATH", "__startline__": 50, "__endline__": 50, "resource_type": "ENV", "hash": "841ab2598f4be1046664ffd9b59c9ce73fba2f91cefdddf50e470c9d47b59d45"}, "evaluated_keys": ["value"]}, "code_block": [[51, "ENV PATH=/home/appuser/.local/bin:$PATH\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [51, 51], "resource": "/apps/chatbot/Dockerfile.ENV", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_5", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the PYTHONHTTPSVERIFY environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9, "resource_type": "RUN", "hash": "5e643101f0eb2e908e2ed30e55f7695cea5cddd31a1d0fa26a3c2f4290ff1307"}, "evaluated_keys": ["value"]}, "code_block": [[5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [5, 10], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_5", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the PYTHONHTTPSVERIFY environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13, "resource_type": "RUN", "hash": "ea58e290aadc1da0426820257be6a0195ba1aa64af3403c9ea66547979f26fb5"}, "evaluated_keys": ["value"]}, "code_block": [[14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [14, 14], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_5", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the PYTHONHTTPSVERIFY environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 31, "__endline__": 35}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 31, "__endline__": 35, "resource_type": "RUN", "hash": "4b837a125fbdb82fc32b01024470ea0adb0726512c78cfb0b12e09737e071222"}, "evaluated_keys": ["value"]}, "code_block": [[32, "RUN apt-get update && \\\n"], [33, "    apt-get install -y --no-install-recommends \\\n"], [34, "        ca-certificates && \\\n"], [35, "    rm -rf /var/lib/apt/lists/* && \\\n"], [36, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [32, 36], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_5", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the PYTHONHTTPSVERIFY environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 38, "__endline__": 39}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 38, "__endline__": 39, "resource_type": "RUN", "hash": "953888288557754d096763e73a8b3191302e5af2d8a5fddffb8c81b27a7fd23a"}, "evaluated_keys": ["value"]}, "code_block": [[39, "RUN groupadd --gid 1000 appuser && \\\n"], [40, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [39, 40], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_5", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the PYTHONHTTPSVERIFY environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py && \\\n    chmod +x /app/healthcheck.py && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py &&     chmod +x /app/healthcheck.py &&     chown -R appuser:appuser /app", "__startline__": 53, "__endline__": 58}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py && \\\n    chmod +x /app/healthcheck.py && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py &&     chmod +x /app/healthcheck.py &&     chown -R appuser:appuser /app", "__startline__": 53, "__endline__": 58, "resource_type": "RUN", "hash": "eacfc2e4248331c80311dfd7dd317301804f631030a21c81a608cc34db588f4e"}, "evaluated_keys": ["value"]}, "code_block": [[54, "RUN mkdir -p /app/logs && \\\n"], [55, "    chmod 755 /app && \\\n"], [56, "    chmod 750 /app/logs && \\\n"], [57, "    chmod 644 /app/*.py && \\\n"], [58, "    chmod +x /app/healthcheck.py && \\\n"], [59, "    chown -R appuser:appuser /app\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [54, 59], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_5", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the PYTHONHTTPSVERIFY environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "ENV", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "ENV PYTHONUNBUFFERED=1 \\\n    PYTHONDONTWRITEBYTECODE=1 \\\n    PYTHONHASHSEED=random \\\n    PIP_NO_CACHE_DIR=1 \\\n    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n    CHAINLIT_HOST=0.0.0.0 \\\n    CHAINLIT_PORT=8080 \\\n    MALLOC_CHECK_=2\n", "value": "PYTHONUNBUFFERED=1     PYTHONDONTWRITEBYTECODE=1     PYTHONHASHSEED=random     PIP_NO_CACHE_DIR=1     PIP_DISABLE_PIP_VERSION_CHECK=1     CHAINLIT_HOST=0.0.0.0     CHAINLIT_PORT=8080     MALLOC_CHECK_=2", "__startline__": 19, "__endline__": 28}, "label_": "resource: ENV", "id_": "ENV", "source_": "Dockerfile", "content": "ENV PYTHONUNBUFFERED=1 \\\n    PYTHONDONTWRITEBYTECODE=1 \\\n    PYTHONHASHSEED=random \\\n    PIP_NO_CACHE_DIR=1 \\\n    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n    CHAINLIT_HOST=0.0.0.0 \\\n    CHAINLIT_PORT=8080 \\\n    MALLOC_CHECK_=2\n", "value": "PYTHONUNBUFFERED=1     PYTHONDONTWRITEBYTECODE=1     PYTHONHASHSEED=random     PIP_NO_CACHE_DIR=1     PIP_DISABLE_PIP_VERSION_CHECK=1     CHAINLIT_HOST=0.0.0.0     CHAINLIT_PORT=8080     MALLOC_CHECK_=2", "__startline__": 19, "__endline__": 28, "resource_type": "ENV", "hash": "8221ae8cfb39d8076eefeb86d64ff8b317a55caf10ac125548bf5fb42e66c410"}, "evaluated_keys": ["value"]}, "code_block": [[20, "ENV PYTHONUNBUFFERED=1 \\\n"], [21, "    PYTHONDONTWRITEBYTECODE=1 \\\n"], [22, "    PYTHONHASHSEED=random \\\n"], [23, "    PIP_NO_CACHE_DIR=1 \\\n"], [24, "    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n"], [25, "    # Security features\n"], [26, "    CHAINLIT_HOST=0.0.0.0 \\\n"], [27, "    CHAINLIT_PORT=8080 \\\n"], [28, "    # Memory security\n"], [29, "    MALLOC_CHECK_=2\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [20, 29], "resource": "/apps/chatbot/Dockerfile.secure.ENV", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_5", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the PYTHONHTTPSVERIFY environment variable", "check_result": {"result": "PASSED", "entity": {"block_name_": "ENV", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "ENV PATH=/home/appuser/.local/bin:$PATH\n", "value": "PATH=/home/appuser/.local/bin:$PATH", "__startline__": 46, "__endline__": 46}, "label_": "resource: ENV", "id_": "ENV", "source_": "Dockerfile", "content": "ENV PATH=/home/appuser/.local/bin:$PATH\n", "value": "PATH=/home/appuser/.local/bin:$PATH", "__startline__": 46, "__endline__": 46, "resource_type": "ENV", "hash": "e4a28b21ff5b3fc3dcfe2901b36eee744f27e146945279718785b242b35bcd31"}, "evaluated_keys": ["value"]}, "code_block": [[47, "ENV PATH=/home/appuser/.local/bin:$PATH\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [47, 47], "resource": "/apps/chatbot/Dockerfile.secure.ENV", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_11", "bc_check_id": null, "check_name": "Ensure that the '--force-yes' option is not used, as it disables signature validation and allows packages to be downgraded which can leave the system in a broken or inconsistent state", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9, "resource_type": "RUN", "hash": "356327b8cba0e5b42ad6ebf6cdd6eb6815804cb2bc10e725ba7ea320865fb35f"}, "evaluated_keys": ["value"]}, "code_block": [[5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [5, 10], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_11", "bc_check_id": null, "check_name": "Ensure that the '--force-yes' option is not used, as it disables signature validation and allows packages to be downgraded which can leave the system in a broken or inconsistent state", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13, "resource_type": "RUN", "hash": "0ecce5c9d6ed4de7d52dd31b4cf8656c6ca40f188cb68bcdc51cf7a3435f0911"}, "evaluated_keys": ["value"]}, "code_block": [[14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [14, 14], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_11", "bc_check_id": null, "check_name": "Ensure that the '--force-yes' option is not used, as it disables signature validation and allows packages to be downgraded which can leave the system in a broken or inconsistent state", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n", "value": "pip install --no-cache-dir --user /tmp/cwe_ingestion/", "__startline__": 17, "__endline__": 17}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n", "value": "pip install --no-cache-dir --user /tmp/cwe_ingestion/", "__startline__": 17, "__endline__": 17, "resource_type": "RUN", "hash": "b3ea5d10af0655e321c59f00079e6e8c217386e287ec36b6a41fe5bf1a1c2989"}, "evaluated_keys": ["value"]}, "code_block": [[18, "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [18, 18], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_11", "bc_check_id": null, "check_name": "Ensure that the '--force-yes' option is not used, as it disables signature validation and allows packages to be downgraded which can leave the system in a broken or inconsistent state", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 35, "__endline__": 39}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 35, "__endline__": 39, "resource_type": "RUN", "hash": "79f46ddec118a40fa13171a2fba6204a21a79bf7aa4ea611a4d62298000a39bc"}, "evaluated_keys": ["value"]}, "code_block": [[36, "RUN apt-get update && \\\n"], [37, "    apt-get install -y --no-install-recommends \\\n"], [38, "        ca-certificates && \\\n"], [39, "    rm -rf /var/lib/apt/lists/* && \\\n"], [40, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [36, 40], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_11", "bc_check_id": null, "check_name": "Ensure that the '--force-yes' option is not used, as it disables signature validation and allows packages to be downgraded which can leave the system in a broken or inconsistent state", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 42, "__endline__": 43}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 42, "__endline__": 43, "resource_type": "RUN", "hash": "e127f4787431717d746b42ab0a00e6055452243ce949cb13c254e179589e5e9b"}, "evaluated_keys": ["value"]}, "code_block": [[43, "RUN groupadd --gid 1000 appuser && \\\n"], [44, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [43, 44], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_11", "bc_check_id": null, "check_name": "Ensure that the '--force-yes' option is not used, as it disables signature validation and allows packages to be downgraded which can leave the system in a broken or inconsistent state", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN mkdir -p ./.chainlit ./public\n", "value": "mkdir -p ./.chainlit ./public", "__startline__": 56, "__endline__": 56}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p ./.chainlit ./public\n", "value": "mkdir -p ./.chainlit ./public", "__startline__": 56, "__endline__": 56, "resource_type": "RUN", "hash": "8b4b4366b191f373066ebeab94204a47bd6d4186046a26bbc35c3a27a1c416c9"}, "evaluated_keys": ["value"]}, "code_block": [[57, "RUN mkdir -p ./.chainlit ./public\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [57, 57], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_11", "bc_check_id": null, "check_name": "Ensure that the '--force-yes' option is not used, as it disables signature validation and allows packages to be downgraded which can leave the system in a broken or inconsistent state", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py /app/chainlit.md && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py /app/chainlit.md &&     chown -R appuser:appuser /app", "__startline__": 60, "__endline__": 64}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py /app/chainlit.md && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py /app/chainlit.md &&     chown -R appuser:appuser /app", "__startline__": 60, "__endline__": 64, "resource_type": "RUN", "hash": "968962761996c89450c3c6c831fa6adae7a1d26fabfeab2bd65bd20f90dfeabc"}, "evaluated_keys": ["value"]}, "code_block": [[61, "RUN mkdir -p /app/logs && \\\n"], [62, "    chmod 755 /app && \\\n"], [63, "    chmod 750 /app/logs && \\\n"], [64, "    chmod 644 /app/*.py /app/chainlit.md && \\\n"], [65, "    chown -R appuser:appuser /app\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [61, 65], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_11", "bc_check_id": null, "check_name": "Ensure that the '--force-yes' option is not used, as it disables signature validation and allows packages to be downgraded which can leave the system in a broken or inconsistent state", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9, "resource_type": "RUN", "hash": "5e643101f0eb2e908e2ed30e55f7695cea5cddd31a1d0fa26a3c2f4290ff1307"}, "evaluated_keys": ["value"]}, "code_block": [[5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [5, 10], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_11", "bc_check_id": null, "check_name": "Ensure that the '--force-yes' option is not used, as it disables signature validation and allows packages to be downgraded which can leave the system in a broken or inconsistent state", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13, "resource_type": "RUN", "hash": "ea58e290aadc1da0426820257be6a0195ba1aa64af3403c9ea66547979f26fb5"}, "evaluated_keys": ["value"]}, "code_block": [[14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [14, 14], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_11", "bc_check_id": null, "check_name": "Ensure that the '--force-yes' option is not used, as it disables signature validation and allows packages to be downgraded which can leave the system in a broken or inconsistent state", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 31, "__endline__": 35}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 31, "__endline__": 35, "resource_type": "RUN", "hash": "4b837a125fbdb82fc32b01024470ea0adb0726512c78cfb0b12e09737e071222"}, "evaluated_keys": ["value"]}, "code_block": [[32, "RUN apt-get update && \\\n"], [33, "    apt-get install -y --no-install-recommends \\\n"], [34, "        ca-certificates && \\\n"], [35, "    rm -rf /var/lib/apt/lists/* && \\\n"], [36, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [32, 36], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_11", "bc_check_id": null, "check_name": "Ensure that the '--force-yes' option is not used, as it disables signature validation and allows packages to be downgraded which can leave the system in a broken or inconsistent state", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 38, "__endline__": 39}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 38, "__endline__": 39, "resource_type": "RUN", "hash": "953888288557754d096763e73a8b3191302e5af2d8a5fddffb8c81b27a7fd23a"}, "evaluated_keys": ["value"]}, "code_block": [[39, "RUN groupadd --gid 1000 appuser && \\\n"], [40, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [39, 40], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_11", "bc_check_id": null, "check_name": "Ensure that the '--force-yes' option is not used, as it disables signature validation and allows packages to be downgraded which can leave the system in a broken or inconsistent state", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py && \\\n    chmod +x /app/healthcheck.py && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py &&     chmod +x /app/healthcheck.py &&     chown -R appuser:appuser /app", "__startline__": 53, "__endline__": 58}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py && \\\n    chmod +x /app/healthcheck.py && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py &&     chmod +x /app/healthcheck.py &&     chown -R appuser:appuser /app", "__startline__": 53, "__endline__": 58, "resource_type": "RUN", "hash": "eacfc2e4248331c80311dfd7dd317301804f631030a21c81a608cc34db588f4e"}, "evaluated_keys": ["value"]}, "code_block": [[54, "RUN mkdir -p /app/logs && \\\n"], [55, "    chmod 755 /app && \\\n"], [56, "    chmod 750 /app/logs && \\\n"], [57, "    chmod 644 /app/*.py && \\\n"], [58, "    chmod +x /app/healthcheck.py && \\\n"], [59, "    chown -R appuser:appuser /app\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [54, 59], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_2", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with curl", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9, "resource_type": "RUN", "hash": "356327b8cba0e5b42ad6ebf6cdd6eb6815804cb2bc10e725ba7ea320865fb35f"}, "evaluated_keys": ["value"]}, "code_block": [[5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [5, 10], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_2", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with curl", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13, "resource_type": "RUN", "hash": "0ecce5c9d6ed4de7d52dd31b4cf8656c6ca40f188cb68bcdc51cf7a3435f0911"}, "evaluated_keys": ["value"]}, "code_block": [[14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [14, 14], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_2", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with curl", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n", "value": "pip install --no-cache-dir --user /tmp/cwe_ingestion/", "__startline__": 17, "__endline__": 17}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n", "value": "pip install --no-cache-dir --user /tmp/cwe_ingestion/", "__startline__": 17, "__endline__": 17, "resource_type": "RUN", "hash": "b3ea5d10af0655e321c59f00079e6e8c217386e287ec36b6a41fe5bf1a1c2989"}, "evaluated_keys": ["value"]}, "code_block": [[18, "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [18, 18], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_2", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with curl", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 35, "__endline__": 39}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 35, "__endline__": 39, "resource_type": "RUN", "hash": "79f46ddec118a40fa13171a2fba6204a21a79bf7aa4ea611a4d62298000a39bc"}, "evaluated_keys": ["value"]}, "code_block": [[36, "RUN apt-get update && \\\n"], [37, "    apt-get install -y --no-install-recommends \\\n"], [38, "        ca-certificates && \\\n"], [39, "    rm -rf /var/lib/apt/lists/* && \\\n"], [40, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [36, 40], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_2", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with curl", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 42, "__endline__": 43}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 42, "__endline__": 43, "resource_type": "RUN", "hash": "e127f4787431717d746b42ab0a00e6055452243ce949cb13c254e179589e5e9b"}, "evaluated_keys": ["value"]}, "code_block": [[43, "RUN groupadd --gid 1000 appuser && \\\n"], [44, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [43, 44], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_2", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with curl", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN mkdir -p ./.chainlit ./public\n", "value": "mkdir -p ./.chainlit ./public", "__startline__": 56, "__endline__": 56}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p ./.chainlit ./public\n", "value": "mkdir -p ./.chainlit ./public", "__startline__": 56, "__endline__": 56, "resource_type": "RUN", "hash": "8b4b4366b191f373066ebeab94204a47bd6d4186046a26bbc35c3a27a1c416c9"}, "evaluated_keys": ["value"]}, "code_block": [[57, "RUN mkdir -p ./.chainlit ./public\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [57, 57], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_2", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with curl", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py /app/chainlit.md && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py /app/chainlit.md &&     chown -R appuser:appuser /app", "__startline__": 60, "__endline__": 64}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py /app/chainlit.md && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py /app/chainlit.md &&     chown -R appuser:appuser /app", "__startline__": 60, "__endline__": 64, "resource_type": "RUN", "hash": "968962761996c89450c3c6c831fa6adae7a1d26fabfeab2bd65bd20f90dfeabc"}, "evaluated_keys": ["value"]}, "code_block": [[61, "RUN mkdir -p /app/logs && \\\n"], [62, "    chmod 755 /app && \\\n"], [63, "    chmod 750 /app/logs && \\\n"], [64, "    chmod 644 /app/*.py /app/chainlit.md && \\\n"], [65, "    chown -R appuser:appuser /app\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [61, 65], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_2", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with curl", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9, "resource_type": "RUN", "hash": "5e643101f0eb2e908e2ed30e55f7695cea5cddd31a1d0fa26a3c2f4290ff1307"}, "evaluated_keys": ["value"]}, "code_block": [[5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [5, 10], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_2", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with curl", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13, "resource_type": "RUN", "hash": "ea58e290aadc1da0426820257be6a0195ba1aa64af3403c9ea66547979f26fb5"}, "evaluated_keys": ["value"]}, "code_block": [[14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [14, 14], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_2", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with curl", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 31, "__endline__": 35}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 31, "__endline__": 35, "resource_type": "RUN", "hash": "4b837a125fbdb82fc32b01024470ea0adb0726512c78cfb0b12e09737e071222"}, "evaluated_keys": ["value"]}, "code_block": [[32, "RUN apt-get update && \\\n"], [33, "    apt-get install -y --no-install-recommends \\\n"], [34, "        ca-certificates && \\\n"], [35, "    rm -rf /var/lib/apt/lists/* && \\\n"], [36, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [32, 36], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_2", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with curl", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 38, "__endline__": 39}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 38, "__endline__": 39, "resource_type": "RUN", "hash": "953888288557754d096763e73a8b3191302e5af2d8a5fddffb8c81b27a7fd23a"}, "evaluated_keys": ["value"]}, "code_block": [[39, "RUN groupadd --gid 1000 appuser && \\\n"], [40, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [39, 40], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_2", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with curl", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py && \\\n    chmod +x /app/healthcheck.py && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py &&     chmod +x /app/healthcheck.py &&     chown -R appuser:appuser /app", "__startline__": 53, "__endline__": 58}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py && \\\n    chmod +x /app/healthcheck.py && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py &&     chmod +x /app/healthcheck.py &&     chown -R appuser:appuser /app", "__startline__": 53, "__endline__": 58, "resource_type": "RUN", "hash": "eacfc2e4248331c80311dfd7dd317301804f631030a21c81a608cc34db588f4e"}, "evaluated_keys": ["value"]}, "code_block": [[54, "RUN mkdir -p /app/logs && \\\n"], [55, "    chmod 755 /app && \\\n"], [56, "    chmod 750 /app/logs && \\\n"], [57, "    chmod 644 /app/*.py && \\\n"], [58, "    chmod +x /app/healthcheck.py && \\\n"], [59, "    chown -R appuser:appuser /app\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [54, 59], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_13", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for npm or yarn by setting the option strict-ssl to false", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9, "resource_type": "RUN", "hash": "356327b8cba0e5b42ad6ebf6cdd6eb6815804cb2bc10e725ba7ea320865fb35f"}, "evaluated_keys": ["value"]}, "code_block": [[5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [5, 10], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_13", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for npm or yarn by setting the option strict-ssl to false", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13, "resource_type": "RUN", "hash": "0ecce5c9d6ed4de7d52dd31b4cf8656c6ca40f188cb68bcdc51cf7a3435f0911"}, "evaluated_keys": ["value"]}, "code_block": [[14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [14, 14], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_13", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for npm or yarn by setting the option strict-ssl to false", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n", "value": "pip install --no-cache-dir --user /tmp/cwe_ingestion/", "__startline__": 17, "__endline__": 17}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n", "value": "pip install --no-cache-dir --user /tmp/cwe_ingestion/", "__startline__": 17, "__endline__": 17, "resource_type": "RUN", "hash": "b3ea5d10af0655e321c59f00079e6e8c217386e287ec36b6a41fe5bf1a1c2989"}, "evaluated_keys": ["value"]}, "code_block": [[18, "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [18, 18], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_13", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for npm or yarn by setting the option strict-ssl to false", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 35, "__endline__": 39}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 35, "__endline__": 39, "resource_type": "RUN", "hash": "79f46ddec118a40fa13171a2fba6204a21a79bf7aa4ea611a4d62298000a39bc"}, "evaluated_keys": ["value"]}, "code_block": [[36, "RUN apt-get update && \\\n"], [37, "    apt-get install -y --no-install-recommends \\\n"], [38, "        ca-certificates && \\\n"], [39, "    rm -rf /var/lib/apt/lists/* && \\\n"], [40, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [36, 40], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_13", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for npm or yarn by setting the option strict-ssl to false", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 42, "__endline__": 43}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 42, "__endline__": 43, "resource_type": "RUN", "hash": "e127f4787431717d746b42ab0a00e6055452243ce949cb13c254e179589e5e9b"}, "evaluated_keys": ["value"]}, "code_block": [[43, "RUN groupadd --gid 1000 appuser && \\\n"], [44, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [43, 44], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_13", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for npm or yarn by setting the option strict-ssl to false", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN mkdir -p ./.chainlit ./public\n", "value": "mkdir -p ./.chainlit ./public", "__startline__": 56, "__endline__": 56}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p ./.chainlit ./public\n", "value": "mkdir -p ./.chainlit ./public", "__startline__": 56, "__endline__": 56, "resource_type": "RUN", "hash": "8b4b4366b191f373066ebeab94204a47bd6d4186046a26bbc35c3a27a1c416c9"}, "evaluated_keys": ["value"]}, "code_block": [[57, "RUN mkdir -p ./.chainlit ./public\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [57, 57], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_13", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for npm or yarn by setting the option strict-ssl to false", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py /app/chainlit.md && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py /app/chainlit.md &&     chown -R appuser:appuser /app", "__startline__": 60, "__endline__": 64}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py /app/chainlit.md && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py /app/chainlit.md &&     chown -R appuser:appuser /app", "__startline__": 60, "__endline__": 64, "resource_type": "RUN", "hash": "968962761996c89450c3c6c831fa6adae7a1d26fabfeab2bd65bd20f90dfeabc"}, "evaluated_keys": ["value"]}, "code_block": [[61, "RUN mkdir -p /app/logs && \\\n"], [62, "    chmod 755 /app && \\\n"], [63, "    chmod 750 /app/logs && \\\n"], [64, "    chmod 644 /app/*.py /app/chainlit.md && \\\n"], [65, "    chown -R appuser:appuser /app\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [61, 65], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_13", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for npm or yarn by setting the option strict-ssl to false", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9, "resource_type": "RUN", "hash": "5e643101f0eb2e908e2ed30e55f7695cea5cddd31a1d0fa26a3c2f4290ff1307"}, "evaluated_keys": ["value"]}, "code_block": [[5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [5, 10], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_13", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for npm or yarn by setting the option strict-ssl to false", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13, "resource_type": "RUN", "hash": "ea58e290aadc1da0426820257be6a0195ba1aa64af3403c9ea66547979f26fb5"}, "evaluated_keys": ["value"]}, "code_block": [[14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [14, 14], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_13", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for npm or yarn by setting the option strict-ssl to false", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 31, "__endline__": 35}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 31, "__endline__": 35, "resource_type": "RUN", "hash": "4b837a125fbdb82fc32b01024470ea0adb0726512c78cfb0b12e09737e071222"}, "evaluated_keys": ["value"]}, "code_block": [[32, "RUN apt-get update && \\\n"], [33, "    apt-get install -y --no-install-recommends \\\n"], [34, "        ca-certificates && \\\n"], [35, "    rm -rf /var/lib/apt/lists/* && \\\n"], [36, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [32, 36], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_13", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for npm or yarn by setting the option strict-ssl to false", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 38, "__endline__": 39}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 38, "__endline__": 39, "resource_type": "RUN", "hash": "953888288557754d096763e73a8b3191302e5af2d8a5fddffb8c81b27a7fd23a"}, "evaluated_keys": ["value"]}, "code_block": [[39, "RUN groupadd --gid 1000 appuser && \\\n"], [40, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [39, 40], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_13", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled for npm or yarn by setting the option strict-ssl to false", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py && \\\n    chmod +x /app/healthcheck.py && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py &&     chmod +x /app/healthcheck.py &&     chown -R appuser:appuser /app", "__startline__": 53, "__endline__": 58}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py && \\\n    chmod +x /app/healthcheck.py && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py &&     chmod +x /app/healthcheck.py &&     chown -R appuser:appuser /app", "__startline__": 53, "__endline__": 58, "resource_type": "RUN", "hash": "eacfc2e4248331c80311dfd7dd317301804f631030a21c81a608cc34db588f4e"}, "evaluated_keys": ["value"]}, "code_block": [[54, "RUN mkdir -p /app/logs && \\\n"], [55, "    chmod 755 /app && \\\n"], [56, "    chmod 750 /app/logs && \\\n"], [57, "    chmod 644 /app/*.py && \\\n"], [58, "    chmod +x /app/healthcheck.py && \\\n"], [59, "    chown -R appuser:appuser /app\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [54, 59], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_9", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing GPG signatures are not used by dnf, tdnf, or yum via the '--nogpgcheck' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9, "resource_type": "RUN", "hash": "356327b8cba0e5b42ad6ebf6cdd6eb6815804cb2bc10e725ba7ea320865fb35f"}, "evaluated_keys": ["value"]}, "code_block": [[5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [5, 10], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_9", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing GPG signatures are not used by dnf, tdnf, or yum via the '--nogpgcheck' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13, "resource_type": "RUN", "hash": "0ecce5c9d6ed4de7d52dd31b4cf8656c6ca40f188cb68bcdc51cf7a3435f0911"}, "evaluated_keys": ["value"]}, "code_block": [[14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [14, 14], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_9", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing GPG signatures are not used by dnf, tdnf, or yum via the '--nogpgcheck' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n", "value": "pip install --no-cache-dir --user /tmp/cwe_ingestion/", "__startline__": 17, "__endline__": 17}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n", "value": "pip install --no-cache-dir --user /tmp/cwe_ingestion/", "__startline__": 17, "__endline__": 17, "resource_type": "RUN", "hash": "b3ea5d10af0655e321c59f00079e6e8c217386e287ec36b6a41fe5bf1a1c2989"}, "evaluated_keys": ["value"]}, "code_block": [[18, "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [18, 18], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_9", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing GPG signatures are not used by dnf, tdnf, or yum via the '--nogpgcheck' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 35, "__endline__": 39}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 35, "__endline__": 39, "resource_type": "RUN", "hash": "79f46ddec118a40fa13171a2fba6204a21a79bf7aa4ea611a4d62298000a39bc"}, "evaluated_keys": ["value"]}, "code_block": [[36, "RUN apt-get update && \\\n"], [37, "    apt-get install -y --no-install-recommends \\\n"], [38, "        ca-certificates && \\\n"], [39, "    rm -rf /var/lib/apt/lists/* && \\\n"], [40, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [36, 40], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_9", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing GPG signatures are not used by dnf, tdnf, or yum via the '--nogpgcheck' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 42, "__endline__": 43}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 42, "__endline__": 43, "resource_type": "RUN", "hash": "e127f4787431717d746b42ab0a00e6055452243ce949cb13c254e179589e5e9b"}, "evaluated_keys": ["value"]}, "code_block": [[43, "RUN groupadd --gid 1000 appuser && \\\n"], [44, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [43, 44], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_9", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing GPG signatures are not used by dnf, tdnf, or yum via the '--nogpgcheck' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN mkdir -p ./.chainlit ./public\n", "value": "mkdir -p ./.chainlit ./public", "__startline__": 56, "__endline__": 56}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p ./.chainlit ./public\n", "value": "mkdir -p ./.chainlit ./public", "__startline__": 56, "__endline__": 56, "resource_type": "RUN", "hash": "8b4b4366b191f373066ebeab94204a47bd6d4186046a26bbc35c3a27a1c416c9"}, "evaluated_keys": ["value"]}, "code_block": [[57, "RUN mkdir -p ./.chainlit ./public\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [57, 57], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_9", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing GPG signatures are not used by dnf, tdnf, or yum via the '--nogpgcheck' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py /app/chainlit.md && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py /app/chainlit.md &&     chown -R appuser:appuser /app", "__startline__": 60, "__endline__": 64}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py /app/chainlit.md && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py /app/chainlit.md &&     chown -R appuser:appuser /app", "__startline__": 60, "__endline__": 64, "resource_type": "RUN", "hash": "968962761996c89450c3c6c831fa6adae7a1d26fabfeab2bd65bd20f90dfeabc"}, "evaluated_keys": ["value"]}, "code_block": [[61, "RUN mkdir -p /app/logs && \\\n"], [62, "    chmod 755 /app && \\\n"], [63, "    chmod 750 /app/logs && \\\n"], [64, "    chmod 644 /app/*.py /app/chainlit.md && \\\n"], [65, "    chown -R appuser:appuser /app\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [61, 65], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_9", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing GPG signatures are not used by dnf, tdnf, or yum via the '--nogpgcheck' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9, "resource_type": "RUN", "hash": "5e643101f0eb2e908e2ed30e55f7695cea5cddd31a1d0fa26a3c2f4290ff1307"}, "evaluated_keys": ["value"]}, "code_block": [[5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [5, 10], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_9", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing GPG signatures are not used by dnf, tdnf, or yum via the '--nogpgcheck' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13, "resource_type": "RUN", "hash": "ea58e290aadc1da0426820257be6a0195ba1aa64af3403c9ea66547979f26fb5"}, "evaluated_keys": ["value"]}, "code_block": [[14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [14, 14], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_9", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing GPG signatures are not used by dnf, tdnf, or yum via the '--nogpgcheck' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 31, "__endline__": 35}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 31, "__endline__": 35, "resource_type": "RUN", "hash": "4b837a125fbdb82fc32b01024470ea0adb0726512c78cfb0b12e09737e071222"}, "evaluated_keys": ["value"]}, "code_block": [[32, "RUN apt-get update && \\\n"], [33, "    apt-get install -y --no-install-recommends \\\n"], [34, "        ca-certificates && \\\n"], [35, "    rm -rf /var/lib/apt/lists/* && \\\n"], [36, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [32, 36], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_9", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing GPG signatures are not used by dnf, tdnf, or yum via the '--nogpgcheck' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 38, "__endline__": 39}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 38, "__endline__": 39, "resource_type": "RUN", "hash": "953888288557754d096763e73a8b3191302e5af2d8a5fddffb8c81b27a7fd23a"}, "evaluated_keys": ["value"]}, "code_block": [[39, "RUN groupadd --gid 1000 appuser && \\\n"], [40, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [39, 40], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_9", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing GPG signatures are not used by dnf, tdnf, or yum via the '--nogpgcheck' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py && \\\n    chmod +x /app/healthcheck.py && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py &&     chmod +x /app/healthcheck.py &&     chown -R appuser:appuser /app", "__startline__": 53, "__endline__": 58}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py && \\\n    chmod +x /app/healthcheck.py && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py &&     chmod +x /app/healthcheck.py &&     chown -R appuser:appuser /app", "__startline__": 53, "__endline__": 58, "resource_type": "RUN", "hash": "eacfc2e4248331c80311dfd7dd317301804f631030a21c81a608cc34db588f4e"}, "evaluated_keys": ["value"]}, "code_block": [[54, "RUN mkdir -p /app/logs && \\\n"], [55, "    chmod 755 /app && \\\n"], [56, "    chmod 750 /app/logs && \\\n"], [57, "    chmod 644 /app/*.py && \\\n"], [58, "    chmod +x /app/healthcheck.py && \\\n"], [59, "    chown -R appuser:appuser /app\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [54, 59], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_15", "bc_check_id": null, "check_name": "Ensure that the yum and dnf package managers are not configured to disable SSL certificate validation via the 'sslverify' configuration option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9, "resource_type": "RUN", "hash": "356327b8cba0e5b42ad6ebf6cdd6eb6815804cb2bc10e725ba7ea320865fb35f"}, "evaluated_keys": ["value"]}, "code_block": [[5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [5, 10], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_15", "bc_check_id": null, "check_name": "Ensure that the yum and dnf package managers are not configured to disable SSL certificate validation via the 'sslverify' configuration option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13, "resource_type": "RUN", "hash": "0ecce5c9d6ed4de7d52dd31b4cf8656c6ca40f188cb68bcdc51cf7a3435f0911"}, "evaluated_keys": ["value"]}, "code_block": [[14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [14, 14], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_15", "bc_check_id": null, "check_name": "Ensure that the yum and dnf package managers are not configured to disable SSL certificate validation via the 'sslverify' configuration option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n", "value": "pip install --no-cache-dir --user /tmp/cwe_ingestion/", "__startline__": 17, "__endline__": 17}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n", "value": "pip install --no-cache-dir --user /tmp/cwe_ingestion/", "__startline__": 17, "__endline__": 17, "resource_type": "RUN", "hash": "b3ea5d10af0655e321c59f00079e6e8c217386e287ec36b6a41fe5bf1a1c2989"}, "evaluated_keys": ["value"]}, "code_block": [[18, "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [18, 18], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_15", "bc_check_id": null, "check_name": "Ensure that the yum and dnf package managers are not configured to disable SSL certificate validation via the 'sslverify' configuration option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 35, "__endline__": 39}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 35, "__endline__": 39, "resource_type": "RUN", "hash": "79f46ddec118a40fa13171a2fba6204a21a79bf7aa4ea611a4d62298000a39bc"}, "evaluated_keys": ["value"]}, "code_block": [[36, "RUN apt-get update && \\\n"], [37, "    apt-get install -y --no-install-recommends \\\n"], [38, "        ca-certificates && \\\n"], [39, "    rm -rf /var/lib/apt/lists/* && \\\n"], [40, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [36, 40], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_15", "bc_check_id": null, "check_name": "Ensure that the yum and dnf package managers are not configured to disable SSL certificate validation via the 'sslverify' configuration option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 42, "__endline__": 43}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 42, "__endline__": 43, "resource_type": "RUN", "hash": "e127f4787431717d746b42ab0a00e6055452243ce949cb13c254e179589e5e9b"}, "evaluated_keys": ["value"]}, "code_block": [[43, "RUN groupadd --gid 1000 appuser && \\\n"], [44, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [43, 44], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_15", "bc_check_id": null, "check_name": "Ensure that the yum and dnf package managers are not configured to disable SSL certificate validation via the 'sslverify' configuration option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN mkdir -p ./.chainlit ./public\n", "value": "mkdir -p ./.chainlit ./public", "__startline__": 56, "__endline__": 56}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p ./.chainlit ./public\n", "value": "mkdir -p ./.chainlit ./public", "__startline__": 56, "__endline__": 56, "resource_type": "RUN", "hash": "8b4b4366b191f373066ebeab94204a47bd6d4186046a26bbc35c3a27a1c416c9"}, "evaluated_keys": ["value"]}, "code_block": [[57, "RUN mkdir -p ./.chainlit ./public\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [57, 57], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_15", "bc_check_id": null, "check_name": "Ensure that the yum and dnf package managers are not configured to disable SSL certificate validation via the 'sslverify' configuration option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py /app/chainlit.md && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py /app/chainlit.md &&     chown -R appuser:appuser /app", "__startline__": 60, "__endline__": 64}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py /app/chainlit.md && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py /app/chainlit.md &&     chown -R appuser:appuser /app", "__startline__": 60, "__endline__": 64, "resource_type": "RUN", "hash": "968962761996c89450c3c6c831fa6adae7a1d26fabfeab2bd65bd20f90dfeabc"}, "evaluated_keys": ["value"]}, "code_block": [[61, "RUN mkdir -p /app/logs && \\\n"], [62, "    chmod 755 /app && \\\n"], [63, "    chmod 750 /app/logs && \\\n"], [64, "    chmod 644 /app/*.py /app/chainlit.md && \\\n"], [65, "    chown -R appuser:appuser /app\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [61, 65], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_15", "bc_check_id": null, "check_name": "Ensure that the yum and dnf package managers are not configured to disable SSL certificate validation via the 'sslverify' configuration option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9, "resource_type": "RUN", "hash": "5e643101f0eb2e908e2ed30e55f7695cea5cddd31a1d0fa26a3c2f4290ff1307"}, "evaluated_keys": ["value"]}, "code_block": [[5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [5, 10], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_15", "bc_check_id": null, "check_name": "Ensure that the yum and dnf package managers are not configured to disable SSL certificate validation via the 'sslverify' configuration option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13, "resource_type": "RUN", "hash": "ea58e290aadc1da0426820257be6a0195ba1aa64af3403c9ea66547979f26fb5"}, "evaluated_keys": ["value"]}, "code_block": [[14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [14, 14], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_15", "bc_check_id": null, "check_name": "Ensure that the yum and dnf package managers are not configured to disable SSL certificate validation via the 'sslverify' configuration option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 31, "__endline__": 35}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 31, "__endline__": 35, "resource_type": "RUN", "hash": "4b837a125fbdb82fc32b01024470ea0adb0726512c78cfb0b12e09737e071222"}, "evaluated_keys": ["value"]}, "code_block": [[32, "RUN apt-get update && \\\n"], [33, "    apt-get install -y --no-install-recommends \\\n"], [34, "        ca-certificates && \\\n"], [35, "    rm -rf /var/lib/apt/lists/* && \\\n"], [36, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [32, 36], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_15", "bc_check_id": null, "check_name": "Ensure that the yum and dnf package managers are not configured to disable SSL certificate validation via the 'sslverify' configuration option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 38, "__endline__": 39}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 38, "__endline__": 39, "resource_type": "RUN", "hash": "953888288557754d096763e73a8b3191302e5af2d8a5fddffb8c81b27a7fd23a"}, "evaluated_keys": ["value"]}, "code_block": [[39, "RUN groupadd --gid 1000 appuser && \\\n"], [40, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [39, 40], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_15", "bc_check_id": null, "check_name": "Ensure that the yum and dnf package managers are not configured to disable SSL certificate validation via the 'sslverify' configuration option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py && \\\n    chmod +x /app/healthcheck.py && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py &&     chmod +x /app/healthcheck.py &&     chown -R appuser:appuser /app", "__startline__": 53, "__endline__": 58}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py && \\\n    chmod +x /app/healthcheck.py && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py &&     chmod +x /app/healthcheck.py &&     chown -R appuser:appuser /app", "__startline__": 53, "__endline__": 58, "resource_type": "RUN", "hash": "eacfc2e4248331c80311dfd7dd317301804f631030a21c81a608cc34db588f4e"}, "evaluated_keys": ["value"]}, "code_block": [[54, "RUN mkdir -p /app/logs && \\\n"], [55, "    chmod 755 /app && \\\n"], [56, "    chmod 750 /app/logs && \\\n"], [57, "    chmod 644 /app/*.py && \\\n"], [58, "    chmod +x /app/healthcheck.py && \\\n"], [59, "    chown -R appuser:appuser /app\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [54, 59], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_4", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the pip '--trusted-host' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9, "resource_type": "RUN", "hash": "356327b8cba0e5b42ad6ebf6cdd6eb6815804cb2bc10e725ba7ea320865fb35f"}, "evaluated_keys": ["value"]}, "code_block": [[5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [5, 10], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_4", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the pip '--trusted-host' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13, "resource_type": "RUN", "hash": "0ecce5c9d6ed4de7d52dd31b4cf8656c6ca40f188cb68bcdc51cf7a3435f0911"}, "evaluated_keys": ["value"]}, "code_block": [[14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [14, 14], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_4", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the pip '--trusted-host' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n", "value": "pip install --no-cache-dir --user /tmp/cwe_ingestion/", "__startline__": 17, "__endline__": 17}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n", "value": "pip install --no-cache-dir --user /tmp/cwe_ingestion/", "__startline__": 17, "__endline__": 17, "resource_type": "RUN", "hash": "b3ea5d10af0655e321c59f00079e6e8c217386e287ec36b6a41fe5bf1a1c2989"}, "evaluated_keys": ["value"]}, "code_block": [[18, "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [18, 18], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_4", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the pip '--trusted-host' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 35, "__endline__": 39}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 35, "__endline__": 39, "resource_type": "RUN", "hash": "79f46ddec118a40fa13171a2fba6204a21a79bf7aa4ea611a4d62298000a39bc"}, "evaluated_keys": ["value"]}, "code_block": [[36, "RUN apt-get update && \\\n"], [37, "    apt-get install -y --no-install-recommends \\\n"], [38, "        ca-certificates && \\\n"], [39, "    rm -rf /var/lib/apt/lists/* && \\\n"], [40, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [36, 40], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_4", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the pip '--trusted-host' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 42, "__endline__": 43}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 42, "__endline__": 43, "resource_type": "RUN", "hash": "e127f4787431717d746b42ab0a00e6055452243ce949cb13c254e179589e5e9b"}, "evaluated_keys": ["value"]}, "code_block": [[43, "RUN groupadd --gid 1000 appuser && \\\n"], [44, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [43, 44], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_4", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the pip '--trusted-host' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN mkdir -p ./.chainlit ./public\n", "value": "mkdir -p ./.chainlit ./public", "__startline__": 56, "__endline__": 56}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p ./.chainlit ./public\n", "value": "mkdir -p ./.chainlit ./public", "__startline__": 56, "__endline__": 56, "resource_type": "RUN", "hash": "8b4b4366b191f373066ebeab94204a47bd6d4186046a26bbc35c3a27a1c416c9"}, "evaluated_keys": ["value"]}, "code_block": [[57, "RUN mkdir -p ./.chainlit ./public\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [57, 57], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_4", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the pip '--trusted-host' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py /app/chainlit.md && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py /app/chainlit.md &&     chown -R appuser:appuser /app", "__startline__": 60, "__endline__": 64}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py /app/chainlit.md && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py /app/chainlit.md &&     chown -R appuser:appuser /app", "__startline__": 60, "__endline__": 64, "resource_type": "RUN", "hash": "968962761996c89450c3c6c831fa6adae7a1d26fabfeab2bd65bd20f90dfeabc"}, "evaluated_keys": ["value"]}, "code_block": [[61, "RUN mkdir -p /app/logs && \\\n"], [62, "    chmod 755 /app && \\\n"], [63, "    chmod 750 /app/logs && \\\n"], [64, "    chmod 644 /app/*.py /app/chainlit.md && \\\n"], [65, "    chown -R appuser:appuser /app\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [61, 65], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_4", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the pip '--trusted-host' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9, "resource_type": "RUN", "hash": "5e643101f0eb2e908e2ed30e55f7695cea5cddd31a1d0fa26a3c2f4290ff1307"}, "evaluated_keys": ["value"]}, "code_block": [[5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [5, 10], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_4", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the pip '--trusted-host' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13, "resource_type": "RUN", "hash": "ea58e290aadc1da0426820257be6a0195ba1aa64af3403c9ea66547979f26fb5"}, "evaluated_keys": ["value"]}, "code_block": [[14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [14, 14], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_4", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the pip '--trusted-host' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 31, "__endline__": 35}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 31, "__endline__": 35, "resource_type": "RUN", "hash": "4b837a125fbdb82fc32b01024470ea0adb0726512c78cfb0b12e09737e071222"}, "evaluated_keys": ["value"]}, "code_block": [[32, "RUN apt-get update && \\\n"], [33, "    apt-get install -y --no-install-recommends \\\n"], [34, "        ca-certificates && \\\n"], [35, "    rm -rf /var/lib/apt/lists/* && \\\n"], [36, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [32, 36], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_4", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the pip '--trusted-host' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 38, "__endline__": 39}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 38, "__endline__": 39, "resource_type": "RUN", "hash": "953888288557754d096763e73a8b3191302e5af2d8a5fddffb8c81b27a7fd23a"}, "evaluated_keys": ["value"]}, "code_block": [[39, "RUN groupadd --gid 1000 appuser && \\\n"], [40, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [39, 40], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_4", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with the pip '--trusted-host' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py && \\\n    chmod +x /app/healthcheck.py && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py &&     chmod +x /app/healthcheck.py &&     chown -R appuser:appuser /app", "__startline__": 53, "__endline__": 58}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py && \\\n    chmod +x /app/healthcheck.py && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py &&     chmod +x /app/healthcheck.py &&     chown -R appuser:appuser /app", "__startline__": 53, "__endline__": 58, "resource_type": "RUN", "hash": "eacfc2e4248331c80311dfd7dd317301804f631030a21c81a608cc34db588f4e"}, "evaluated_keys": ["value"]}, "code_block": [[54, "RUN mkdir -p /app/logs && \\\n"], [55, "    chmod 755 /app && \\\n"], [56, "    chmod 750 /app/logs && \\\n"], [57, "    chmod 644 /app/*.py && \\\n"], [58, "    chmod +x /app/healthcheck.py && \\\n"], [59, "    chown -R appuser:appuser /app\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [54, 59], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_10", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing signatures are not used by rpm via the '--nodigest', '--nosignature', '--noverify', or '--nofiledigest' options", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9, "resource_type": "RUN", "hash": "356327b8cba0e5b42ad6ebf6cdd6eb6815804cb2bc10e725ba7ea320865fb35f"}, "evaluated_keys": ["value"]}, "code_block": [[5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [5, 10], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_10", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing signatures are not used by rpm via the '--nodigest', '--nosignature', '--noverify', or '--nofiledigest' options", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13, "resource_type": "RUN", "hash": "0ecce5c9d6ed4de7d52dd31b4cf8656c6ca40f188cb68bcdc51cf7a3435f0911"}, "evaluated_keys": ["value"]}, "code_block": [[14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [14, 14], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_10", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing signatures are not used by rpm via the '--nodigest', '--nosignature', '--noverify', or '--nofiledigest' options", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n", "value": "pip install --no-cache-dir --user /tmp/cwe_ingestion/", "__startline__": 17, "__endline__": 17}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n", "value": "pip install --no-cache-dir --user /tmp/cwe_ingestion/", "__startline__": 17, "__endline__": 17, "resource_type": "RUN", "hash": "b3ea5d10af0655e321c59f00079e6e8c217386e287ec36b6a41fe5bf1a1c2989"}, "evaluated_keys": ["value"]}, "code_block": [[18, "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [18, 18], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_10", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing signatures are not used by rpm via the '--nodigest', '--nosignature', '--noverify', or '--nofiledigest' options", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 35, "__endline__": 39}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 35, "__endline__": 39, "resource_type": "RUN", "hash": "79f46ddec118a40fa13171a2fba6204a21a79bf7aa4ea611a4d62298000a39bc"}, "evaluated_keys": ["value"]}, "code_block": [[36, "RUN apt-get update && \\\n"], [37, "    apt-get install -y --no-install-recommends \\\n"], [38, "        ca-certificates && \\\n"], [39, "    rm -rf /var/lib/apt/lists/* && \\\n"], [40, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [36, 40], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_10", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing signatures are not used by rpm via the '--nodigest', '--nosignature', '--noverify', or '--nofiledigest' options", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 42, "__endline__": 43}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 42, "__endline__": 43, "resource_type": "RUN", "hash": "e127f4787431717d746b42ab0a00e6055452243ce949cb13c254e179589e5e9b"}, "evaluated_keys": ["value"]}, "code_block": [[43, "RUN groupadd --gid 1000 appuser && \\\n"], [44, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [43, 44], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_10", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing signatures are not used by rpm via the '--nodigest', '--nosignature', '--noverify', or '--nofiledigest' options", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN mkdir -p ./.chainlit ./public\n", "value": "mkdir -p ./.chainlit ./public", "__startline__": 56, "__endline__": 56}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p ./.chainlit ./public\n", "value": "mkdir -p ./.chainlit ./public", "__startline__": 56, "__endline__": 56, "resource_type": "RUN", "hash": "8b4b4366b191f373066ebeab94204a47bd6d4186046a26bbc35c3a27a1c416c9"}, "evaluated_keys": ["value"]}, "code_block": [[57, "RUN mkdir -p ./.chainlit ./public\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [57, 57], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_10", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing signatures are not used by rpm via the '--nodigest', '--nosignature', '--noverify', or '--nofiledigest' options", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py /app/chainlit.md && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py /app/chainlit.md &&     chown -R appuser:appuser /app", "__startline__": 60, "__endline__": 64}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py /app/chainlit.md && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py /app/chainlit.md &&     chown -R appuser:appuser /app", "__startline__": 60, "__endline__": 64, "resource_type": "RUN", "hash": "968962761996c89450c3c6c831fa6adae7a1d26fabfeab2bd65bd20f90dfeabc"}, "evaluated_keys": ["value"]}, "code_block": [[61, "RUN mkdir -p /app/logs && \\\n"], [62, "    chmod 755 /app && \\\n"], [63, "    chmod 750 /app/logs && \\\n"], [64, "    chmod 644 /app/*.py /app/chainlit.md && \\\n"], [65, "    chown -R appuser:appuser /app\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [61, 65], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_10", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing signatures are not used by rpm via the '--nodigest', '--nosignature', '--noverify', or '--nofiledigest' options", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9, "resource_type": "RUN", "hash": "5e643101f0eb2e908e2ed30e55f7695cea5cddd31a1d0fa26a3c2f4290ff1307"}, "evaluated_keys": ["value"]}, "code_block": [[5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [5, 10], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_10", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing signatures are not used by rpm via the '--nodigest', '--nosignature', '--noverify', or '--nofiledigest' options", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13, "resource_type": "RUN", "hash": "ea58e290aadc1da0426820257be6a0195ba1aa64af3403c9ea66547979f26fb5"}, "evaluated_keys": ["value"]}, "code_block": [[14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [14, 14], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_10", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing signatures are not used by rpm via the '--nodigest', '--nosignature', '--noverify', or '--nofiledigest' options", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 31, "__endline__": 35}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 31, "__endline__": 35, "resource_type": "RUN", "hash": "4b837a125fbdb82fc32b01024470ea0adb0726512c78cfb0b12e09737e071222"}, "evaluated_keys": ["value"]}, "code_block": [[32, "RUN apt-get update && \\\n"], [33, "    apt-get install -y --no-install-recommends \\\n"], [34, "        ca-certificates && \\\n"], [35, "    rm -rf /var/lib/apt/lists/* && \\\n"], [36, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [32, 36], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_10", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing signatures are not used by rpm via the '--nodigest', '--nosignature', '--noverify', or '--nofiledigest' options", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 38, "__endline__": 39}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 38, "__endline__": 39, "resource_type": "RUN", "hash": "953888288557754d096763e73a8b3191302e5af2d8a5fddffb8c81b27a7fd23a"}, "evaluated_keys": ["value"]}, "code_block": [[39, "RUN groupadd --gid 1000 appuser && \\\n"], [40, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [39, 40], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_10", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing signatures are not used by rpm via the '--nodigest', '--nosignature', '--noverify', or '--nofiledigest' options", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py && \\\n    chmod +x /app/healthcheck.py && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py &&     chmod +x /app/healthcheck.py &&     chown -R appuser:appuser /app", "__startline__": 53, "__endline__": 58}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py && \\\n    chmod +x /app/healthcheck.py && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py &&     chmod +x /app/healthcheck.py &&     chown -R appuser:appuser /app", "__startline__": 53, "__endline__": 58, "resource_type": "RUN", "hash": "eacfc2e4248331c80311dfd7dd317301804f631030a21c81a608cc34db588f4e"}, "evaluated_keys": ["value"]}, "code_block": [[54, "RUN mkdir -p /app/logs && \\\n"], [55, "    chmod 755 /app && \\\n"], [56, "    chmod 750 /app/logs && \\\n"], [57, "    chmod 644 /app/*.py && \\\n"], [58, "    chmod +x /app/healthcheck.py && \\\n"], [59, "    chown -R appuser:appuser /app\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [54, 59], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_7", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing signatures are not used by apk via the '--allow-untrusted' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9, "resource_type": "RUN", "hash": "356327b8cba0e5b42ad6ebf6cdd6eb6815804cb2bc10e725ba7ea320865fb35f"}, "evaluated_keys": ["value"]}, "code_block": [[5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [5, 10], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_7", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing signatures are not used by apk via the '--allow-untrusted' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13, "resource_type": "RUN", "hash": "0ecce5c9d6ed4de7d52dd31b4cf8656c6ca40f188cb68bcdc51cf7a3435f0911"}, "evaluated_keys": ["value"]}, "code_block": [[14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [14, 14], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_7", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing signatures are not used by apk via the '--allow-untrusted' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n", "value": "pip install --no-cache-dir --user /tmp/cwe_ingestion/", "__startline__": 17, "__endline__": 17}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n", "value": "pip install --no-cache-dir --user /tmp/cwe_ingestion/", "__startline__": 17, "__endline__": 17, "resource_type": "RUN", "hash": "b3ea5d10af0655e321c59f00079e6e8c217386e287ec36b6a41fe5bf1a1c2989"}, "evaluated_keys": ["value"]}, "code_block": [[18, "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [18, 18], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_7", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing signatures are not used by apk via the '--allow-untrusted' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 35, "__endline__": 39}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 35, "__endline__": 39, "resource_type": "RUN", "hash": "79f46ddec118a40fa13171a2fba6204a21a79bf7aa4ea611a4d62298000a39bc"}, "evaluated_keys": ["value"]}, "code_block": [[36, "RUN apt-get update && \\\n"], [37, "    apt-get install -y --no-install-recommends \\\n"], [38, "        ca-certificates && \\\n"], [39, "    rm -rf /var/lib/apt/lists/* && \\\n"], [40, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [36, 40], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_7", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing signatures are not used by apk via the '--allow-untrusted' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 42, "__endline__": 43}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 42, "__endline__": 43, "resource_type": "RUN", "hash": "e127f4787431717d746b42ab0a00e6055452243ce949cb13c254e179589e5e9b"}, "evaluated_keys": ["value"]}, "code_block": [[43, "RUN groupadd --gid 1000 appuser && \\\n"], [44, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [43, 44], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_7", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing signatures are not used by apk via the '--allow-untrusted' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN mkdir -p ./.chainlit ./public\n", "value": "mkdir -p ./.chainlit ./public", "__startline__": 56, "__endline__": 56}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p ./.chainlit ./public\n", "value": "mkdir -p ./.chainlit ./public", "__startline__": 56, "__endline__": 56, "resource_type": "RUN", "hash": "8b4b4366b191f373066ebeab94204a47bd6d4186046a26bbc35c3a27a1c416c9"}, "evaluated_keys": ["value"]}, "code_block": [[57, "RUN mkdir -p ./.chainlit ./public\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [57, 57], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_7", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing signatures are not used by apk via the '--allow-untrusted' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py /app/chainlit.md && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py /app/chainlit.md &&     chown -R appuser:appuser /app", "__startline__": 60, "__endline__": 64}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py /app/chainlit.md && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py /app/chainlit.md &&     chown -R appuser:appuser /app", "__startline__": 60, "__endline__": 64, "resource_type": "RUN", "hash": "968962761996c89450c3c6c831fa6adae7a1d26fabfeab2bd65bd20f90dfeabc"}, "evaluated_keys": ["value"]}, "code_block": [[61, "RUN mkdir -p /app/logs && \\\n"], [62, "    chmod 755 /app && \\\n"], [63, "    chmod 750 /app/logs && \\\n"], [64, "    chmod 644 /app/*.py /app/chainlit.md && \\\n"], [65, "    chown -R appuser:appuser /app\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [61, 65], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_7", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing signatures are not used by apk via the '--allow-untrusted' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9, "resource_type": "RUN", "hash": "5e643101f0eb2e908e2ed30e55f7695cea5cddd31a1d0fa26a3c2f4290ff1307"}, "evaluated_keys": ["value"]}, "code_block": [[5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [5, 10], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_7", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing signatures are not used by apk via the '--allow-untrusted' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13, "resource_type": "RUN", "hash": "ea58e290aadc1da0426820257be6a0195ba1aa64af3403c9ea66547979f26fb5"}, "evaluated_keys": ["value"]}, "code_block": [[14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [14, 14], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_7", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing signatures are not used by apk via the '--allow-untrusted' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 31, "__endline__": 35}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 31, "__endline__": 35, "resource_type": "RUN", "hash": "4b837a125fbdb82fc32b01024470ea0adb0726512c78cfb0b12e09737e071222"}, "evaluated_keys": ["value"]}, "code_block": [[32, "RUN apt-get update && \\\n"], [33, "    apt-get install -y --no-install-recommends \\\n"], [34, "        ca-certificates && \\\n"], [35, "    rm -rf /var/lib/apt/lists/* && \\\n"], [36, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [32, 36], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_7", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing signatures are not used by apk via the '--allow-untrusted' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 38, "__endline__": 39}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 38, "__endline__": 39, "resource_type": "RUN", "hash": "953888288557754d096763e73a8b3191302e5af2d8a5fddffb8c81b27a7fd23a"}, "evaluated_keys": ["value"]}, "code_block": [[39, "RUN groupadd --gid 1000 appuser && \\\n"], [40, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [39, 40], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_7", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing signatures are not used by apk via the '--allow-untrusted' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py && \\\n    chmod +x /app/healthcheck.py && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py &&     chmod +x /app/healthcheck.py &&     chown -R appuser:appuser /app", "__startline__": 53, "__endline__": 58}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py && \\\n    chmod +x /app/healthcheck.py && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py &&     chmod +x /app/healthcheck.py &&     chown -R appuser:appuser /app", "__startline__": 53, "__endline__": 58, "resource_type": "RUN", "hash": "eacfc2e4248331c80311dfd7dd317301804f631030a21c81a608cc34db588f4e"}, "evaluated_keys": ["value"]}, "code_block": [[54, "RUN mkdir -p /app/logs && \\\n"], [55, "    chmod 755 /app && \\\n"], [56, "    chmod 750 /app/logs && \\\n"], [57, "    chmod 644 /app/*.py && \\\n"], [58, "    chmod +x /app/healthcheck.py && \\\n"], [59, "    chown -R appuser:appuser /app\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [54, 59], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_8", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing signatures are not used by apt-get via the '--allow-unauthenticated' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9, "resource_type": "RUN", "hash": "356327b8cba0e5b42ad6ebf6cdd6eb6815804cb2bc10e725ba7ea320865fb35f"}, "evaluated_keys": ["value"]}, "code_block": [[5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [5, 10], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_8", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing signatures are not used by apt-get via the '--allow-unauthenticated' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13, "resource_type": "RUN", "hash": "0ecce5c9d6ed4de7d52dd31b4cf8656c6ca40f188cb68bcdc51cf7a3435f0911"}, "evaluated_keys": ["value"]}, "code_block": [[14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [14, 14], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_8", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing signatures are not used by apt-get via the '--allow-unauthenticated' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n", "value": "pip install --no-cache-dir --user /tmp/cwe_ingestion/", "__startline__": 17, "__endline__": 17}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n", "value": "pip install --no-cache-dir --user /tmp/cwe_ingestion/", "__startline__": 17, "__endline__": 17, "resource_type": "RUN", "hash": "b3ea5d10af0655e321c59f00079e6e8c217386e287ec36b6a41fe5bf1a1c2989"}, "evaluated_keys": ["value"]}, "code_block": [[18, "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [18, 18], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_8", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing signatures are not used by apt-get via the '--allow-unauthenticated' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 35, "__endline__": 39}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 35, "__endline__": 39, "resource_type": "RUN", "hash": "79f46ddec118a40fa13171a2fba6204a21a79bf7aa4ea611a4d62298000a39bc"}, "evaluated_keys": ["value"]}, "code_block": [[36, "RUN apt-get update && \\\n"], [37, "    apt-get install -y --no-install-recommends \\\n"], [38, "        ca-certificates && \\\n"], [39, "    rm -rf /var/lib/apt/lists/* && \\\n"], [40, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [36, 40], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_8", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing signatures are not used by apt-get via the '--allow-unauthenticated' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 42, "__endline__": 43}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 42, "__endline__": 43, "resource_type": "RUN", "hash": "e127f4787431717d746b42ab0a00e6055452243ce949cb13c254e179589e5e9b"}, "evaluated_keys": ["value"]}, "code_block": [[43, "RUN groupadd --gid 1000 appuser && \\\n"], [44, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [43, 44], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_8", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing signatures are not used by apt-get via the '--allow-unauthenticated' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN mkdir -p ./.chainlit ./public\n", "value": "mkdir -p ./.chainlit ./public", "__startline__": 56, "__endline__": 56}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p ./.chainlit ./public\n", "value": "mkdir -p ./.chainlit ./public", "__startline__": 56, "__endline__": 56, "resource_type": "RUN", "hash": "8b4b4366b191f373066ebeab94204a47bd6d4186046a26bbc35c3a27a1c416c9"}, "evaluated_keys": ["value"]}, "code_block": [[57, "RUN mkdir -p ./.chainlit ./public\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [57, 57], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_8", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing signatures are not used by apt-get via the '--allow-unauthenticated' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py /app/chainlit.md && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py /app/chainlit.md &&     chown -R appuser:appuser /app", "__startline__": 60, "__endline__": 64}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py /app/chainlit.md && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py /app/chainlit.md &&     chown -R appuser:appuser /app", "__startline__": 60, "__endline__": 64, "resource_type": "RUN", "hash": "968962761996c89450c3c6c831fa6adae7a1d26fabfeab2bd65bd20f90dfeabc"}, "evaluated_keys": ["value"]}, "code_block": [[61, "RUN mkdir -p /app/logs && \\\n"], [62, "    chmod 755 /app && \\\n"], [63, "    chmod 750 /app/logs && \\\n"], [64, "    chmod 644 /app/*.py /app/chainlit.md && \\\n"], [65, "    chown -R appuser:appuser /app\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [61, 65], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_8", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing signatures are not used by apt-get via the '--allow-unauthenticated' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9, "resource_type": "RUN", "hash": "5e643101f0eb2e908e2ed30e55f7695cea5cddd31a1d0fa26a3c2f4290ff1307"}, "evaluated_keys": ["value"]}, "code_block": [[5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [5, 10], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_8", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing signatures are not used by apt-get via the '--allow-unauthenticated' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13, "resource_type": "RUN", "hash": "ea58e290aadc1da0426820257be6a0195ba1aa64af3403c9ea66547979f26fb5"}, "evaluated_keys": ["value"]}, "code_block": [[14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [14, 14], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_8", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing signatures are not used by apt-get via the '--allow-unauthenticated' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 31, "__endline__": 35}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 31, "__endline__": 35, "resource_type": "RUN", "hash": "4b837a125fbdb82fc32b01024470ea0adb0726512c78cfb0b12e09737e071222"}, "evaluated_keys": ["value"]}, "code_block": [[32, "RUN apt-get update && \\\n"], [33, "    apt-get install -y --no-install-recommends \\\n"], [34, "        ca-certificates && \\\n"], [35, "    rm -rf /var/lib/apt/lists/* && \\\n"], [36, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [32, 36], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_8", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing signatures are not used by apt-get via the '--allow-unauthenticated' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 38, "__endline__": 39}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 38, "__endline__": 39, "resource_type": "RUN", "hash": "953888288557754d096763e73a8b3191302e5af2d8a5fddffb8c81b27a7fd23a"}, "evaluated_keys": ["value"]}, "code_block": [[39, "RUN groupadd --gid 1000 appuser && \\\n"], [40, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [39, 40], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_8", "bc_check_id": null, "check_name": "Ensure that packages with untrusted or missing signatures are not used by apt-get via the '--allow-unauthenticated' option", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py && \\\n    chmod +x /app/healthcheck.py && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py &&     chmod +x /app/healthcheck.py &&     chown -R appuser:appuser /app", "__startline__": 53, "__endline__": 58}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py && \\\n    chmod +x /app/healthcheck.py && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py &&     chmod +x /app/healthcheck.py &&     chown -R appuser:appuser /app", "__startline__": 53, "__endline__": 58, "resource_type": "RUN", "hash": "eacfc2e4248331c80311dfd7dd317301804f631030a21c81a608cc34db588f4e"}, "evaluated_keys": ["value"]}, "code_block": [[54, "RUN mkdir -p /app/logs && \\\n"], [55, "    chmod 755 /app && \\\n"], [56, "    chmod 750 /app/logs && \\\n"], [57, "    chmod 644 /app/*.py && \\\n"], [58, "    chmod +x /app/healthcheck.py && \\\n"], [59, "    chown -R appuser:appuser /app\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [54, 59], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_3", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with wget", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9, "resource_type": "RUN", "hash": "356327b8cba0e5b42ad6ebf6cdd6eb6815804cb2bc10e725ba7ea320865fb35f"}, "evaluated_keys": ["value"]}, "code_block": [[5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [5, 10], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_3", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with wget", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13, "resource_type": "RUN", "hash": "0ecce5c9d6ed4de7d52dd31b4cf8656c6ca40f188cb68bcdc51cf7a3435f0911"}, "evaluated_keys": ["value"]}, "code_block": [[14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [14, 14], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_3", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with wget", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n", "value": "pip install --no-cache-dir --user /tmp/cwe_ingestion/", "__startline__": 17, "__endline__": 17}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n", "value": "pip install --no-cache-dir --user /tmp/cwe_ingestion/", "__startline__": 17, "__endline__": 17, "resource_type": "RUN", "hash": "b3ea5d10af0655e321c59f00079e6e8c217386e287ec36b6a41fe5bf1a1c2989"}, "evaluated_keys": ["value"]}, "code_block": [[18, "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [18, 18], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_3", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with wget", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 35, "__endline__": 39}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 35, "__endline__": 39, "resource_type": "RUN", "hash": "79f46ddec118a40fa13171a2fba6204a21a79bf7aa4ea611a4d62298000a39bc"}, "evaluated_keys": ["value"]}, "code_block": [[36, "RUN apt-get update && \\\n"], [37, "    apt-get install -y --no-install-recommends \\\n"], [38, "        ca-certificates && \\\n"], [39, "    rm -rf /var/lib/apt/lists/* && \\\n"], [40, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [36, 40], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_3", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with wget", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 42, "__endline__": 43}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 42, "__endline__": 43, "resource_type": "RUN", "hash": "e127f4787431717d746b42ab0a00e6055452243ce949cb13c254e179589e5e9b"}, "evaluated_keys": ["value"]}, "code_block": [[43, "RUN groupadd --gid 1000 appuser && \\\n"], [44, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [43, 44], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_3", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with wget", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN mkdir -p ./.chainlit ./public\n", "value": "mkdir -p ./.chainlit ./public", "__startline__": 56, "__endline__": 56}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p ./.chainlit ./public\n", "value": "mkdir -p ./.chainlit ./public", "__startline__": 56, "__endline__": 56, "resource_type": "RUN", "hash": "8b4b4366b191f373066ebeab94204a47bd6d4186046a26bbc35c3a27a1c416c9"}, "evaluated_keys": ["value"]}, "code_block": [[57, "RUN mkdir -p ./.chainlit ./public\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [57, 57], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_3", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with wget", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile", "config_": {"content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py /app/chainlit.md && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py /app/chainlit.md &&     chown -R appuser:appuser /app", "__startline__": 60, "__endline__": 64}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py /app/chainlit.md && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py /app/chainlit.md &&     chown -R appuser:appuser /app", "__startline__": 60, "__endline__": 64, "resource_type": "RUN", "hash": "968962761996c89450c3c6c831fa6adae7a1d26fabfeab2bd65bd20f90dfeabc"}, "evaluated_keys": ["value"]}, "code_block": [[61, "RUN mkdir -p /app/logs && \\\n"], [62, "    chmod 755 /app && \\\n"], [63, "    chmod 750 /app/logs && \\\n"], [64, "    chmod 644 /app/*.py /app/chainlit.md && \\\n"], [65, "    chown -R appuser:appuser /app\n"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [61, 65], "resource": "/apps/chatbot/Dockerfile.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_3", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with wget", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 4, "__endline__": 9, "resource_type": "RUN", "hash": "5e643101f0eb2e908e2ed30e55f7695cea5cddd31a1d0fa26a3c2f4290ff1307"}, "evaluated_keys": ["value"]}, "code_block": [[5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [5, 10], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_3", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with wget", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN pip install --no-cache-dir --user -r requirements.txt\n", "value": "pip install --no-cache-dir --user -r requirements.txt", "__startline__": 13, "__endline__": 13, "resource_type": "RUN", "hash": "ea58e290aadc1da0426820257be6a0195ba1aa64af3403c9ea66547979f26fb5"}, "evaluated_keys": ["value"]}, "code_block": [[14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [14, 14], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_3", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with wget", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 31, "__endline__": 35}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n", "value": "apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean", "__startline__": 31, "__endline__": 35, "resource_type": "RUN", "hash": "4b837a125fbdb82fc32b01024470ea0adb0726512c78cfb0b12e09737e071222"}, "evaluated_keys": ["value"]}, "code_block": [[32, "RUN apt-get update && \\\n"], [33, "    apt-get install -y --no-install-recommends \\\n"], [34, "        ca-certificates && \\\n"], [35, "    rm -rf /var/lib/apt/lists/* && \\\n"], [36, "    apt-get clean\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [32, 36], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_3", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with wget", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 38, "__endline__": 39}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN groupadd --gid 1000 appuser && \\\n    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n", "value": "groupadd --gid 1000 appuser &&     useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser", "__startline__": 38, "__endline__": 39, "resource_type": "RUN", "hash": "953888288557754d096763e73a8b3191302e5af2d8a5fddffb8c81b27a7fd23a"}, "evaluated_keys": ["value"]}, "code_block": [[39, "RUN groupadd --gid 1000 appuser && \\\n"], [40, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [39, 40], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV2_DOCKER_3", "bc_check_id": null, "check_name": "Ensure that certificate validation isn't disabled with wget", "check_result": {"result": "PASSED", "entity": {"block_name_": "RUN", "block_type_": "resource", "file_path_": "/apps/chatbot/Dockerfile.secure", "config_": {"content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py && \\\n    chmod +x /app/healthcheck.py && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py &&     chmod +x /app/healthcheck.py &&     chown -R appuser:appuser /app", "__startline__": 53, "__endline__": 58}, "label_": "resource: RUN", "id_": "RUN", "source_": "Dockerfile", "content": "RUN mkdir -p /app/logs && \\\n    chmod 755 /app && \\\n    chmod 750 /app/logs && \\\n    chmod 644 /app/*.py && \\\n    chmod +x /app/healthcheck.py && \\\n    chown -R appuser:appuser /app\n", "value": "mkdir -p /app/logs &&     chmod 755 /app &&     chmod 750 /app/logs &&     chmod 644 /app/*.py &&     chmod +x /app/healthcheck.py &&     chown -R appuser:appuser /app", "__startline__": 53, "__endline__": 58, "resource_type": "RUN", "hash": "eacfc2e4248331c80311dfd7dd317301804f631030a21c81a608cc34db588f4e"}, "evaluated_keys": ["value"]}, "code_block": [[54, "RUN mkdir -p /app/logs && \\\n"], [55, "    chmod 755 /app && \\\n"], [56, "    chmod 750 /app/logs && \\\n"], [57, "    chmod 644 /app/*.py && \\\n"], [58, "    chmod +x /app/healthcheck.py && \\\n"], [59, "    chown -R appuser:appuser /app\n"]], "file_path": "/apps/chatbot/Dockerfile.secure", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile.secure", "repo_file_path": "/apps/chatbot/Dockerfile.secure", "file_line_range": [54, 59], "resource": "/apps/chatbot/Dockerfile.secure.RUN", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}], "failed_checks": [{"check_id": "CKV_DOCKER_2", "bc_check_id": null, "check_name": "Ensure that HEALTHCHECK instructions have been added to container images", "check_result": {"result": "FAILED", "results_configuration": null}, "code_block": [[1, "# Multi-stage build for enhanced security\n"], [2, "FROM python:3.11-slim@sha256:8df0e8faf75b3c17ac33dc90d76787bbbcae142679e11da8c6f16afae5605ea7 AS builder\n"], [3, "\n"], [4, "# Install build dependencies with cleanup\n"], [5, "RUN apt-get update && \\\n"], [6, "    apt-get install -y --no-install-recommends \\\n"], [7, "        build-essential \\\n"], [8, "        ca-certificates && \\\n"], [9, "    rm -rf /var/lib/apt/lists/* && \\\n"], [10, "    apt-get clean\n"], [11, "\n"], [12, "# Install Python dependencies\n"], [13, "COPY apps/chatbot/requirements.txt .\n"], [14, "RUN pip install --no-cache-dir --user -r requirements.txt\n"], [15, "\n"], [16, "# Install cwe_ingestion package (required by chatbot)\n"], [17, "COPY apps/cwe_ingestion/ /tmp/cwe_ingestion/\n"], [18, "RUN pip install --no-cache-dir --user /tmp/cwe_ingestion/\n"], [19, "\n"], [20, "# Production stage\n"], [21, "FROM python:3.11-slim@sha256:8df0e8faf75b3c17ac33dc90d76787bbbcae142679e11da8c6f16afae5605ea7\n"], [22, "\n"], [23, "# Security-hardened environment variables\n"], [24, "ENV PYTHONUNBUFFERED=1 \\\n"], [25, "    PYTHONDONTWRITEBYTECODE=1 \\\n"], [26, "    PYTHONHASHSEED=random \\\n"], [27, "    PIP_NO_CACHE_DIR=1 \\\n"], [28, "    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n"], [29, "    # Security features\n"], [30, "    CHAINLIT_HOST=0.0.0.0 \\\n"], [31, "    CHAINLIT_PORT=8080 \\\n"], [32, "    # Memory security\n"], [33, "    MALLOC_CHECK_=2\n"], [34, "\n"], [35, "# Install minimal runtime dependencies\n"], [36, "RUN apt-get update && \\\n"], [37, "    apt-get install -y --no-install-recommends \\\n"], [38, "        ca-certificates && \\\n"], [39, "    rm -rf /var/lib/apt/lists/* && \\\n"], [40, "    apt-get clean\n"], [41, "\n"], [42, "# Create secure non-root user\n"], [43, "RUN groupadd --gid 1000 appuser && \\\n"], [44, "    useradd --uid 1000 --gid 1000 --create-home --no-log-init --shell /bin/false appuser\n"], [45, "\n"], [46, "# Set working directory\n"], [47, "WORKDIR /app\n"], [48, "\n"], [49, "# Copy Python packages from builder\n"], [50, "COPY --from=builder --chown=appuser:appuser /root/.local /home/appuser/.local\n"], [51, "ENV PATH=/home/appuser/.local/bin:$PATH\n"], [52, "\n"], [53, "# Copy application files with secure permissions\n"], [54, "COPY --chown=appuser:appuser apps/chatbot/main.py ./main.py\n"], [55, "COPY --chown=appuser:appuser apps/chatbot/chainlit.md ./chainlit.md\n"], [56, "# Create directories - let Chainlit auto-generate config.toml with correct format\n"], [57, "RUN mkdir -p ./.chainlit ./public\n"], [58, "COPY --chown=appuser:appuser apps/chatbot/src/ ./src/\n"], [59, "\n"], [60, "# Create directories with proper permissions\n"], [61, "RUN mkdir -p /app/logs && \\\n"], [62, "    chmod 755 /app && \\\n"], [63, "    chmod 750 /app/logs && \\\n"], [64, "    chmod 644 /app/*.py /app/chainlit.md && \\\n"], [65, "    chown -R appuser:appuser /app\n"], [66, "\n"], [67, "# Switch to non-root user\n"], [68, "USER appuser\n"], [69, "\n"], [70, "# Expose port\n"], [71, "EXPOSE 8080\n"], [72, "\n"], [73, "# Start command for Cloud Run\n"], [74, "# Note: Cloud Run uses TCP startup probe on port 8080, not Docker HEALTHCHECK\n"], [75, "CMD [\"python\", \"-m\", \"chainlit\", \"run\", \"main.py\", \"--host\", \"0.0.0.0\", \"--port\", \"8080\"]"]], "file_path": "/apps/chatbot/Dockerfile", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/apps/chatbot/Dockerfile", "repo_file_path": "/apps/chatbot/Dockerfile", "file_line_range": [1, 75], "resource": "/apps/chatbot/Dockerfile.", "evaluations": null, "check_class": "checkov.dockerfile.checks.HealthcheckExists", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}], "skipped_checks": [], "parsing_errors": []}, "summary": {"passed": 241, "failed": 1, "skipped": 0, "parsing_errors": 0, "resource_count": 2, "checkov_version": "3.2.477"}, "url": "Add an api key '--bc-api-key <api-key>' to see more detailed insights via https://bridgecrew.cloud"}, {"check_type": "github_actions", "results": {"passed_checks": [{"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"runs-on": "ubuntu-latest", "strategy": {"matrix": {"python": ["3.12"], "__startline__": 15, "__endline__": 16}, "__startline__": 14, "__endline__": 16}, "steps": [{"uses": "actions/checkout@v4", "__startline__": 17, "__endline__": 18}, {"uses": "actions/setup-python@v5", "with": {"python-version": "${{ matrix.python }}", "__startline__": 20, "__endline__": 22}, "__startline__": 18, "__endline__": 22}, {"name": "Install Poetry", "run": "curl -sSL https://install.python-poetry.org | python3 -", "__startline__": 22, "__endline__": 25}, {"name": "Ensure Poetry on PATH", "run": "echo \"$HOME/.local/bin\" >> $GITHUB_PATH", "__startline__": 25, "__endline__": 28}, {"name": "Cache Poetry", "uses": "actions/cache@v4", "with": {"path": "~/.cache/pypoetry", "key": "poetry-${{ hashFiles('**/poetry.lock') }}", "__startline__": 31, "__endline__": 34}, "__startline__": 28, "__endline__": 34}, {"name": "Install deps", "run": "poetry install --no-interaction --no-root", "__startline__": 34, "__endline__": 37}, {"name": "Pre-commit (format, lint, mypy)", "run": "python -m pip install --upgrade pip pipx\npipx install pre-commit\npre-commit run --all-files\n", "__startline__": 37, "__endline__": 43}, {"name": "Tests + coverage", "run": "poetry run pytest --cov --cov-report=xml", "__startline__": 43, "__endline__": 46}, {"name": "Coverage gate", "uses": "orgoro/coverage@v3", "with": {"coverageFile": "./coverage.xml", "failCiIfError": true, "minCoverage": 85, "__startline__": 49, "__endline__": 53}, "__startline__": 46, "__endline__": 53}], "__startline__": 12, "__endline__": 53}}, "code_block": [[12, "    runs-on: ubuntu-latest\n"], [13, "    strategy:\n"], [14, "      matrix:\n"], [15, "        python: ['3.12']\n"], [16, "    steps:\n"], [17, "      - uses: actions/checkout@v4\n"], [18, "      - uses: actions/setup-python@v5\n"], [19, "        with:\n"], [20, "          python-version: ${{ matrix.python }}\n"], [21, "\n"], [22, "      - name: Install Poetry\n"], [23, "        run: curl -sSL https://install.python-poetry.org | python3 -\n"], [24, "\n"], [25, "      - name: Ensure Poetry on PATH\n"], [26, "        run: echo \"$HOME/.local/bin\" >> $GITHUB_PATH\n"], [27, "\n"], [28, "      - name: Cache Poetry\n"], [29, "        uses: actions/cache@v4\n"], [30, "        with:\n"], [31, "          path: ~/.cache/pypoetry\n"], [32, "          key: poetry-${{ hashFiles('**/poetry.lock') }}\n"], [33, "\n"], [34, "      - name: Install deps\n"], [35, "        run: poetry install --no-interaction --no-root\n"], [36, "\n"], [37, "      - name: Pre-commit (format, lint, mypy)\n"], [38, "        run: |\n"], [39, "          python -m pip install --upgrade pip pipx\n"], [40, "          pipx install pre-commit\n"], [41, "          pre-commit run --all-files\n"], [42, "\n"], [43, "      - name: Tests + coverage\n"], [44, "        run: poetry run pytest --cov --cov-report=xml\n"], [45, "\n"], [46, "      - name: Coverage gate\n"], [47, "        uses: orgoro/coverage@v3\n"], [48, "        with:\n"], [49, "          coverageFile: ./coverage.xml\n"], [50, "          failCiIfError: true\n"], [51, "          minCoverage: 85\n"], [52, "\n"], [53, "  pyright:\n"], [54, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [12, 54], "resource": "jobs(lint-type-test)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"runs-on": "ubuntu-latest", "steps": [{"uses": "actions/checkout@v4", "__startline__": 56, "__endline__": 57}, {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 59, "__endline__": 60}, "__startline__": 57, "__endline__": 60}, {"run": "python -m pip install --upgrade pip pipx", "__startline__": 60, "__endline__": 61}, {"run": "pipx install pyright", "__startline__": 61, "__endline__": 62}, {"run": "pyright", "__startline__": 62, "__endline__": 65}], "__startline__": 54, "__endline__": 65}}, "code_block": [[54, "    runs-on: ubuntu-latest\n"], [55, "    steps:\n"], [56, "      - uses: actions/checkout@v4\n"], [57, "      - uses: actions/setup-python@v5\n"], [58, "        with:\n"], [59, "          python-version: '3.12'\n"], [60, "      - run: python -m pip install --upgrade pip pipx\n"], [61, "      - run: pipx install pyright\n"], [62, "      - run: pyright\n"], [63, "\n"], [64, "  # === Semgrep -> SARIF -> Code scanning ===\n"], [65, "  semgrep:\n"], [66, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [54, 66], "resource": "jobs(pyright)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pyright"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"runs-on": "ubuntu-latest", "steps": [{"uses": "actions/checkout@v4", "__startline__": 68, "__endline__": 69}, {"name": "Run Semgrep (generate SARIF, keep going)", "id": "semgrep", "continue-on-error": true, "uses": "returntocorp/semgrep-action@v1", "with": {"config": "p/python\np/security-audit\n", "generateSarif": "1", "__startline__": 74, "__endline__": 79}, "__startline__": 69, "__endline__": 79}, {"name": "Upload Semgrep SARIF to Code Scanning", "uses": "github/codeql-action/upload-sarif@v3", "with": {"sarif_file": "semgrep.sarif", "__startline__": 82, "__endline__": 87}, "__startline__": 79, "__endline__": 87}], "__startline__": 66, "__endline__": 87}}, "code_block": [[66, "    runs-on: ubuntu-latest\n"], [67, "    steps:\n"], [68, "      - uses: actions/checkout@v4\n"], [69, "      - name: Run Semgrep (generate SARIF, keep going)\n"], [70, "        id: semgrep\n"], [71, "        continue-on-error: true  # ensure upload happens even with findings\n"], [72, "        uses: returntocorp/semgrep-action@v1\n"], [73, "        with:\n"], [74, "          config: |\n"], [75, "            p/python\n"], [76, "            p/security-audit\n"], [77, "          generateSarif: \"1\"     # writes semgrep.sarif in repo root\n"], [78, "\n"], [79, "      - name: Upload Semgrep SARIF to Code Scanning\n"], [80, "        uses: github/codeql-action/upload-sarif@v3\n"], [81, "        with:\n"], [82, "          sarif_file: semgrep.sarif\n"], [83, "      # Optionally fail the job if Semgrep found results (kept soft by default)\n"], [84, "      # - run: exit ${{ steps.semgrep.outputs.exit_code || 0 }}\n"], [85, "\n"], [86, "  # === pip-audit -> SARIF -> Code scanning ===\n"], [87, "  pip-audit:\n"], [88, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [66, 88], "resource": "jobs(semgrep)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["semgrep"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"runs-on": "ubuntu-latest", "steps": [{"uses": "actions/checkout@v4", "__startline__": 90, "__endline__": 91}, {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 93, "__endline__": 95}, "__startline__": 91, "__endline__": 95}, {"name": "Install Poetry", "run": "curl -sSL https://install.python-poetry.org | python3 -", "__startline__": 95, "__endline__": 98}, {"name": "Ensure Poetry on PATH", "run": "echo \"$HOME/.local/bin\" >> $GITHUB_PATH", "__startline__": 98, "__endline__": 101}, {"name": "Export deps from Poetry", "run": "poetry export -f requirements.txt --without-hashes -o requirements.txt", "__startline__": 101, "__endline__": 104}, {"name": "Install pip-audit", "run": "python -m pip install --upgrade pip pip-audit", "__startline__": 104, "__endline__": 107}, {"name": "Run pip-audit (produce SARIF, capture exit code)", "id": "pipaudit", "run": "set +e\npip-audit -r requirements.txt --format sarif --output pip-audit.sarif --progress-spinner off\necho \"exit_code=$?\" >> $GITHUB_OUTPUT\n# Always succeed so we can upload SARIF\nexit 0\n", "__startline__": 107, "__endline__": 116}, {"name": "Upload pip-audit SARIF to Code Scanning", "uses": "github/codeql-action/upload-sarif@v3", "with": {"sarif_file": "pip-audit.sarif", "__startline__": 119, "__endline__": 122}, "__startline__": 116, "__endline__": 122}, {"name": "Fail if pip-audit had findings", "if": "${{ steps.pipaudit.outputs.exit_code != '0' }}", "run": "echo \"pip-audit found vulnerabilities.\"\nexit 1\n", "__startline__": 122, "__endline__": 129}], "__startline__": 88, "__endline__": 129}}, "code_block": [[88, "    runs-on: ubuntu-latest\n"], [89, "    steps:\n"], [90, "      - uses: actions/checkout@v4\n"], [91, "      - uses: actions/setup-python@v5\n"], [92, "        with:\n"], [93, "          python-version: '3.12'\n"], [94, "\n"], [95, "      - name: Install Poetry\n"], [96, "        run: curl -sSL https://install.python-poetry.org | python3 -\n"], [97, "\n"], [98, "      - name: Ensure Poetry on PATH\n"], [99, "        run: echo \"$HOME/.local/bin\" >> $GITHUB_PATH\n"], [100, "\n"], [101, "      - name: Export deps from Poetry\n"], [102, "        run: poetry export -f requirements.txt --without-hashes -o requirements.txt\n"], [103, "\n"], [104, "      - name: Install pip-audit\n"], [105, "        run: python -m pip install --upgrade pip pip-audit\n"], [106, "\n"], [107, "      - name: Run pip-audit (produce SARIF, capture exit code)\n"], [108, "        id: pipaudit\n"], [109, "        run: |\n"], [110, "          set +e\n"], [111, "          pip-audit -r requirements.txt --format sarif --output pip-audit.sarif --progress-spinner off\n"], [112, "          echo \"exit_code=$?\" >> $GITHUB_OUTPUT\n"], [113, "          # Always succeed so we can upload SARIF\n"], [114, "          exit 0\n"], [115, "\n"], [116, "      - name: Upload pip-audit SARIF to Code Scanning\n"], [117, "        uses: github/codeql-action/upload-sarif@v3\n"], [118, "        with:\n"], [119, "          sarif_file: pip-audit.sarif\n"], [120, "\n"], [121, "      # Re-fail the job if vulnerabilities were found\n"], [122, "      - name: Fail if pip-audit had findings\n"], [123, "        if: ${{ steps.pipaudit.outputs.exit_code != '0' }}\n"], [124, "        run: |\n"], [125, "          echo \"pip-audit found vulnerabilities.\"\n"], [126, "          exit 1\n"], [127, "\n"], [128, "  # === Bandit (security lint) ===\n"], [129, "  bandit:\n"], [130, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [88, 130], "resource": "jobs(pip-audit)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"runs-on": "ubuntu-latest", "steps": [{"uses": "actions/checkout@v4", "__startline__": 132, "__endline__": 133}, {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 135, "__endline__": 136}, "__startline__": 133, "__endline__": 136}, {"name": "Install Bandit", "run": "python -m pip install --upgrade pip bandit", "__startline__": 136, "__endline__": 138}, {"name": "Run Bandit (JSON report)", "run": "bandit -r ./apps -x ./apps/chatbot/tests,./apps/cwe_ingestion/tests,./apps/pdf_worker/tests,./apps/tests,./apps/cwe_ingestion/build/lib/tests,./apps/cwe_ingestion/scripts -f json -o bandit_report_no_tests.json -iii -l\n", "__startline__": 138, "__endline__": 143}, {"name": "Upload Bandit report", "uses": "actions/upload-artifact@v4", "with": {"name": "bandit_report_no_tests.json", "path": "bandit_report_no_tests.json", "__startline__": 146, "__endline__": 149}, "__startline__": 143, "__endline__": 149}, {"name": "Fail if Bandit found issues", "run": "python - <<'PY'\nimport json, sys\nwith open(\"bandit_report_no_tests.json\") as f:\n    data = json.load(f)\nissues = data.get(\"results\", [])\nif issues:\n    print(f\"Bandit found {len(issues)} issue(s).\")\n    sys.exit(1)\nprint(\"Bandit found no issues.\")\nPY\n", "__startline__": 149, "__endline__": 163}], "__startline__": 130, "__endline__": 163}}, "code_block": [[130, "    runs-on: ubuntu-latest\n"], [131, "    steps:\n"], [132, "      - uses: actions/checkout@v4\n"], [133, "      - uses: actions/setup-python@v5\n"], [134, "        with:\n"], [135, "          python-version: '3.12'\n"], [136, "      - name: Install Bandit\n"], [137, "        run: python -m pip install --upgrade pip bandit\n"], [138, "      - name: Run Bandit (JSON report)\n"], [139, "        run: >\n"], [140, "          bandit -r ./apps\n"], [141, "          -x ./apps/chatbot/tests,./apps/cwe_ingestion/tests,./apps/pdf_worker/tests,./apps/tests,./apps/cwe_ingestion/build/lib/tests,./apps/cwe_ingestion/scripts\n"], [142, "          -f json -o bandit_report_no_tests.json -iii -l\n"], [143, "      - name: Upload Bandit report\n"], [144, "        uses: actions/upload-artifact@v4\n"], [145, "        with:\n"], [146, "          name: bandit_report_no_tests.json\n"], [147, "          path: bandit_report_no_tests.json\n"], [148, "      # Optional: fail the job if Bandit found issues (parses JSON count>0)\n"], [149, "      - name: Fail if Bandit found issues\n"], [150, "        run: |\n"], [151, "          python - <<'PY'\n"], [152, "          import json, sys\n"], [153, "          with open(\"bandit_report_no_tests.json\") as f:\n"], [154, "              data = json.load(f)\n"], [155, "          issues = data.get(\"results\", [])\n"], [156, "          if issues:\n"], [157, "              print(f\"Bandit found {len(issues)} issue(s).\")\n"], [158, "              sys.exit(1)\n"], [159, "          print(\"Bandit found no issues.\")\n"], [160, "          PY\n"], [161, "\n"], [162, "  # === Vulture (dead code finder) ===\n"], [163, "  vulture:\n"], [164, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [130, 164], "resource": "jobs(bandit)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["bandit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"runs-on": "ubuntu-latest", "steps": [{"uses": "actions/checkout@v4", "__startline__": 166, "__endline__": 167}, {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 169, "__endline__": 170}, "__startline__": 167, "__endline__": 170}, {"name": "Install Vulture", "run": "python -m pip install --upgrade pip vulture", "__startline__": 170, "__endline__": 172}, {"name": "Run Vulture", "run": "set +e\nvulture --sort-by-size --min-confidence 70 ./ > vulture.txt\nexit 0\n", "__startline__": 172, "__endline__": 177}, {"name": "Upload Vulture output", "uses": "actions/upload-artifact@v4", "with": {"name": "vulture.txt", "path": "vulture.txt", "__startline__": 180, "__endline__": 183}, "__startline__": 177, "__endline__": 183}, {"name": "Fail if Vulture found dead code", "run": "if grep -E \":[0-9]+:\" -q vulture.txt; then\n  echo \"::error::Vulture found potential dead code. See vulture.txt artifact.\"\n  exit 1\nelse\n  echo \"Vulture found no reportable dead code.\"\nfi\n", "__startline__": 183, "__endline__": 193}], "__startline__": 164, "__endline__": 193}}, "code_block": [[164, "    runs-on: ubuntu-latest\n"], [165, "    steps:\n"], [166, "      - uses: actions/checkout@v4\n"], [167, "      - uses: actions/setup-python@v5\n"], [168, "        with:\n"], [169, "          python-version: '3.12'\n"], [170, "      - name: Install Vulture\n"], [171, "        run: python -m pip install --upgrade pip vulture\n"], [172, "      - name: Run Vulture\n"], [173, "        run: |\n"], [174, "          set +e\n"], [175, "          vulture --sort-by-size --min-confidence 70 ./ > vulture.txt\n"], [176, "          exit 0\n"], [177, "      - name: Upload Vulture output\n"], [178, "        uses: actions/upload-artifact@v4\n"], [179, "        with:\n"], [180, "          name: vulture.txt\n"], [181, "          path: vulture.txt\n"], [182, "      # Optional: fail if Vulture reported potential dead code\n"], [183, "      - name: Fail if Vulture found dead code\n"], [184, "        run: |\n"], [185, "          if grep -E \":[0-9]+:\" -q vulture.txt; then\n"], [186, "            echo \"::error::Vulture found potential dead code. See vulture.txt artifact.\"\n"], [187, "            exit 1\n"], [188, "          else\n"], [189, "            echo \"Vulture found no reportable dead code.\"\n"], [190, "          fi\n"], [191, "\n"], [192, "  # === Checkov (Dockerfiles, GitHub Actions YAML, K8s/Helm) -> SARIF ===\n"], [193, "  checkov:\n"], [194, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [164, 194], "resource": "jobs(vulture)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["vulture"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"runs-on": "ubuntu-latest", "steps": [{"uses": "actions/checkout@v4", "__startline__": 196, "__endline__": 199}, {"name": "Run Checkov", "id": "checkov", "uses": "bridgecrewio/checkov-action@v12", "with": {"directory": ".", "framework": "dockerfile,github_actions,kubernetes,helm", "skip_path": ".git\n.venv\nvenv\nnode_modules\n**/tests/**\n", "output_format": "sarif,json", "output_file_path": "checkov.sarif::checkov.json", "soft_fail": true, "quiet": true, "__startline__": 204, "__endline__": 221}, "__startline__": 199, "__endline__": 221}, {"name": "Upload Checkov SARIF to Code Scanning", "uses": "github/codeql-action/upload-sarif@v3", "with": {"sarif_file": "checkov.sarif", "__startline__": 224, "__endline__": 226}, "__startline__": 221, "__endline__": 226}, {"name": "Upload Checkov JSON report", "uses": "actions/upload-artifact@v4", "with": {"name": "checkov.json", "path": "checkov.json", "__startline__": 229, "__endline__": 233}, "__startline__": 226, "__endline__": 233}, {"name": "Fail if Checkov had findings", "run": "python - <<'PY'\nimport json, sys\nwith open(\"checkov.json\") as f:\n    data = json.load(f)\n# Checkov JSON may be a list (multiple reports) or a dict (single)\nreports = data if isinstance(data, list) else [data]\nfailed = 0\nfor r in reports:\n    summ = r.get(\"summary\") or {}\n    failed += int(summ.get(\"failed\", 0))\nif failed > 0:\n    print(f\"Checkov found {failed} failed check(s). See SARIF or checkov.json.\")\n    sys.exit(1)\nprint(\"Checkov found no failed checks.\")\nPY", "__startline__": 233, "__endline__": 249}], "__startline__": 194, "__endline__": 249}}, "code_block": [[194, "    runs-on: ubuntu-latest\n"], [195, "    steps:\n"], [196, "      - uses: actions/checkout@v4\n"], [197, "\n"], [198, "      # Use the official Checkov action\n"], [199, "      - name: Run Checkov\n"], [200, "        id: checkov\n"], [201, "        uses: bridgecrewio/checkov-action@v12\n"], [202, "        with:\n"], [203, "          # Scan the whole repo\n"], [204, "          directory: .\n"], [205, "          # Focus on Dockerfiles and YAML-based configs\n"], [206, "          framework: dockerfile,github_actions,kubernetes,helm\n"], [207, "          # Exclude common noise; tweak as you like\n"], [208, "          skip_path: |\n"], [209, "            .git\n"], [210, "            .venv\n"], [211, "            venv\n"], [212, "            node_modules\n"], [213, "            **/tests/**\n"], [214, "          # Produce both SARIF (for Code Scanning) and JSON (for artifacts & gating)\n"], [215, "          output_format: sarif,json\n"], [216, "          output_file_path: checkov.sarif::checkov.json\n"], [217, "          # Always succeed so SARIF uploads even if findings exist\n"], [218, "          soft_fail: true\n"], [219, "          quiet: true\n"], [220, "\n"], [221, "      - name: Upload Checkov SARIF to Code Scanning\n"], [222, "        uses: github/codeql-action/upload-sarif@v3\n"], [223, "        with:\n"], [224, "          sarif_file: checkov.sarif\n"], [225, "\n"], [226, "      - name: Upload Checkov JSON report\n"], [227, "        uses: actions/upload-artifact@v4\n"], [228, "        with:\n"], [229, "          name: checkov.json\n"], [230, "          path: checkov.json\n"], [231, "\n"], [232, "      # Optional: fail CI if Checkov found failed checks\n"], [233, "      - name: Fail if Checkov had findings\n"], [234, "        run: |\n"], [235, "          python - <<'PY'\n"], [236, "          import json, sys\n"], [237, "          with open(\"checkov.json\") as f:\n"], [238, "              data = json.load(f)\n"], [239, "          # Checkov JSON may be a list (multiple reports) or a dict (single)\n"], [240, "          reports = data if isinstance(data, list) else [data]\n"], [241, "          failed = 0\n"], [242, "          for r in reports:\n"], [243, "              summ = r.get(\"summary\") or {}\n"], [244, "              failed += int(summ.get(\"failed\", 0))\n"], [245, "          if failed > 0:\n"], [246, "              print(f\"Checkov found {failed} failed check(s). See SARIF or checkov.json.\")\n"], [247, "              sys.exit(1)\n"], [248, "          print(\"Checkov found no failed checks.\")\n"], [249, "          PY"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [194, 250], "resource": "jobs(checkov)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["checkov"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"runs-on": "ubuntu-latest", "strategy": {"matrix": {"python": ["3.12"], "__startline__": 15, "__endline__": 16}, "__startline__": 14, "__endline__": 16}, "steps": [{"uses": "actions/checkout@v4", "__startline__": 17, "__endline__": 18}, {"uses": "actions/setup-python@v5", "with": {"python-version": "${{ matrix.python }}", "__startline__": 20, "__endline__": 22}, "__startline__": 18, "__endline__": 22}, {"name": "Install Poetry", "run": "curl -sSL https://install.python-poetry.org | python3 -", "__startline__": 22, "__endline__": 25}, {"name": "Ensure Poetry on PATH", "run": "echo \"$HOME/.local/bin\" >> $GITHUB_PATH", "__startline__": 25, "__endline__": 28}, {"name": "Cache Poetry", "uses": "actions/cache@v4", "with": {"path": "~/.cache/pypoetry", "key": "poetry-${{ hashFiles('**/poetry.lock') }}", "__startline__": 31, "__endline__": 34}, "__startline__": 28, "__endline__": 34}, {"name": "Install deps", "run": "poetry install --no-interaction --no-root", "__startline__": 34, "__endline__": 37}, {"name": "Pre-commit (format, lint, mypy)", "run": "python -m pip install --upgrade pip pipx\npipx install pre-commit\npre-commit run --all-files\n", "__startline__": 37, "__endline__": 43}, {"name": "Tests + coverage", "run": "poetry run pytest --cov --cov-report=xml", "__startline__": 43, "__endline__": 46}, {"name": "Coverage gate", "uses": "orgoro/coverage@v3", "with": {"coverageFile": "./coverage.xml", "failCiIfError": true, "minCoverage": 85, "__startline__": 49, "__endline__": 53}, "__startline__": 46, "__endline__": 53}], "__startline__": 12, "__endline__": 53}}, "code_block": [[12, "    runs-on: ubuntu-latest\n"], [13, "    strategy:\n"], [14, "      matrix:\n"], [15, "        python: ['3.12']\n"], [16, "    steps:\n"], [17, "      - uses: actions/checkout@v4\n"], [18, "      - uses: actions/setup-python@v5\n"], [19, "        with:\n"], [20, "          python-version: ${{ matrix.python }}\n"], [21, "\n"], [22, "      - name: Install Poetry\n"], [23, "        run: curl -sSL https://install.python-poetry.org | python3 -\n"], [24, "\n"], [25, "      - name: Ensure Poetry on PATH\n"], [26, "        run: echo \"$HOME/.local/bin\" >> $GITHUB_PATH\n"], [27, "\n"], [28, "      - name: Cache Poetry\n"], [29, "        uses: actions/cache@v4\n"], [30, "        with:\n"], [31, "          path: ~/.cache/pypoetry\n"], [32, "          key: poetry-${{ hashFiles('**/poetry.lock') }}\n"], [33, "\n"], [34, "      - name: Install deps\n"], [35, "        run: poetry install --no-interaction --no-root\n"], [36, "\n"], [37, "      - name: Pre-commit (format, lint, mypy)\n"], [38, "        run: |\n"], [39, "          python -m pip install --upgrade pip pipx\n"], [40, "          pipx install pre-commit\n"], [41, "          pre-commit run --all-files\n"], [42, "\n"], [43, "      - name: Tests + coverage\n"], [44, "        run: poetry run pytest --cov --cov-report=xml\n"], [45, "\n"], [46, "      - name: Coverage gate\n"], [47, "        uses: orgoro/coverage@v3\n"], [48, "        with:\n"], [49, "          coverageFile: ./coverage.xml\n"], [50, "          failCiIfError: true\n"], [51, "          minCoverage: 85\n"], [52, "\n"], [53, "  pyright:\n"], [54, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [12, 54], "resource": "jobs(lint-type-test)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"runs-on": "ubuntu-latest", "steps": [{"uses": "actions/checkout@v4", "__startline__": 56, "__endline__": 57}, {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 59, "__endline__": 60}, "__startline__": 57, "__endline__": 60}, {"run": "python -m pip install --upgrade pip pipx", "__startline__": 60, "__endline__": 61}, {"run": "pipx install pyright", "__startline__": 61, "__endline__": 62}, {"run": "pyright", "__startline__": 62, "__endline__": 65}], "__startline__": 54, "__endline__": 65}}, "code_block": [[54, "    runs-on: ubuntu-latest\n"], [55, "    steps:\n"], [56, "      - uses: actions/checkout@v4\n"], [57, "      - uses: actions/setup-python@v5\n"], [58, "        with:\n"], [59, "          python-version: '3.12'\n"], [60, "      - run: python -m pip install --upgrade pip pipx\n"], [61, "      - run: pipx install pyright\n"], [62, "      - run: pyright\n"], [63, "\n"], [64, "  # === Semgrep -> SARIF -> Code scanning ===\n"], [65, "  semgrep:\n"], [66, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [54, 66], "resource": "jobs(pyright)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pyright"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"runs-on": "ubuntu-latest", "steps": [{"uses": "actions/checkout@v4", "__startline__": 68, "__endline__": 69}, {"name": "Run Semgrep (generate SARIF, keep going)", "id": "semgrep", "continue-on-error": true, "uses": "returntocorp/semgrep-action@v1", "with": {"config": "p/python\np/security-audit\n", "generateSarif": "1", "__startline__": 74, "__endline__": 79}, "__startline__": 69, "__endline__": 79}, {"name": "Upload Semgrep SARIF to Code Scanning", "uses": "github/codeql-action/upload-sarif@v3", "with": {"sarif_file": "semgrep.sarif", "__startline__": 82, "__endline__": 87}, "__startline__": 79, "__endline__": 87}], "__startline__": 66, "__endline__": 87}}, "code_block": [[66, "    runs-on: ubuntu-latest\n"], [67, "    steps:\n"], [68, "      - uses: actions/checkout@v4\n"], [69, "      - name: Run Semgrep (generate SARIF, keep going)\n"], [70, "        id: semgrep\n"], [71, "        continue-on-error: true  # ensure upload happens even with findings\n"], [72, "        uses: returntocorp/semgrep-action@v1\n"], [73, "        with:\n"], [74, "          config: |\n"], [75, "            p/python\n"], [76, "            p/security-audit\n"], [77, "          generateSarif: \"1\"     # writes semgrep.sarif in repo root\n"], [78, "\n"], [79, "      - name: Upload Semgrep SARIF to Code Scanning\n"], [80, "        uses: github/codeql-action/upload-sarif@v3\n"], [81, "        with:\n"], [82, "          sarif_file: semgrep.sarif\n"], [83, "      # Optionally fail the job if Semgrep found results (kept soft by default)\n"], [84, "      # - run: exit ${{ steps.semgrep.outputs.exit_code || 0 }}\n"], [85, "\n"], [86, "  # === pip-audit -> SARIF -> Code scanning ===\n"], [87, "  pip-audit:\n"], [88, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [66, 88], "resource": "jobs(semgrep)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["semgrep"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"runs-on": "ubuntu-latest", "steps": [{"uses": "actions/checkout@v4", "__startline__": 90, "__endline__": 91}, {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 93, "__endline__": 95}, "__startline__": 91, "__endline__": 95}, {"name": "Install Poetry", "run": "curl -sSL https://install.python-poetry.org | python3 -", "__startline__": 95, "__endline__": 98}, {"name": "Ensure Poetry on PATH", "run": "echo \"$HOME/.local/bin\" >> $GITHUB_PATH", "__startline__": 98, "__endline__": 101}, {"name": "Export deps from Poetry", "run": "poetry export -f requirements.txt --without-hashes -o requirements.txt", "__startline__": 101, "__endline__": 104}, {"name": "Install pip-audit", "run": "python -m pip install --upgrade pip pip-audit", "__startline__": 104, "__endline__": 107}, {"name": "Run pip-audit (produce SARIF, capture exit code)", "id": "pipaudit", "run": "set +e\npip-audit -r requirements.txt --format sarif --output pip-audit.sarif --progress-spinner off\necho \"exit_code=$?\" >> $GITHUB_OUTPUT\n# Always succeed so we can upload SARIF\nexit 0\n", "__startline__": 107, "__endline__": 116}, {"name": "Upload pip-audit SARIF to Code Scanning", "uses": "github/codeql-action/upload-sarif@v3", "with": {"sarif_file": "pip-audit.sarif", "__startline__": 119, "__endline__": 122}, "__startline__": 116, "__endline__": 122}, {"name": "Fail if pip-audit had findings", "if": "${{ steps.pipaudit.outputs.exit_code != '0' }}", "run": "echo \"pip-audit found vulnerabilities.\"\nexit 1\n", "__startline__": 122, "__endline__": 129}], "__startline__": 88, "__endline__": 129}}, "code_block": [[88, "    runs-on: ubuntu-latest\n"], [89, "    steps:\n"], [90, "      - uses: actions/checkout@v4\n"], [91, "      - uses: actions/setup-python@v5\n"], [92, "        with:\n"], [93, "          python-version: '3.12'\n"], [94, "\n"], [95, "      - name: Install Poetry\n"], [96, "        run: curl -sSL https://install.python-poetry.org | python3 -\n"], [97, "\n"], [98, "      - name: Ensure Poetry on PATH\n"], [99, "        run: echo \"$HOME/.local/bin\" >> $GITHUB_PATH\n"], [100, "\n"], [101, "      - name: Export deps from Poetry\n"], [102, "        run: poetry export -f requirements.txt --without-hashes -o requirements.txt\n"], [103, "\n"], [104, "      - name: Install pip-audit\n"], [105, "        run: python -m pip install --upgrade pip pip-audit\n"], [106, "\n"], [107, "      - name: Run pip-audit (produce SARIF, capture exit code)\n"], [108, "        id: pipaudit\n"], [109, "        run: |\n"], [110, "          set +e\n"], [111, "          pip-audit -r requirements.txt --format sarif --output pip-audit.sarif --progress-spinner off\n"], [112, "          echo \"exit_code=$?\" >> $GITHUB_OUTPUT\n"], [113, "          # Always succeed so we can upload SARIF\n"], [114, "          exit 0\n"], [115, "\n"], [116, "      - name: Upload pip-audit SARIF to Code Scanning\n"], [117, "        uses: github/codeql-action/upload-sarif@v3\n"], [118, "        with:\n"], [119, "          sarif_file: pip-audit.sarif\n"], [120, "\n"], [121, "      # Re-fail the job if vulnerabilities were found\n"], [122, "      - name: Fail if pip-audit had findings\n"], [123, "        if: ${{ steps.pipaudit.outputs.exit_code != '0' }}\n"], [124, "        run: |\n"], [125, "          echo \"pip-audit found vulnerabilities.\"\n"], [126, "          exit 1\n"], [127, "\n"], [128, "  # === Bandit (security lint) ===\n"], [129, "  bandit:\n"], [130, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [88, 130], "resource": "jobs(pip-audit)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"runs-on": "ubuntu-latest", "steps": [{"uses": "actions/checkout@v4", "__startline__": 132, "__endline__": 133}, {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 135, "__endline__": 136}, "__startline__": 133, "__endline__": 136}, {"name": "Install Bandit", "run": "python -m pip install --upgrade pip bandit", "__startline__": 136, "__endline__": 138}, {"name": "Run Bandit (JSON report)", "run": "bandit -r ./apps -x ./apps/chatbot/tests,./apps/cwe_ingestion/tests,./apps/pdf_worker/tests,./apps/tests,./apps/cwe_ingestion/build/lib/tests,./apps/cwe_ingestion/scripts -f json -o bandit_report_no_tests.json -iii -l\n", "__startline__": 138, "__endline__": 143}, {"name": "Upload Bandit report", "uses": "actions/upload-artifact@v4", "with": {"name": "bandit_report_no_tests.json", "path": "bandit_report_no_tests.json", "__startline__": 146, "__endline__": 149}, "__startline__": 143, "__endline__": 149}, {"name": "Fail if Bandit found issues", "run": "python - <<'PY'\nimport json, sys\nwith open(\"bandit_report_no_tests.json\") as f:\n    data = json.load(f)\nissues = data.get(\"results\", [])\nif issues:\n    print(f\"Bandit found {len(issues)} issue(s).\")\n    sys.exit(1)\nprint(\"Bandit found no issues.\")\nPY\n", "__startline__": 149, "__endline__": 163}], "__startline__": 130, "__endline__": 163}}, "code_block": [[130, "    runs-on: ubuntu-latest\n"], [131, "    steps:\n"], [132, "      - uses: actions/checkout@v4\n"], [133, "      - uses: actions/setup-python@v5\n"], [134, "        with:\n"], [135, "          python-version: '3.12'\n"], [136, "      - name: Install Bandit\n"], [137, "        run: python -m pip install --upgrade pip bandit\n"], [138, "      - name: Run Bandit (JSON report)\n"], [139, "        run: >\n"], [140, "          bandit -r ./apps\n"], [141, "          -x ./apps/chatbot/tests,./apps/cwe_ingestion/tests,./apps/pdf_worker/tests,./apps/tests,./apps/cwe_ingestion/build/lib/tests,./apps/cwe_ingestion/scripts\n"], [142, "          -f json -o bandit_report_no_tests.json -iii -l\n"], [143, "      - name: Upload Bandit report\n"], [144, "        uses: actions/upload-artifact@v4\n"], [145, "        with:\n"], [146, "          name: bandit_report_no_tests.json\n"], [147, "          path: bandit_report_no_tests.json\n"], [148, "      # Optional: fail the job if Bandit found issues (parses JSON count>0)\n"], [149, "      - name: Fail if Bandit found issues\n"], [150, "        run: |\n"], [151, "          python - <<'PY'\n"], [152, "          import json, sys\n"], [153, "          with open(\"bandit_report_no_tests.json\") as f:\n"], [154, "              data = json.load(f)\n"], [155, "          issues = data.get(\"results\", [])\n"], [156, "          if issues:\n"], [157, "              print(f\"Bandit found {len(issues)} issue(s).\")\n"], [158, "              sys.exit(1)\n"], [159, "          print(\"Bandit found no issues.\")\n"], [160, "          PY\n"], [161, "\n"], [162, "  # === Vulture (dead code finder) ===\n"], [163, "  vulture:\n"], [164, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [130, 164], "resource": "jobs(bandit)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["bandit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"runs-on": "ubuntu-latest", "steps": [{"uses": "actions/checkout@v4", "__startline__": 166, "__endline__": 167}, {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 169, "__endline__": 170}, "__startline__": 167, "__endline__": 170}, {"name": "Install Vulture", "run": "python -m pip install --upgrade pip vulture", "__startline__": 170, "__endline__": 172}, {"name": "Run Vulture", "run": "set +e\nvulture --sort-by-size --min-confidence 70 ./ > vulture.txt\nexit 0\n", "__startline__": 172, "__endline__": 177}, {"name": "Upload Vulture output", "uses": "actions/upload-artifact@v4", "with": {"name": "vulture.txt", "path": "vulture.txt", "__startline__": 180, "__endline__": 183}, "__startline__": 177, "__endline__": 183}, {"name": "Fail if Vulture found dead code", "run": "if grep -E \":[0-9]+:\" -q vulture.txt; then\n  echo \"::error::Vulture found potential dead code. See vulture.txt artifact.\"\n  exit 1\nelse\n  echo \"Vulture found no reportable dead code.\"\nfi\n", "__startline__": 183, "__endline__": 193}], "__startline__": 164, "__endline__": 193}}, "code_block": [[164, "    runs-on: ubuntu-latest\n"], [165, "    steps:\n"], [166, "      - uses: actions/checkout@v4\n"], [167, "      - uses: actions/setup-python@v5\n"], [168, "        with:\n"], [169, "          python-version: '3.12'\n"], [170, "      - name: Install Vulture\n"], [171, "        run: python -m pip install --upgrade pip vulture\n"], [172, "      - name: Run Vulture\n"], [173, "        run: |\n"], [174, "          set +e\n"], [175, "          vulture --sort-by-size --min-confidence 70 ./ > vulture.txt\n"], [176, "          exit 0\n"], [177, "      - name: Upload Vulture output\n"], [178, "        uses: actions/upload-artifact@v4\n"], [179, "        with:\n"], [180, "          name: vulture.txt\n"], [181, "          path: vulture.txt\n"], [182, "      # Optional: fail if Vulture reported potential dead code\n"], [183, "      - name: Fail if Vulture found dead code\n"], [184, "        run: |\n"], [185, "          if grep -E \":[0-9]+:\" -q vulture.txt; then\n"], [186, "            echo \"::error::Vulture found potential dead code. See vulture.txt artifact.\"\n"], [187, "            exit 1\n"], [188, "          else\n"], [189, "            echo \"Vulture found no reportable dead code.\"\n"], [190, "          fi\n"], [191, "\n"], [192, "  # === Checkov (Dockerfiles, GitHub Actions YAML, K8s/Helm) -> SARIF ===\n"], [193, "  checkov:\n"], [194, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [164, 194], "resource": "jobs(vulture)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["vulture"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"runs-on": "ubuntu-latest", "steps": [{"uses": "actions/checkout@v4", "__startline__": 196, "__endline__": 199}, {"name": "Run Checkov", "id": "checkov", "uses": "bridgecrewio/checkov-action@v12", "with": {"directory": ".", "framework": "dockerfile,github_actions,kubernetes,helm", "skip_path": ".git\n.venv\nvenv\nnode_modules\n**/tests/**\n", "output_format": "sarif,json", "output_file_path": "checkov.sarif::checkov.json", "soft_fail": true, "quiet": true, "__startline__": 204, "__endline__": 221}, "__startline__": 199, "__endline__": 221}, {"name": "Upload Checkov SARIF to Code Scanning", "uses": "github/codeql-action/upload-sarif@v3", "with": {"sarif_file": "checkov.sarif", "__startline__": 224, "__endline__": 226}, "__startline__": 221, "__endline__": 226}, {"name": "Upload Checkov JSON report", "uses": "actions/upload-artifact@v4", "with": {"name": "checkov.json", "path": "checkov.json", "__startline__": 229, "__endline__": 233}, "__startline__": 226, "__endline__": 233}, {"name": "Fail if Checkov had findings", "run": "python - <<'PY'\nimport json, sys\nwith open(\"checkov.json\") as f:\n    data = json.load(f)\n# Checkov JSON may be a list (multiple reports) or a dict (single)\nreports = data if isinstance(data, list) else [data]\nfailed = 0\nfor r in reports:\n    summ = r.get(\"summary\") or {}\n    failed += int(summ.get(\"failed\", 0))\nif failed > 0:\n    print(f\"Checkov found {failed} failed check(s). See SARIF or checkov.json.\")\n    sys.exit(1)\nprint(\"Checkov found no failed checks.\")\nPY", "__startline__": 233, "__endline__": 249}], "__startline__": 194, "__endline__": 249}}, "code_block": [[194, "    runs-on: ubuntu-latest\n"], [195, "    steps:\n"], [196, "      - uses: actions/checkout@v4\n"], [197, "\n"], [198, "      # Use the official Checkov action\n"], [199, "      - name: Run Checkov\n"], [200, "        id: checkov\n"], [201, "        uses: bridgecrewio/checkov-action@v12\n"], [202, "        with:\n"], [203, "          # Scan the whole repo\n"], [204, "          directory: .\n"], [205, "          # Focus on Dockerfiles and YAML-based configs\n"], [206, "          framework: dockerfile,github_actions,kubernetes,helm\n"], [207, "          # Exclude common noise; tweak as you like\n"], [208, "          skip_path: |\n"], [209, "            .git\n"], [210, "            .venv\n"], [211, "            venv\n"], [212, "            node_modules\n"], [213, "            **/tests/**\n"], [214, "          # Produce both SARIF (for Code Scanning) and JSON (for artifacts & gating)\n"], [215, "          output_format: sarif,json\n"], [216, "          output_file_path: checkov.sarif::checkov.json\n"], [217, "          # Always succeed so SARIF uploads even if findings exist\n"], [218, "          soft_fail: true\n"], [219, "          quiet: true\n"], [220, "\n"], [221, "      - name: Upload Checkov SARIF to Code Scanning\n"], [222, "        uses: github/codeql-action/upload-sarif@v3\n"], [223, "        with:\n"], [224, "          sarif_file: checkov.sarif\n"], [225, "\n"], [226, "      - name: Upload Checkov JSON report\n"], [227, "        uses: actions/upload-artifact@v4\n"], [228, "        with:\n"], [229, "          name: checkov.json\n"], [230, "          path: checkov.json\n"], [231, "\n"], [232, "      # Optional: fail CI if Checkov found failed checks\n"], [233, "      - name: Fail if Checkov had findings\n"], [234, "        run: |\n"], [235, "          python - <<'PY'\n"], [236, "          import json, sys\n"], [237, "          with open(\"checkov.json\") as f:\n"], [238, "              data = json.load(f)\n"], [239, "          # Checkov JSON may be a list (multiple reports) or a dict (single)\n"], [240, "          reports = data if isinstance(data, list) else [data]\n"], [241, "          failed = 0\n"], [242, "          for r in reports:\n"], [243, "              summ = r.get(\"summary\") or {}\n"], [244, "              failed += int(summ.get(\"failed\", 0))\n"], [245, "          if failed > 0:\n"], [246, "              print(f\"Checkov found {failed} failed check(s). See SARIF or checkov.json.\")\n"], [247, "              sys.exit(1)\n"], [248, "          print(\"Checkov found no failed checks.\")\n"], [249, "          PY"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [194, 250], "resource": "jobs(checkov)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["checkov"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_5", "bc_check_id": null, "check_name": "Found artifact build without evidence of cosign sign execution in pipeline", "check_result": {"result": "PASSED", "results_configuration": {"lint-type-test": {"runs-on": "ubuntu-latest", "strategy": {"matrix": {"python": ["3.12"], "__startline__": 15, "__endline__": 16}, "__startline__": 14, "__endline__": 16}, "steps": [{"uses": "actions/checkout@v4", "__startline__": 17, "__endline__": 18}, {"uses": "actions/setup-python@v5", "with": {"python-version": "${{ matrix.python }}", "__startline__": 20, "__endline__": 22}, "__startline__": 18, "__endline__": 22}, {"name": "Install Poetry", "run": "curl -sSL https://install.python-poetry.org | python3 -", "__startline__": 22, "__endline__": 25}, {"name": "Ensure Poetry on PATH", "run": "echo \"$HOME/.local/bin\" >> $GITHUB_PATH", "__startline__": 25, "__endline__": 28}, {"name": "Cache Poetry", "uses": "actions/cache@v4", "with": {"path": "~/.cache/pypoetry", "key": "poetry-${{ hashFiles('**/poetry.lock') }}", "__startline__": 31, "__endline__": 34}, "__startline__": 28, "__endline__": 34}, {"name": "Install deps", "run": "poetry install --no-interaction --no-root", "__startline__": 34, "__endline__": 37}, {"name": "Pre-commit (format, lint, mypy)", "run": "python -m pip install --upgrade pip pipx\npipx install pre-commit\npre-commit run --all-files\n", "__startline__": 37, "__endline__": 43}, {"name": "Tests + coverage", "run": "poetry run pytest --cov --cov-report=xml", "__startline__": 43, "__endline__": 46}, {"name": "Coverage gate", "uses": "orgoro/coverage@v3", "with": {"coverageFile": "./coverage.xml", "failCiIfError": true, "minCoverage": 85, "__startline__": 49, "__endline__": 53}, "__startline__": 46, "__endline__": 53}], "__startline__": 12, "__endline__": 53}, "pyright": {"runs-on": "ubuntu-latest", "steps": [{"uses": "actions/checkout@v4", "__startline__": 56, "__endline__": 57}, {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 59, "__endline__": 60}, "__startline__": 57, "__endline__": 60}, {"run": "python -m pip install --upgrade pip pipx", "__startline__": 60, "__endline__": 61}, {"run": "pipx install pyright", "__startline__": 61, "__endline__": 62}, {"run": "pyright", "__startline__": 62, "__endline__": 65}], "__startline__": 54, "__endline__": 65}, "semgrep": {"runs-on": "ubuntu-latest", "steps": [{"uses": "actions/checkout@v4", "__startline__": 68, "__endline__": 69}, {"name": "Run Semgrep (generate SARIF, keep going)", "id": "semgrep", "continue-on-error": true, "uses": "returntocorp/semgrep-action@v1", "with": {"config": "p/python\np/security-audit\n", "generateSarif": "1", "__startline__": 74, "__endline__": 79}, "__startline__": 69, "__endline__": 79}, {"name": "Upload Semgrep SARIF to Code Scanning", "uses": "github/codeql-action/upload-sarif@v3", "with": {"sarif_file": "semgrep.sarif", "__startline__": 82, "__endline__": 87}, "__startline__": 79, "__endline__": 87}], "__startline__": 66, "__endline__": 87}, "pip-audit": {"runs-on": "ubuntu-latest", "steps": [{"uses": "actions/checkout@v4", "__startline__": 90, "__endline__": 91}, {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 93, "__endline__": 95}, "__startline__": 91, "__endline__": 95}, {"name": "Install Poetry", "run": "curl -sSL https://install.python-poetry.org | python3 -", "__startline__": 95, "__endline__": 98}, {"name": "Ensure Poetry on PATH", "run": "echo \"$HOME/.local/bin\" >> $GITHUB_PATH", "__startline__": 98, "__endline__": 101}, {"name": "Export deps from Poetry", "run": "poetry export -f requirements.txt --without-hashes -o requirements.txt", "__startline__": 101, "__endline__": 104}, {"name": "Install pip-audit", "run": "python -m pip install --upgrade pip pip-audit", "__startline__": 104, "__endline__": 107}, {"name": "Run pip-audit (produce SARIF, capture exit code)", "id": "pipaudit", "run": "set +e\npip-audit -r requirements.txt --format sarif --output pip-audit.sarif --progress-spinner off\necho \"exit_code=$?\" >> $GITHUB_OUTPUT\n# Always succeed so we can upload SARIF\nexit 0\n", "__startline__": 107, "__endline__": 116}, {"name": "Upload pip-audit SARIF to Code Scanning", "uses": "github/codeql-action/upload-sarif@v3", "with": {"sarif_file": "pip-audit.sarif", "__startline__": 119, "__endline__": 122}, "__startline__": 116, "__endline__": 122}, {"name": "Fail if pip-audit had findings", "if": "${{ steps.pipaudit.outputs.exit_code != '0' }}", "run": "echo \"pip-audit found vulnerabilities.\"\nexit 1\n", "__startline__": 122, "__endline__": 129}], "__startline__": 88, "__endline__": 129}, "bandit": {"runs-on": "ubuntu-latest", "steps": [{"uses": "actions/checkout@v4", "__startline__": 132, "__endline__": 133}, {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 135, "__endline__": 136}, "__startline__": 133, "__endline__": 136}, {"name": "Install Bandit", "run": "python -m pip install --upgrade pip bandit", "__startline__": 136, "__endline__": 138}, {"name": "Run Bandit (JSON report)", "run": "bandit -r ./apps -x ./apps/chatbot/tests,./apps/cwe_ingestion/tests,./apps/pdf_worker/tests,./apps/tests,./apps/cwe_ingestion/build/lib/tests,./apps/cwe_ingestion/scripts -f json -o bandit_report_no_tests.json -iii -l\n", "__startline__": 138, "__endline__": 143}, {"name": "Upload Bandit report", "uses": "actions/upload-artifact@v4", "with": {"name": "bandit_report_no_tests.json", "path": "bandit_report_no_tests.json", "__startline__": 146, "__endline__": 149}, "__startline__": 143, "__endline__": 149}, {"name": "Fail if Bandit found issues", "run": "python - <<'PY'\nimport json, sys\nwith open(\"bandit_report_no_tests.json\") as f:\n    data = json.load(f)\nissues = data.get(\"results\", [])\nif issues:\n    print(f\"Bandit found {len(issues)} issue(s).\")\n    sys.exit(1)\nprint(\"Bandit found no issues.\")\nPY\n", "__startline__": 149, "__endline__": 163}], "__startline__": 130, "__endline__": 163}, "vulture": {"runs-on": "ubuntu-latest", "steps": [{"uses": "actions/checkout@v4", "__startline__": 166, "__endline__": 167}, {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 169, "__endline__": 170}, "__startline__": 167, "__endline__": 170}, {"name": "Install Vulture", "run": "python -m pip install --upgrade pip vulture", "__startline__": 170, "__endline__": 172}, {"name": "Run Vulture", "run": "set +e\nvulture --sort-by-size --min-confidence 70 ./ > vulture.txt\nexit 0\n", "__startline__": 172, "__endline__": 177}, {"name": "Upload Vulture output", "uses": "actions/upload-artifact@v4", "with": {"name": "vulture.txt", "path": "vulture.txt", "__startline__": 180, "__endline__": 183}, "__startline__": 177, "__endline__": 183}, {"name": "Fail if Vulture found dead code", "run": "if grep -E \":[0-9]+:\" -q vulture.txt; then\n  echo \"::error::Vulture found potential dead code. See vulture.txt artifact.\"\n  exit 1\nelse\n  echo \"Vulture found no reportable dead code.\"\nfi\n", "__startline__": 183, "__endline__": 193}], "__startline__": 164, "__endline__": 193}, "checkov": {"runs-on": "ubuntu-latest", "steps": [{"uses": "actions/checkout@v4", "__startline__": 196, "__endline__": 199}, {"name": "Run Checkov", "id": "checkov", "uses": "bridgecrewio/checkov-action@v12", "with": {"directory": ".", "framework": "dockerfile,github_actions,kubernetes,helm", "skip_path": ".git\n.venv\nvenv\nnode_modules\n**/tests/**\n", "output_format": "sarif,json", "output_file_path": "checkov.sarif::checkov.json", "soft_fail": true, "quiet": true, "__startline__": 204, "__endline__": 221}, "__startline__": 199, "__endline__": 221}, {"name": "Upload Checkov SARIF to Code Scanning", "uses": "github/codeql-action/upload-sarif@v3", "with": {"sarif_file": "checkov.sarif", "__startline__": 224, "__endline__": 226}, "__startline__": 221, "__endline__": 226}, {"name": "Upload Checkov JSON report", "uses": "actions/upload-artifact@v4", "with": {"name": "checkov.json", "path": "checkov.json", "__startline__": 229, "__endline__": 233}, "__startline__": 226, "__endline__": 233}, {"name": "Fail if Checkov had findings", "run": "python - <<'PY'\nimport json, sys\nwith open(\"checkov.json\") as f:\n    data = json.load(f)\n# Checkov JSON may be a list (multiple reports) or a dict (single)\nreports = data if isinstance(data, list) else [data]\nfailed = 0\nfor r in reports:\n    summ = r.get(\"summary\") or {}\n    failed += int(summ.get(\"failed\", 0))\nif failed > 0:\n    print(f\"Checkov found {failed} failed check(s). See SARIF or checkov.json.\")\n    sys.exit(1)\nprint(\"Checkov found no failed checks.\")\nPY", "__startline__": 233, "__endline__": 249}], "__startline__": 194, "__endline__": 249}, "__startline__": 11, "__endline__": 249}}, "code_block": [[11, "  lint-type-test:\n"], [12, "    runs-on: ubuntu-latest\n"], [13, "    strategy:\n"], [14, "      matrix:\n"], [15, "        python: ['3.12']\n"], [16, "    steps:\n"], [17, "      - uses: actions/checkout@v4\n"], [18, "      - uses: actions/setup-python@v5\n"], [19, "        with:\n"], [20, "          python-version: ${{ matrix.python }}\n"], [21, "\n"], [22, "      - name: Install Poetry\n"], [23, "        run: curl -sSL https://install.python-poetry.org | python3 -\n"], [24, "\n"], [25, "      - name: Ensure Poetry on PATH\n"], [26, "        run: echo \"$HOME/.local/bin\" >> $GITHUB_PATH\n"], [27, "\n"], [28, "      - name: Cache Poetry\n"], [29, "        uses: actions/cache@v4\n"], [30, "        with:\n"], [31, "          path: ~/.cache/pypoetry\n"], [32, "          key: poetry-${{ hashFiles('**/poetry.lock') }}\n"], [33, "\n"], [34, "      - name: Install deps\n"], [35, "        run: poetry install --no-interaction --no-root\n"], [36, "\n"], [37, "      - name: Pre-commit (format, lint, mypy)\n"], [38, "        run: |\n"], [39, "          python -m pip install --upgrade pip pipx\n"], [40, "          pipx install pre-commit\n"], [41, "          pre-commit run --all-files\n"], [42, "\n"], [43, "      - name: Tests + coverage\n"], [44, "        run: poetry run pytest --cov --cov-report=xml\n"], [45, "\n"], [46, "      - name: Coverage gate\n"], [47, "        uses: orgoro/coverage@v3\n"], [48, "        with:\n"], [49, "          coverageFile: ./coverage.xml\n"], [50, "          failCiIfError: true\n"], [51, "          minCoverage: 85\n"], [52, "\n"], [53, "  pyright:\n"], [54, "    runs-on: ubuntu-latest\n"], [55, "    steps:\n"], [56, "      - uses: actions/checkout@v4\n"], [57, "      - uses: actions/setup-python@v5\n"], [58, "        with:\n"], [59, "          python-version: '3.12'\n"], [60, "      - run: python -m pip install --upgrade pip pipx\n"], [61, "      - run: pipx install pyright\n"], [62, "      - run: pyright\n"], [63, "\n"], [64, "  # === Semgrep -> SARIF -> Code scanning ===\n"], [65, "  semgrep:\n"], [66, "    runs-on: ubuntu-latest\n"], [67, "    steps:\n"], [68, "      - uses: actions/checkout@v4\n"], [69, "      - name: Run Semgrep (generate SARIF, keep going)\n"], [70, "        id: semgrep\n"], [71, "        continue-on-error: true  # ensure upload happens even with findings\n"], [72, "        uses: returntocorp/semgrep-action@v1\n"], [73, "        with:\n"], [74, "          config: |\n"], [75, "            p/python\n"], [76, "            p/security-audit\n"], [77, "          generateSarif: \"1\"     # writes semgrep.sarif in repo root\n"], [78, "\n"], [79, "      - name: Upload Semgrep SARIF to Code Scanning\n"], [80, "        uses: github/codeql-action/upload-sarif@v3\n"], [81, "        with:\n"], [82, "          sarif_file: semgrep.sarif\n"], [83, "      # Optionally fail the job if Semgrep found results (kept soft by default)\n"], [84, "      # - run: exit ${{ steps.semgrep.outputs.exit_code || 0 }}\n"], [85, "\n"], [86, "  # === pip-audit -> SARIF -> Code scanning ===\n"], [87, "  pip-audit:\n"], [88, "    runs-on: ubuntu-latest\n"], [89, "    steps:\n"], [90, "      - uses: actions/checkout@v4\n"], [91, "      - uses: actions/setup-python@v5\n"], [92, "        with:\n"], [93, "          python-version: '3.12'\n"], [94, "\n"], [95, "      - name: Install Poetry\n"], [96, "        run: curl -sSL https://install.python-poetry.org | python3 -\n"], [97, "\n"], [98, "      - name: Ensure Poetry on PATH\n"], [99, "        run: echo \"$HOME/.local/bin\" >> $GITHUB_PATH\n"], [100, "\n"], [101, "      - name: Export deps from Poetry\n"], [102, "        run: poetry export -f requirements.txt --without-hashes -o requirements.txt\n"], [103, "\n"], [104, "      - name: Install pip-audit\n"], [105, "        run: python -m pip install --upgrade pip pip-audit\n"], [106, "\n"], [107, "      - name: Run pip-audit (produce SARIF, capture exit code)\n"], [108, "        id: pipaudit\n"], [109, "        run: |\n"], [110, "          set +e\n"], [111, "          pip-audit -r requirements.txt --format sarif --output pip-audit.sarif --progress-spinner off\n"], [112, "          echo \"exit_code=$?\" >> $GITHUB_OUTPUT\n"], [113, "          # Always succeed so we can upload SARIF\n"], [114, "          exit 0\n"], [115, "\n"], [116, "      - name: Upload pip-audit SARIF to Code Scanning\n"], [117, "        uses: github/codeql-action/upload-sarif@v3\n"], [118, "        with:\n"], [119, "          sarif_file: pip-audit.sarif\n"], [120, "\n"], [121, "      # Re-fail the job if vulnerabilities were found\n"], [122, "      - name: Fail if pip-audit had findings\n"], [123, "        if: ${{ steps.pipaudit.outputs.exit_code != '0' }}\n"], [124, "        run: |\n"], [125, "          echo \"pip-audit found vulnerabilities.\"\n"], [126, "          exit 1\n"], [127, "\n"], [128, "  # === Bandit (security lint) ===\n"], [129, "  bandit:\n"], [130, "    runs-on: ubuntu-latest\n"], [131, "    steps:\n"], [132, "      - uses: actions/checkout@v4\n"], [133, "      - uses: actions/setup-python@v5\n"], [134, "        with:\n"], [135, "          python-version: '3.12'\n"], [136, "      - name: Install Bandit\n"], [137, "        run: python -m pip install --upgrade pip bandit\n"], [138, "      - name: Run Bandit (JSON report)\n"], [139, "        run: >\n"], [140, "          bandit -r ./apps\n"], [141, "          -x ./apps/chatbot/tests,./apps/cwe_ingestion/tests,./apps/pdf_worker/tests,./apps/tests,./apps/cwe_ingestion/build/lib/tests,./apps/cwe_ingestion/scripts\n"], [142, "          -f json -o bandit_report_no_tests.json -iii -l\n"], [143, "      - name: Upload Bandit report\n"], [144, "        uses: actions/upload-artifact@v4\n"], [145, "        with:\n"], [146, "          name: bandit_report_no_tests.json\n"], [147, "          path: bandit_report_no_tests.json\n"], [148, "      # Optional: fail the job if Bandit found issues (parses JSON count>0)\n"], [149, "      - name: Fail if Bandit found issues\n"], [150, "        run: |\n"], [151, "          python - <<'PY'\n"], [152, "          import json, sys\n"], [153, "          with open(\"bandit_report_no_tests.json\") as f:\n"], [154, "              data = json.load(f)\n"], [155, "          issues = data.get(\"results\", [])\n"], [156, "          if issues:\n"], [157, "              print(f\"Bandit found {len(issues)} issue(s).\")\n"], [158, "              sys.exit(1)\n"], [159, "          print(\"Bandit found no issues.\")\n"], [160, "          PY\n"], [161, "\n"], [162, "  # === Vulture (dead code finder) ===\n"], [163, "  vulture:\n"], [164, "    runs-on: ubuntu-latest\n"], [165, "    steps:\n"], [166, "      - uses: actions/checkout@v4\n"], [167, "      - uses: actions/setup-python@v5\n"], [168, "        with:\n"], [169, "          python-version: '3.12'\n"], [170, "      - name: Install Vulture\n"], [171, "        run: python -m pip install --upgrade pip vulture\n"], [172, "      - name: Run Vulture\n"], [173, "        run: |\n"], [174, "          set +e\n"], [175, "          vulture --sort-by-size --min-confidence 70 ./ > vulture.txt\n"], [176, "          exit 0\n"], [177, "      - name: Upload Vulture output\n"], [178, "        uses: actions/upload-artifact@v4\n"], [179, "        with:\n"], [180, "          name: vulture.txt\n"], [181, "          path: vulture.txt\n"], [182, "      # Optional: fail if Vulture reported potential dead code\n"], [183, "      - name: Fail if Vulture found dead code\n"], [184, "        run: |\n"], [185, "          if grep -E \":[0-9]+:\" -q vulture.txt; then\n"], [186, "            echo \"::error::Vulture found potential dead code. See vulture.txt artifact.\"\n"], [187, "            exit 1\n"], [188, "          else\n"], [189, "            echo \"Vulture found no reportable dead code.\"\n"], [190, "          fi\n"], [191, "\n"], [192, "  # === Checkov (Dockerfiles, GitHub Actions YAML, K8s/Helm) -> SARIF ===\n"], [193, "  checkov:\n"], [194, "    runs-on: ubuntu-latest\n"], [195, "    steps:\n"], [196, "      - uses: actions/checkout@v4\n"], [197, "\n"], [198, "      # Use the official Checkov action\n"], [199, "      - name: Run Checkov\n"], [200, "        id: checkov\n"], [201, "        uses: bridgecrewio/checkov-action@v12\n"], [202, "        with:\n"], [203, "          # Scan the whole repo\n"], [204, "          directory: .\n"], [205, "          # Focus on Dockerfiles and YAML-based configs\n"], [206, "          framework: dockerfile,github_actions,kubernetes,helm\n"], [207, "          # Exclude common noise; tweak as you like\n"], [208, "          skip_path: |\n"], [209, "            .git\n"], [210, "            .venv\n"], [211, "            venv\n"], [212, "            node_modules\n"], [213, "            **/tests/**\n"], [214, "          # Produce both SARIF (for Code Scanning) and JSON (for artifacts & gating)\n"], [215, "          output_format: sarif,json\n"], [216, "          output_file_path: checkov.sarif::checkov.json\n"], [217, "          # Always succeed so SARIF uploads even if findings exist\n"], [218, "          soft_fail: true\n"], [219, "          quiet: true\n"], [220, "\n"], [221, "      - name: Upload Checkov SARIF to Code Scanning\n"], [222, "        uses: github/codeql-action/upload-sarif@v3\n"], [223, "        with:\n"], [224, "          sarif_file: checkov.sarif\n"], [225, "\n"], [226, "      - name: Upload Checkov JSON report\n"], [227, "        uses: actions/upload-artifact@v4\n"], [228, "        with:\n"], [229, "          name: checkov.json\n"], [230, "          path: checkov.json\n"], [231, "\n"], [232, "      # Optional: fail CI if Checkov found failed checks\n"], [233, "      - name: Fail if Checkov had findings\n"], [234, "        run: |\n"], [235, "          python - <<'PY'\n"], [236, "          import json, sys\n"], [237, "          with open(\"checkov.json\") as f:\n"], [238, "              data = json.load(f)\n"], [239, "          # Checkov JSON may be a list (multiple reports) or a dict (single)\n"], [240, "          reports = data if isinstance(data, list) else [data]\n"], [241, "          failed = 0\n"], [242, "          for r in reports:\n"], [243, "              summ = r.get(\"summary\") or {}\n"], [244, "              failed += int(summ.get(\"failed\", 0))\n"], [245, "          if failed > 0:\n"], [246, "              print(f\"Checkov found {failed} failed check(s). See SARIF or checkov.json.\")\n"], [247, "              sys.exit(1)\n"], [248, "          print(\"Checkov found no failed checks.\")\n"], [249, "          PY"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [11, 250], "resource": "jobs", "evaluations": null, "check_class": "checkov.github_actions.checks.job.CosignArtifacts", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["checkov"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"runs-on": "ubuntu-latest", "strategy": {"matrix": {"python": ["3.12"], "__startline__": 15, "__endline__": 16}, "__startline__": 14, "__endline__": 16}, "steps": [{"uses": "actions/checkout@v4", "__startline__": 17, "__endline__": 18}, {"uses": "actions/setup-python@v5", "with": {"python-version": "${{ matrix.python }}", "__startline__": 20, "__endline__": 22}, "__startline__": 18, "__endline__": 22}, {"name": "Install Poetry", "run": "curl -sSL https://install.python-poetry.org | python3 -", "__startline__": 22, "__endline__": 25}, {"name": "Ensure Poetry on PATH", "run": "echo \"$HOME/.local/bin\" >> $GITHUB_PATH", "__startline__": 25, "__endline__": 28}, {"name": "Cache Poetry", "uses": "actions/cache@v4", "with": {"path": "~/.cache/pypoetry", "key": "poetry-${{ hashFiles('**/poetry.lock') }}", "__startline__": 31, "__endline__": 34}, "__startline__": 28, "__endline__": 34}, {"name": "Install deps", "run": "poetry install --no-interaction --no-root", "__startline__": 34, "__endline__": 37}, {"name": "Pre-commit (format, lint, mypy)", "run": "python -m pip install --upgrade pip pipx\npipx install pre-commit\npre-commit run --all-files\n", "__startline__": 37, "__endline__": 43}, {"name": "Tests + coverage", "run": "poetry run pytest --cov --cov-report=xml", "__startline__": 43, "__endline__": 46}, {"name": "Coverage gate", "uses": "orgoro/coverage@v3", "with": {"coverageFile": "./coverage.xml", "failCiIfError": true, "minCoverage": 85, "__startline__": 49, "__endline__": 53}, "__startline__": 46, "__endline__": 53}], "__startline__": 12, "__endline__": 53}}, "code_block": [[12, "    runs-on: ubuntu-latest\n"], [13, "    strategy:\n"], [14, "      matrix:\n"], [15, "        python: ['3.12']\n"], [16, "    steps:\n"], [17, "      - uses: actions/checkout@v4\n"], [18, "      - uses: actions/setup-python@v5\n"], [19, "        with:\n"], [20, "          python-version: ${{ matrix.python }}\n"], [21, "\n"], [22, "      - name: Install Poetry\n"], [23, "        run: curl -sSL https://install.python-poetry.org | python3 -\n"], [24, "\n"], [25, "      - name: Ensure Poetry on PATH\n"], [26, "        run: echo \"$HOME/.local/bin\" >> $GITHUB_PATH\n"], [27, "\n"], [28, "      - name: Cache Poetry\n"], [29, "        uses: actions/cache@v4\n"], [30, "        with:\n"], [31, "          path: ~/.cache/pypoetry\n"], [32, "          key: poetry-${{ hashFiles('**/poetry.lock') }}\n"], [33, "\n"], [34, "      - name: Install deps\n"], [35, "        run: poetry install --no-interaction --no-root\n"], [36, "\n"], [37, "      - name: Pre-commit (format, lint, mypy)\n"], [38, "        run: |\n"], [39, "          python -m pip install --upgrade pip pipx\n"], [40, "          pipx install pre-commit\n"], [41, "          pre-commit run --all-files\n"], [42, "\n"], [43, "      - name: Tests + coverage\n"], [44, "        run: poetry run pytest --cov --cov-report=xml\n"], [45, "\n"], [46, "      - name: Coverage gate\n"], [47, "        uses: orgoro/coverage@v3\n"], [48, "        with:\n"], [49, "          coverageFile: ./coverage.xml\n"], [50, "          failCiIfError: true\n"], [51, "          minCoverage: 85\n"], [52, "\n"], [53, "  pyright:\n"], [54, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [12, 54], "resource": "jobs(lint-type-test)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"runs-on": "ubuntu-latest", "steps": [{"uses": "actions/checkout@v4", "__startline__": 56, "__endline__": 57}, {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 59, "__endline__": 60}, "__startline__": 57, "__endline__": 60}, {"run": "python -m pip install --upgrade pip pipx", "__startline__": 60, "__endline__": 61}, {"run": "pipx install pyright", "__startline__": 61, "__endline__": 62}, {"run": "pyright", "__startline__": 62, "__endline__": 65}], "__startline__": 54, "__endline__": 65}}, "code_block": [[54, "    runs-on: ubuntu-latest\n"], [55, "    steps:\n"], [56, "      - uses: actions/checkout@v4\n"], [57, "      - uses: actions/setup-python@v5\n"], [58, "        with:\n"], [59, "          python-version: '3.12'\n"], [60, "      - run: python -m pip install --upgrade pip pipx\n"], [61, "      - run: pipx install pyright\n"], [62, "      - run: pyright\n"], [63, "\n"], [64, "  # === Semgrep -> SARIF -> Code scanning ===\n"], [65, "  semgrep:\n"], [66, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [54, 66], "resource": "jobs(pyright)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pyright"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"runs-on": "ubuntu-latest", "steps": [{"uses": "actions/checkout@v4", "__startline__": 68, "__endline__": 69}, {"name": "Run Semgrep (generate SARIF, keep going)", "id": "semgrep", "continue-on-error": true, "uses": "returntocorp/semgrep-action@v1", "with": {"config": "p/python\np/security-audit\n", "generateSarif": "1", "__startline__": 74, "__endline__": 79}, "__startline__": 69, "__endline__": 79}, {"name": "Upload Semgrep SARIF to Code Scanning", "uses": "github/codeql-action/upload-sarif@v3", "with": {"sarif_file": "semgrep.sarif", "__startline__": 82, "__endline__": 87}, "__startline__": 79, "__endline__": 87}], "__startline__": 66, "__endline__": 87}}, "code_block": [[66, "    runs-on: ubuntu-latest\n"], [67, "    steps:\n"], [68, "      - uses: actions/checkout@v4\n"], [69, "      - name: Run Semgrep (generate SARIF, keep going)\n"], [70, "        id: semgrep\n"], [71, "        continue-on-error: true  # ensure upload happens even with findings\n"], [72, "        uses: returntocorp/semgrep-action@v1\n"], [73, "        with:\n"], [74, "          config: |\n"], [75, "            p/python\n"], [76, "            p/security-audit\n"], [77, "          generateSarif: \"1\"     # writes semgrep.sarif in repo root\n"], [78, "\n"], [79, "      - name: Upload Semgrep SARIF to Code Scanning\n"], [80, "        uses: github/codeql-action/upload-sarif@v3\n"], [81, "        with:\n"], [82, "          sarif_file: semgrep.sarif\n"], [83, "      # Optionally fail the job if Semgrep found results (kept soft by default)\n"], [84, "      # - run: exit ${{ steps.semgrep.outputs.exit_code || 0 }}\n"], [85, "\n"], [86, "  # === pip-audit -> SARIF -> Code scanning ===\n"], [87, "  pip-audit:\n"], [88, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [66, 88], "resource": "jobs(semgrep)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["semgrep"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"runs-on": "ubuntu-latest", "steps": [{"uses": "actions/checkout@v4", "__startline__": 90, "__endline__": 91}, {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 93, "__endline__": 95}, "__startline__": 91, "__endline__": 95}, {"name": "Install Poetry", "run": "curl -sSL https://install.python-poetry.org | python3 -", "__startline__": 95, "__endline__": 98}, {"name": "Ensure Poetry on PATH", "run": "echo \"$HOME/.local/bin\" >> $GITHUB_PATH", "__startline__": 98, "__endline__": 101}, {"name": "Export deps from Poetry", "run": "poetry export -f requirements.txt --without-hashes -o requirements.txt", "__startline__": 101, "__endline__": 104}, {"name": "Install pip-audit", "run": "python -m pip install --upgrade pip pip-audit", "__startline__": 104, "__endline__": 107}, {"name": "Run pip-audit (produce SARIF, capture exit code)", "id": "pipaudit", "run": "set +e\npip-audit -r requirements.txt --format sarif --output pip-audit.sarif --progress-spinner off\necho \"exit_code=$?\" >> $GITHUB_OUTPUT\n# Always succeed so we can upload SARIF\nexit 0\n", "__startline__": 107, "__endline__": 116}, {"name": "Upload pip-audit SARIF to Code Scanning", "uses": "github/codeql-action/upload-sarif@v3", "with": {"sarif_file": "pip-audit.sarif", "__startline__": 119, "__endline__": 122}, "__startline__": 116, "__endline__": 122}, {"name": "Fail if pip-audit had findings", "if": "${{ steps.pipaudit.outputs.exit_code != '0' }}", "run": "echo \"pip-audit found vulnerabilities.\"\nexit 1\n", "__startline__": 122, "__endline__": 129}], "__startline__": 88, "__endline__": 129}}, "code_block": [[88, "    runs-on: ubuntu-latest\n"], [89, "    steps:\n"], [90, "      - uses: actions/checkout@v4\n"], [91, "      - uses: actions/setup-python@v5\n"], [92, "        with:\n"], [93, "          python-version: '3.12'\n"], [94, "\n"], [95, "      - name: Install Poetry\n"], [96, "        run: curl -sSL https://install.python-poetry.org | python3 -\n"], [97, "\n"], [98, "      - name: Ensure Poetry on PATH\n"], [99, "        run: echo \"$HOME/.local/bin\" >> $GITHUB_PATH\n"], [100, "\n"], [101, "      - name: Export deps from Poetry\n"], [102, "        run: poetry export -f requirements.txt --without-hashes -o requirements.txt\n"], [103, "\n"], [104, "      - name: Install pip-audit\n"], [105, "        run: python -m pip install --upgrade pip pip-audit\n"], [106, "\n"], [107, "      - name: Run pip-audit (produce SARIF, capture exit code)\n"], [108, "        id: pipaudit\n"], [109, "        run: |\n"], [110, "          set +e\n"], [111, "          pip-audit -r requirements.txt --format sarif --output pip-audit.sarif --progress-spinner off\n"], [112, "          echo \"exit_code=$?\" >> $GITHUB_OUTPUT\n"], [113, "          # Always succeed so we can upload SARIF\n"], [114, "          exit 0\n"], [115, "\n"], [116, "      - name: Upload pip-audit SARIF to Code Scanning\n"], [117, "        uses: github/codeql-action/upload-sarif@v3\n"], [118, "        with:\n"], [119, "          sarif_file: pip-audit.sarif\n"], [120, "\n"], [121, "      # Re-fail the job if vulnerabilities were found\n"], [122, "      - name: Fail if pip-audit had findings\n"], [123, "        if: ${{ steps.pipaudit.outputs.exit_code != '0' }}\n"], [124, "        run: |\n"], [125, "          echo \"pip-audit found vulnerabilities.\"\n"], [126, "          exit 1\n"], [127, "\n"], [128, "  # === Bandit (security lint) ===\n"], [129, "  bandit:\n"], [130, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [88, 130], "resource": "jobs(pip-audit)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"runs-on": "ubuntu-latest", "steps": [{"uses": "actions/checkout@v4", "__startline__": 132, "__endline__": 133}, {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 135, "__endline__": 136}, "__startline__": 133, "__endline__": 136}, {"name": "Install Bandit", "run": "python -m pip install --upgrade pip bandit", "__startline__": 136, "__endline__": 138}, {"name": "Run Bandit (JSON report)", "run": "bandit -r ./apps -x ./apps/chatbot/tests,./apps/cwe_ingestion/tests,./apps/pdf_worker/tests,./apps/tests,./apps/cwe_ingestion/build/lib/tests,./apps/cwe_ingestion/scripts -f json -o bandit_report_no_tests.json -iii -l\n", "__startline__": 138, "__endline__": 143}, {"name": "Upload Bandit report", "uses": "actions/upload-artifact@v4", "with": {"name": "bandit_report_no_tests.json", "path": "bandit_report_no_tests.json", "__startline__": 146, "__endline__": 149}, "__startline__": 143, "__endline__": 149}, {"name": "Fail if Bandit found issues", "run": "python - <<'PY'\nimport json, sys\nwith open(\"bandit_report_no_tests.json\") as f:\n    data = json.load(f)\nissues = data.get(\"results\", [])\nif issues:\n    print(f\"Bandit found {len(issues)} issue(s).\")\n    sys.exit(1)\nprint(\"Bandit found no issues.\")\nPY\n", "__startline__": 149, "__endline__": 163}], "__startline__": 130, "__endline__": 163}}, "code_block": [[130, "    runs-on: ubuntu-latest\n"], [131, "    steps:\n"], [132, "      - uses: actions/checkout@v4\n"], [133, "      - uses: actions/setup-python@v5\n"], [134, "        with:\n"], [135, "          python-version: '3.12'\n"], [136, "      - name: Install Bandit\n"], [137, "        run: python -m pip install --upgrade pip bandit\n"], [138, "      - name: Run Bandit (JSON report)\n"], [139, "        run: >\n"], [140, "          bandit -r ./apps\n"], [141, "          -x ./apps/chatbot/tests,./apps/cwe_ingestion/tests,./apps/pdf_worker/tests,./apps/tests,./apps/cwe_ingestion/build/lib/tests,./apps/cwe_ingestion/scripts\n"], [142, "          -f json -o bandit_report_no_tests.json -iii -l\n"], [143, "      - name: Upload Bandit report\n"], [144, "        uses: actions/upload-artifact@v4\n"], [145, "        with:\n"], [146, "          name: bandit_report_no_tests.json\n"], [147, "          path: bandit_report_no_tests.json\n"], [148, "      # Optional: fail the job if Bandit found issues (parses JSON count>0)\n"], [149, "      - name: Fail if Bandit found issues\n"], [150, "        run: |\n"], [151, "          python - <<'PY'\n"], [152, "          import json, sys\n"], [153, "          with open(\"bandit_report_no_tests.json\") as f:\n"], [154, "              data = json.load(f)\n"], [155, "          issues = data.get(\"results\", [])\n"], [156, "          if issues:\n"], [157, "              print(f\"Bandit found {len(issues)} issue(s).\")\n"], [158, "              sys.exit(1)\n"], [159, "          print(\"Bandit found no issues.\")\n"], [160, "          PY\n"], [161, "\n"], [162, "  # === Vulture (dead code finder) ===\n"], [163, "  vulture:\n"], [164, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [130, 164], "resource": "jobs(bandit)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["bandit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"runs-on": "ubuntu-latest", "steps": [{"uses": "actions/checkout@v4", "__startline__": 166, "__endline__": 167}, {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 169, "__endline__": 170}, "__startline__": 167, "__endline__": 170}, {"name": "Install Vulture", "run": "python -m pip install --upgrade pip vulture", "__startline__": 170, "__endline__": 172}, {"name": "Run Vulture", "run": "set +e\nvulture --sort-by-size --min-confidence 70 ./ > vulture.txt\nexit 0\n", "__startline__": 172, "__endline__": 177}, {"name": "Upload Vulture output", "uses": "actions/upload-artifact@v4", "with": {"name": "vulture.txt", "path": "vulture.txt", "__startline__": 180, "__endline__": 183}, "__startline__": 177, "__endline__": 183}, {"name": "Fail if Vulture found dead code", "run": "if grep -E \":[0-9]+:\" -q vulture.txt; then\n  echo \"::error::Vulture found potential dead code. See vulture.txt artifact.\"\n  exit 1\nelse\n  echo \"Vulture found no reportable dead code.\"\nfi\n", "__startline__": 183, "__endline__": 193}], "__startline__": 164, "__endline__": 193}}, "code_block": [[164, "    runs-on: ubuntu-latest\n"], [165, "    steps:\n"], [166, "      - uses: actions/checkout@v4\n"], [167, "      - uses: actions/setup-python@v5\n"], [168, "        with:\n"], [169, "          python-version: '3.12'\n"], [170, "      - name: Install Vulture\n"], [171, "        run: python -m pip install --upgrade pip vulture\n"], [172, "      - name: Run Vulture\n"], [173, "        run: |\n"], [174, "          set +e\n"], [175, "          vulture --sort-by-size --min-confidence 70 ./ > vulture.txt\n"], [176, "          exit 0\n"], [177, "      - name: Upload Vulture output\n"], [178, "        uses: actions/upload-artifact@v4\n"], [179, "        with:\n"], [180, "          name: vulture.txt\n"], [181, "          path: vulture.txt\n"], [182, "      # Optional: fail if Vulture reported potential dead code\n"], [183, "      - name: Fail if Vulture found dead code\n"], [184, "        run: |\n"], [185, "          if grep -E \":[0-9]+:\" -q vulture.txt; then\n"], [186, "            echo \"::error::Vulture found potential dead code. See vulture.txt artifact.\"\n"], [187, "            exit 1\n"], [188, "          else\n"], [189, "            echo \"Vulture found no reportable dead code.\"\n"], [190, "          fi\n"], [191, "\n"], [192, "  # === Checkov (Dockerfiles, GitHub Actions YAML, K8s/Helm) -> SARIF ===\n"], [193, "  checkov:\n"], [194, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [164, 194], "resource": "jobs(vulture)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["vulture"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"runs-on": "ubuntu-latest", "steps": [{"uses": "actions/checkout@v4", "__startline__": 196, "__endline__": 199}, {"name": "Run Checkov", "id": "checkov", "uses": "bridgecrewio/checkov-action@v12", "with": {"directory": ".", "framework": "dockerfile,github_actions,kubernetes,helm", "skip_path": ".git\n.venv\nvenv\nnode_modules\n**/tests/**\n", "output_format": "sarif,json", "output_file_path": "checkov.sarif::checkov.json", "soft_fail": true, "quiet": true, "__startline__": 204, "__endline__": 221}, "__startline__": 199, "__endline__": 221}, {"name": "Upload Checkov SARIF to Code Scanning", "uses": "github/codeql-action/upload-sarif@v3", "with": {"sarif_file": "checkov.sarif", "__startline__": 224, "__endline__": 226}, "__startline__": 221, "__endline__": 226}, {"name": "Upload Checkov JSON report", "uses": "actions/upload-artifact@v4", "with": {"name": "checkov.json", "path": "checkov.json", "__startline__": 229, "__endline__": 233}, "__startline__": 226, "__endline__": 233}, {"name": "Fail if Checkov had findings", "run": "python - <<'PY'\nimport json, sys\nwith open(\"checkov.json\") as f:\n    data = json.load(f)\n# Checkov JSON may be a list (multiple reports) or a dict (single)\nreports = data if isinstance(data, list) else [data]\nfailed = 0\nfor r in reports:\n    summ = r.get(\"summary\") or {}\n    failed += int(summ.get(\"failed\", 0))\nif failed > 0:\n    print(f\"Checkov found {failed} failed check(s). See SARIF or checkov.json.\")\n    sys.exit(1)\nprint(\"Checkov found no failed checks.\")\nPY", "__startline__": 233, "__endline__": 249}], "__startline__": 194, "__endline__": 249}}, "code_block": [[194, "    runs-on: ubuntu-latest\n"], [195, "    steps:\n"], [196, "      - uses: actions/checkout@v4\n"], [197, "\n"], [198, "      # Use the official Checkov action\n"], [199, "      - name: Run Checkov\n"], [200, "        id: checkov\n"], [201, "        uses: bridgecrewio/checkov-action@v12\n"], [202, "        with:\n"], [203, "          # Scan the whole repo\n"], [204, "          directory: .\n"], [205, "          # Focus on Dockerfiles and YAML-based configs\n"], [206, "          framework: dockerfile,github_actions,kubernetes,helm\n"], [207, "          # Exclude common noise; tweak as you like\n"], [208, "          skip_path: |\n"], [209, "            .git\n"], [210, "            .venv\n"], [211, "            venv\n"], [212, "            node_modules\n"], [213, "            **/tests/**\n"], [214, "          # Produce both SARIF (for Code Scanning) and JSON (for artifacts & gating)\n"], [215, "          output_format: sarif,json\n"], [216, "          output_file_path: checkov.sarif::checkov.json\n"], [217, "          # Always succeed so SARIF uploads even if findings exist\n"], [218, "          soft_fail: true\n"], [219, "          quiet: true\n"], [220, "\n"], [221, "      - name: Upload Checkov SARIF to Code Scanning\n"], [222, "        uses: github/codeql-action/upload-sarif@v3\n"], [223, "        with:\n"], [224, "          sarif_file: checkov.sarif\n"], [225, "\n"], [226, "      - name: Upload Checkov JSON report\n"], [227, "        uses: actions/upload-artifact@v4\n"], [228, "        with:\n"], [229, "          name: checkov.json\n"], [230, "          path: checkov.json\n"], [231, "\n"], [232, "      # Optional: fail CI if Checkov found failed checks\n"], [233, "      - name: Fail if Checkov had findings\n"], [234, "        run: |\n"], [235, "          python - <<'PY'\n"], [236, "          import json, sys\n"], [237, "          with open(\"checkov.json\") as f:\n"], [238, "              data = json.load(f)\n"], [239, "          # Checkov JSON may be a list (multiple reports) or a dict (single)\n"], [240, "          reports = data if isinstance(data, list) else [data]\n"], [241, "          failed = 0\n"], [242, "          for r in reports:\n"], [243, "              summ = r.get(\"summary\") or {}\n"], [244, "              failed += int(summ.get(\"failed\", 0))\n"], [245, "          if failed > 0:\n"], [246, "              print(f\"Checkov found {failed} failed check(s). See SARIF or checkov.json.\")\n"], [247, "              sys.exit(1)\n"], [248, "          print(\"Checkov found no failed checks.\")\n"], [249, "          PY"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [194, 250], "resource": "jobs(checkov)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["checkov"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_6", "bc_check_id": null, "check_name": "Found artifact build without evidence of cosign sbom attestation in pipeline", "check_result": {"result": "PASSED", "results_configuration": {"lint-type-test": {"runs-on": "ubuntu-latest", "strategy": {"matrix": {"python": ["3.12"], "__startline__": 15, "__endline__": 16}, "__startline__": 14, "__endline__": 16}, "steps": [{"uses": "actions/checkout@v4", "__startline__": 17, "__endline__": 18}, {"uses": "actions/setup-python@v5", "with": {"python-version": "${{ matrix.python }}", "__startline__": 20, "__endline__": 22}, "__startline__": 18, "__endline__": 22}, {"name": "Install Poetry", "run": "curl -sSL https://install.python-poetry.org | python3 -", "__startline__": 22, "__endline__": 25}, {"name": "Ensure Poetry on PATH", "run": "echo \"$HOME/.local/bin\" >> $GITHUB_PATH", "__startline__": 25, "__endline__": 28}, {"name": "Cache Poetry", "uses": "actions/cache@v4", "with": {"path": "~/.cache/pypoetry", "key": "poetry-${{ hashFiles('**/poetry.lock') }}", "__startline__": 31, "__endline__": 34}, "__startline__": 28, "__endline__": 34}, {"name": "Install deps", "run": "poetry install --no-interaction --no-root", "__startline__": 34, "__endline__": 37}, {"name": "Pre-commit (format, lint, mypy)", "run": "python -m pip install --upgrade pip pipx\npipx install pre-commit\npre-commit run --all-files\n", "__startline__": 37, "__endline__": 43}, {"name": "Tests + coverage", "run": "poetry run pytest --cov --cov-report=xml", "__startline__": 43, "__endline__": 46}, {"name": "Coverage gate", "uses": "orgoro/coverage@v3", "with": {"coverageFile": "./coverage.xml", "failCiIfError": true, "minCoverage": 85, "__startline__": 49, "__endline__": 53}, "__startline__": 46, "__endline__": 53}], "__startline__": 12, "__endline__": 53}, "pyright": {"runs-on": "ubuntu-latest", "steps": [{"uses": "actions/checkout@v4", "__startline__": 56, "__endline__": 57}, {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 59, "__endline__": 60}, "__startline__": 57, "__endline__": 60}, {"run": "python -m pip install --upgrade pip pipx", "__startline__": 60, "__endline__": 61}, {"run": "pipx install pyright", "__startline__": 61, "__endline__": 62}, {"run": "pyright", "__startline__": 62, "__endline__": 65}], "__startline__": 54, "__endline__": 65}, "semgrep": {"runs-on": "ubuntu-latest", "steps": [{"uses": "actions/checkout@v4", "__startline__": 68, "__endline__": 69}, {"name": "Run Semgrep (generate SARIF, keep going)", "id": "semgrep", "continue-on-error": true, "uses": "returntocorp/semgrep-action@v1", "with": {"config": "p/python\np/security-audit\n", "generateSarif": "1", "__startline__": 74, "__endline__": 79}, "__startline__": 69, "__endline__": 79}, {"name": "Upload Semgrep SARIF to Code Scanning", "uses": "github/codeql-action/upload-sarif@v3", "with": {"sarif_file": "semgrep.sarif", "__startline__": 82, "__endline__": 87}, "__startline__": 79, "__endline__": 87}], "__startline__": 66, "__endline__": 87}, "pip-audit": {"runs-on": "ubuntu-latest", "steps": [{"uses": "actions/checkout@v4", "__startline__": 90, "__endline__": 91}, {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 93, "__endline__": 95}, "__startline__": 91, "__endline__": 95}, {"name": "Install Poetry", "run": "curl -sSL https://install.python-poetry.org | python3 -", "__startline__": 95, "__endline__": 98}, {"name": "Ensure Poetry on PATH", "run": "echo \"$HOME/.local/bin\" >> $GITHUB_PATH", "__startline__": 98, "__endline__": 101}, {"name": "Export deps from Poetry", "run": "poetry export -f requirements.txt --without-hashes -o requirements.txt", "__startline__": 101, "__endline__": 104}, {"name": "Install pip-audit", "run": "python -m pip install --upgrade pip pip-audit", "__startline__": 104, "__endline__": 107}, {"name": "Run pip-audit (produce SARIF, capture exit code)", "id": "pipaudit", "run": "set +e\npip-audit -r requirements.txt --format sarif --output pip-audit.sarif --progress-spinner off\necho \"exit_code=$?\" >> $GITHUB_OUTPUT\n# Always succeed so we can upload SARIF\nexit 0\n", "__startline__": 107, "__endline__": 116}, {"name": "Upload pip-audit SARIF to Code Scanning", "uses": "github/codeql-action/upload-sarif@v3", "with": {"sarif_file": "pip-audit.sarif", "__startline__": 119, "__endline__": 122}, "__startline__": 116, "__endline__": 122}, {"name": "Fail if pip-audit had findings", "if": "${{ steps.pipaudit.outputs.exit_code != '0' }}", "run": "echo \"pip-audit found vulnerabilities.\"\nexit 1\n", "__startline__": 122, "__endline__": 129}], "__startline__": 88, "__endline__": 129}, "bandit": {"runs-on": "ubuntu-latest", "steps": [{"uses": "actions/checkout@v4", "__startline__": 132, "__endline__": 133}, {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 135, "__endline__": 136}, "__startline__": 133, "__endline__": 136}, {"name": "Install Bandit", "run": "python -m pip install --upgrade pip bandit", "__startline__": 136, "__endline__": 138}, {"name": "Run Bandit (JSON report)", "run": "bandit -r ./apps -x ./apps/chatbot/tests,./apps/cwe_ingestion/tests,./apps/pdf_worker/tests,./apps/tests,./apps/cwe_ingestion/build/lib/tests,./apps/cwe_ingestion/scripts -f json -o bandit_report_no_tests.json -iii -l\n", "__startline__": 138, "__endline__": 143}, {"name": "Upload Bandit report", "uses": "actions/upload-artifact@v4", "with": {"name": "bandit_report_no_tests.json", "path": "bandit_report_no_tests.json", "__startline__": 146, "__endline__": 149}, "__startline__": 143, "__endline__": 149}, {"name": "Fail if Bandit found issues", "run": "python - <<'PY'\nimport json, sys\nwith open(\"bandit_report_no_tests.json\") as f:\n    data = json.load(f)\nissues = data.get(\"results\", [])\nif issues:\n    print(f\"Bandit found {len(issues)} issue(s).\")\n    sys.exit(1)\nprint(\"Bandit found no issues.\")\nPY\n", "__startline__": 149, "__endline__": 163}], "__startline__": 130, "__endline__": 163}, "vulture": {"runs-on": "ubuntu-latest", "steps": [{"uses": "actions/checkout@v4", "__startline__": 166, "__endline__": 167}, {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 169, "__endline__": 170}, "__startline__": 167, "__endline__": 170}, {"name": "Install Vulture", "run": "python -m pip install --upgrade pip vulture", "__startline__": 170, "__endline__": 172}, {"name": "Run Vulture", "run": "set +e\nvulture --sort-by-size --min-confidence 70 ./ > vulture.txt\nexit 0\n", "__startline__": 172, "__endline__": 177}, {"name": "Upload Vulture output", "uses": "actions/upload-artifact@v4", "with": {"name": "vulture.txt", "path": "vulture.txt", "__startline__": 180, "__endline__": 183}, "__startline__": 177, "__endline__": 183}, {"name": "Fail if Vulture found dead code", "run": "if grep -E \":[0-9]+:\" -q vulture.txt; then\n  echo \"::error::Vulture found potential dead code. See vulture.txt artifact.\"\n  exit 1\nelse\n  echo \"Vulture found no reportable dead code.\"\nfi\n", "__startline__": 183, "__endline__": 193}], "__startline__": 164, "__endline__": 193}, "checkov": {"runs-on": "ubuntu-latest", "steps": [{"uses": "actions/checkout@v4", "__startline__": 196, "__endline__": 199}, {"name": "Run Checkov", "id": "checkov", "uses": "bridgecrewio/checkov-action@v12", "with": {"directory": ".", "framework": "dockerfile,github_actions,kubernetes,helm", "skip_path": ".git\n.venv\nvenv\nnode_modules\n**/tests/**\n", "output_format": "sarif,json", "output_file_path": "checkov.sarif::checkov.json", "soft_fail": true, "quiet": true, "__startline__": 204, "__endline__": 221}, "__startline__": 199, "__endline__": 221}, {"name": "Upload Checkov SARIF to Code Scanning", "uses": "github/codeql-action/upload-sarif@v3", "with": {"sarif_file": "checkov.sarif", "__startline__": 224, "__endline__": 226}, "__startline__": 221, "__endline__": 226}, {"name": "Upload Checkov JSON report", "uses": "actions/upload-artifact@v4", "with": {"name": "checkov.json", "path": "checkov.json", "__startline__": 229, "__endline__": 233}, "__startline__": 226, "__endline__": 233}, {"name": "Fail if Checkov had findings", "run": "python - <<'PY'\nimport json, sys\nwith open(\"checkov.json\") as f:\n    data = json.load(f)\n# Checkov JSON may be a list (multiple reports) or a dict (single)\nreports = data if isinstance(data, list) else [data]\nfailed = 0\nfor r in reports:\n    summ = r.get(\"summary\") or {}\n    failed += int(summ.get(\"failed\", 0))\nif failed > 0:\n    print(f\"Checkov found {failed} failed check(s). See SARIF or checkov.json.\")\n    sys.exit(1)\nprint(\"Checkov found no failed checks.\")\nPY", "__startline__": 233, "__endline__": 249}], "__startline__": 194, "__endline__": 249}, "__startline__": 11, "__endline__": 249}}, "code_block": [[11, "  lint-type-test:\n"], [12, "    runs-on: ubuntu-latest\n"], [13, "    strategy:\n"], [14, "      matrix:\n"], [15, "        python: ['3.12']\n"], [16, "    steps:\n"], [17, "      - uses: actions/checkout@v4\n"], [18, "      - uses: actions/setup-python@v5\n"], [19, "        with:\n"], [20, "          python-version: ${{ matrix.python }}\n"], [21, "\n"], [22, "      - name: Install Poetry\n"], [23, "        run: curl -sSL https://install.python-poetry.org | python3 -\n"], [24, "\n"], [25, "      - name: Ensure Poetry on PATH\n"], [26, "        run: echo \"$HOME/.local/bin\" >> $GITHUB_PATH\n"], [27, "\n"], [28, "      - name: Cache Poetry\n"], [29, "        uses: actions/cache@v4\n"], [30, "        with:\n"], [31, "          path: ~/.cache/pypoetry\n"], [32, "          key: poetry-${{ hashFiles('**/poetry.lock') }}\n"], [33, "\n"], [34, "      - name: Install deps\n"], [35, "        run: poetry install --no-interaction --no-root\n"], [36, "\n"], [37, "      - name: Pre-commit (format, lint, mypy)\n"], [38, "        run: |\n"], [39, "          python -m pip install --upgrade pip pipx\n"], [40, "          pipx install pre-commit\n"], [41, "          pre-commit run --all-files\n"], [42, "\n"], [43, "      - name: Tests + coverage\n"], [44, "        run: poetry run pytest --cov --cov-report=xml\n"], [45, "\n"], [46, "      - name: Coverage gate\n"], [47, "        uses: orgoro/coverage@v3\n"], [48, "        with:\n"], [49, "          coverageFile: ./coverage.xml\n"], [50, "          failCiIfError: true\n"], [51, "          minCoverage: 85\n"], [52, "\n"], [53, "  pyright:\n"], [54, "    runs-on: ubuntu-latest\n"], [55, "    steps:\n"], [56, "      - uses: actions/checkout@v4\n"], [57, "      - uses: actions/setup-python@v5\n"], [58, "        with:\n"], [59, "          python-version: '3.12'\n"], [60, "      - run: python -m pip install --upgrade pip pipx\n"], [61, "      - run: pipx install pyright\n"], [62, "      - run: pyright\n"], [63, "\n"], [64, "  # === Semgrep -> SARIF -> Code scanning ===\n"], [65, "  semgrep:\n"], [66, "    runs-on: ubuntu-latest\n"], [67, "    steps:\n"], [68, "      - uses: actions/checkout@v4\n"], [69, "      - name: Run Semgrep (generate SARIF, keep going)\n"], [70, "        id: semgrep\n"], [71, "        continue-on-error: true  # ensure upload happens even with findings\n"], [72, "        uses: returntocorp/semgrep-action@v1\n"], [73, "        with:\n"], [74, "          config: |\n"], [75, "            p/python\n"], [76, "            p/security-audit\n"], [77, "          generateSarif: \"1\"     # writes semgrep.sarif in repo root\n"], [78, "\n"], [79, "      - name: Upload Semgrep SARIF to Code Scanning\n"], [80, "        uses: github/codeql-action/upload-sarif@v3\n"], [81, "        with:\n"], [82, "          sarif_file: semgrep.sarif\n"], [83, "      # Optionally fail the job if Semgrep found results (kept soft by default)\n"], [84, "      # - run: exit ${{ steps.semgrep.outputs.exit_code || 0 }}\n"], [85, "\n"], [86, "  # === pip-audit -> SARIF -> Code scanning ===\n"], [87, "  pip-audit:\n"], [88, "    runs-on: ubuntu-latest\n"], [89, "    steps:\n"], [90, "      - uses: actions/checkout@v4\n"], [91, "      - uses: actions/setup-python@v5\n"], [92, "        with:\n"], [93, "          python-version: '3.12'\n"], [94, "\n"], [95, "      - name: Install Poetry\n"], [96, "        run: curl -sSL https://install.python-poetry.org | python3 -\n"], [97, "\n"], [98, "      - name: Ensure Poetry on PATH\n"], [99, "        run: echo \"$HOME/.local/bin\" >> $GITHUB_PATH\n"], [100, "\n"], [101, "      - name: Export deps from Poetry\n"], [102, "        run: poetry export -f requirements.txt --without-hashes -o requirements.txt\n"], [103, "\n"], [104, "      - name: Install pip-audit\n"], [105, "        run: python -m pip install --upgrade pip pip-audit\n"], [106, "\n"], [107, "      - name: Run pip-audit (produce SARIF, capture exit code)\n"], [108, "        id: pipaudit\n"], [109, "        run: |\n"], [110, "          set +e\n"], [111, "          pip-audit -r requirements.txt --format sarif --output pip-audit.sarif --progress-spinner off\n"], [112, "          echo \"exit_code=$?\" >> $GITHUB_OUTPUT\n"], [113, "          # Always succeed so we can upload SARIF\n"], [114, "          exit 0\n"], [115, "\n"], [116, "      - name: Upload pip-audit SARIF to Code Scanning\n"], [117, "        uses: github/codeql-action/upload-sarif@v3\n"], [118, "        with:\n"], [119, "          sarif_file: pip-audit.sarif\n"], [120, "\n"], [121, "      # Re-fail the job if vulnerabilities were found\n"], [122, "      - name: Fail if pip-audit had findings\n"], [123, "        if: ${{ steps.pipaudit.outputs.exit_code != '0' }}\n"], [124, "        run: |\n"], [125, "          echo \"pip-audit found vulnerabilities.\"\n"], [126, "          exit 1\n"], [127, "\n"], [128, "  # === Bandit (security lint) ===\n"], [129, "  bandit:\n"], [130, "    runs-on: ubuntu-latest\n"], [131, "    steps:\n"], [132, "      - uses: actions/checkout@v4\n"], [133, "      - uses: actions/setup-python@v5\n"], [134, "        with:\n"], [135, "          python-version: '3.12'\n"], [136, "      - name: Install Bandit\n"], [137, "        run: python -m pip install --upgrade pip bandit\n"], [138, "      - name: Run Bandit (JSON report)\n"], [139, "        run: >\n"], [140, "          bandit -r ./apps\n"], [141, "          -x ./apps/chatbot/tests,./apps/cwe_ingestion/tests,./apps/pdf_worker/tests,./apps/tests,./apps/cwe_ingestion/build/lib/tests,./apps/cwe_ingestion/scripts\n"], [142, "          -f json -o bandit_report_no_tests.json -iii -l\n"], [143, "      - name: Upload Bandit report\n"], [144, "        uses: actions/upload-artifact@v4\n"], [145, "        with:\n"], [146, "          name: bandit_report_no_tests.json\n"], [147, "          path: bandit_report_no_tests.json\n"], [148, "      # Optional: fail the job if Bandit found issues (parses JSON count>0)\n"], [149, "      - name: Fail if Bandit found issues\n"], [150, "        run: |\n"], [151, "          python - <<'PY'\n"], [152, "          import json, sys\n"], [153, "          with open(\"bandit_report_no_tests.json\") as f:\n"], [154, "              data = json.load(f)\n"], [155, "          issues = data.get(\"results\", [])\n"], [156, "          if issues:\n"], [157, "              print(f\"Bandit found {len(issues)} issue(s).\")\n"], [158, "              sys.exit(1)\n"], [159, "          print(\"Bandit found no issues.\")\n"], [160, "          PY\n"], [161, "\n"], [162, "  # === Vulture (dead code finder) ===\n"], [163, "  vulture:\n"], [164, "    runs-on: ubuntu-latest\n"], [165, "    steps:\n"], [166, "      - uses: actions/checkout@v4\n"], [167, "      - uses: actions/setup-python@v5\n"], [168, "        with:\n"], [169, "          python-version: '3.12'\n"], [170, "      - name: Install Vulture\n"], [171, "        run: python -m pip install --upgrade pip vulture\n"], [172, "      - name: Run Vulture\n"], [173, "        run: |\n"], [174, "          set +e\n"], [175, "          vulture --sort-by-size --min-confidence 70 ./ > vulture.txt\n"], [176, "          exit 0\n"], [177, "      - name: Upload Vulture output\n"], [178, "        uses: actions/upload-artifact@v4\n"], [179, "        with:\n"], [180, "          name: vulture.txt\n"], [181, "          path: vulture.txt\n"], [182, "      # Optional: fail if Vulture reported potential dead code\n"], [183, "      - name: Fail if Vulture found dead code\n"], [184, "        run: |\n"], [185, "          if grep -E \":[0-9]+:\" -q vulture.txt; then\n"], [186, "            echo \"::error::Vulture found potential dead code. See vulture.txt artifact.\"\n"], [187, "            exit 1\n"], [188, "          else\n"], [189, "            echo \"Vulture found no reportable dead code.\"\n"], [190, "          fi\n"], [191, "\n"], [192, "  # === Checkov (Dockerfiles, GitHub Actions YAML, K8s/Helm) -> SARIF ===\n"], [193, "  checkov:\n"], [194, "    runs-on: ubuntu-latest\n"], [195, "    steps:\n"], [196, "      - uses: actions/checkout@v4\n"], [197, "\n"], [198, "      # Use the official Checkov action\n"], [199, "      - name: Run Checkov\n"], [200, "        id: checkov\n"], [201, "        uses: bridgecrewio/checkov-action@v12\n"], [202, "        with:\n"], [203, "          # Scan the whole repo\n"], [204, "          directory: .\n"], [205, "          # Focus on Dockerfiles and YAML-based configs\n"], [206, "          framework: dockerfile,github_actions,kubernetes,helm\n"], [207, "          # Exclude common noise; tweak as you like\n"], [208, "          skip_path: |\n"], [209, "            .git\n"], [210, "            .venv\n"], [211, "            venv\n"], [212, "            node_modules\n"], [213, "            **/tests/**\n"], [214, "          # Produce both SARIF (for Code Scanning) and JSON (for artifacts & gating)\n"], [215, "          output_format: sarif,json\n"], [216, "          output_file_path: checkov.sarif::checkov.json\n"], [217, "          # Always succeed so SARIF uploads even if findings exist\n"], [218, "          soft_fail: true\n"], [219, "          quiet: true\n"], [220, "\n"], [221, "      - name: Upload Checkov SARIF to Code Scanning\n"], [222, "        uses: github/codeql-action/upload-sarif@v3\n"], [223, "        with:\n"], [224, "          sarif_file: checkov.sarif\n"], [225, "\n"], [226, "      - name: Upload Checkov JSON report\n"], [227, "        uses: actions/upload-artifact@v4\n"], [228, "        with:\n"], [229, "          name: checkov.json\n"], [230, "          path: checkov.json\n"], [231, "\n"], [232, "      # Optional: fail CI if Checkov found failed checks\n"], [233, "      - name: Fail if Checkov had findings\n"], [234, "        run: |\n"], [235, "          python - <<'PY'\n"], [236, "          import json, sys\n"], [237, "          with open(\"checkov.json\") as f:\n"], [238, "              data = json.load(f)\n"], [239, "          # Checkov JSON may be a list (multiple reports) or a dict (single)\n"], [240, "          reports = data if isinstance(data, list) else [data]\n"], [241, "          failed = 0\n"], [242, "          for r in reports:\n"], [243, "              summ = r.get(\"summary\") or {}\n"], [244, "              failed += int(summ.get(\"failed\", 0))\n"], [245, "          if failed > 0:\n"], [246, "              print(f\"Checkov found {failed} failed check(s). See SARIF or checkov.json.\")\n"], [247, "              sys.exit(1)\n"], [248, "          print(\"Checkov found no failed checks.\")\n"], [249, "          PY"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [11, 250], "resource": "jobs", "evaluations": null, "check_class": "checkov.github_actions.checks.job.CosignSBOM", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["checkov"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"runs-on": "ubuntu-latest", "strategy": {"matrix": {"python": ["3.12"], "__startline__": 15, "__endline__": 16}, "__startline__": 14, "__endline__": 16}, "steps": [{"uses": "actions/checkout@v4", "__startline__": 17, "__endline__": 18}, {"uses": "actions/setup-python@v5", "with": {"python-version": "${{ matrix.python }}", "__startline__": 20, "__endline__": 22}, "__startline__": 18, "__endline__": 22}, {"name": "Install Poetry", "run": "curl -sSL https://install.python-poetry.org | python3 -", "__startline__": 22, "__endline__": 25}, {"name": "Ensure Poetry on PATH", "run": "echo \"$HOME/.local/bin\" >> $GITHUB_PATH", "__startline__": 25, "__endline__": 28}, {"name": "Cache Poetry", "uses": "actions/cache@v4", "with": {"path": "~/.cache/pypoetry", "key": "poetry-${{ hashFiles('**/poetry.lock') }}", "__startline__": 31, "__endline__": 34}, "__startline__": 28, "__endline__": 34}, {"name": "Install deps", "run": "poetry install --no-interaction --no-root", "__startline__": 34, "__endline__": 37}, {"name": "Pre-commit (format, lint, mypy)", "run": "python -m pip install --upgrade pip pipx\npipx install pre-commit\npre-commit run --all-files\n", "__startline__": 37, "__endline__": 43}, {"name": "Tests + coverage", "run": "poetry run pytest --cov --cov-report=xml", "__startline__": 43, "__endline__": 46}, {"name": "Coverage gate", "uses": "orgoro/coverage@v3", "with": {"coverageFile": "./coverage.xml", "failCiIfError": true, "minCoverage": 85, "__startline__": 49, "__endline__": 53}, "__startline__": 46, "__endline__": 53}], "__startline__": 12, "__endline__": 53}}, "code_block": [[12, "    runs-on: ubuntu-latest\n"], [13, "    strategy:\n"], [14, "      matrix:\n"], [15, "        python: ['3.12']\n"], [16, "    steps:\n"], [17, "      - uses: actions/checkout@v4\n"], [18, "      - uses: actions/setup-python@v5\n"], [19, "        with:\n"], [20, "          python-version: ${{ matrix.python }}\n"], [21, "\n"], [22, "      - name: Install Poetry\n"], [23, "        run: curl -sSL https://install.python-poetry.org | python3 -\n"], [24, "\n"], [25, "      - name: Ensure Poetry on PATH\n"], [26, "        run: echo \"$HOME/.local/bin\" >> $GITHUB_PATH\n"], [27, "\n"], [28, "      - name: Cache Poetry\n"], [29, "        uses: actions/cache@v4\n"], [30, "        with:\n"], [31, "          path: ~/.cache/pypoetry\n"], [32, "          key: poetry-${{ hashFiles('**/poetry.lock') }}\n"], [33, "\n"], [34, "      - name: Install deps\n"], [35, "        run: poetry install --no-interaction --no-root\n"], [36, "\n"], [37, "      - name: Pre-commit (format, lint, mypy)\n"], [38, "        run: |\n"], [39, "          python -m pip install --upgrade pip pipx\n"], [40, "          pipx install pre-commit\n"], [41, "          pre-commit run --all-files\n"], [42, "\n"], [43, "      - name: Tests + coverage\n"], [44, "        run: poetry run pytest --cov --cov-report=xml\n"], [45, "\n"], [46, "      - name: Coverage gate\n"], [47, "        uses: orgoro/coverage@v3\n"], [48, "        with:\n"], [49, "          coverageFile: ./coverage.xml\n"], [50, "          failCiIfError: true\n"], [51, "          minCoverage: 85\n"], [52, "\n"], [53, "  pyright:\n"], [54, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [12, 54], "resource": "jobs(lint-type-test)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"runs-on": "ubuntu-latest", "steps": [{"uses": "actions/checkout@v4", "__startline__": 56, "__endline__": 57}, {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 59, "__endline__": 60}, "__startline__": 57, "__endline__": 60}, {"run": "python -m pip install --upgrade pip pipx", "__startline__": 60, "__endline__": 61}, {"run": "pipx install pyright", "__startline__": 61, "__endline__": 62}, {"run": "pyright", "__startline__": 62, "__endline__": 65}], "__startline__": 54, "__endline__": 65}}, "code_block": [[54, "    runs-on: ubuntu-latest\n"], [55, "    steps:\n"], [56, "      - uses: actions/checkout@v4\n"], [57, "      - uses: actions/setup-python@v5\n"], [58, "        with:\n"], [59, "          python-version: '3.12'\n"], [60, "      - run: python -m pip install --upgrade pip pipx\n"], [61, "      - run: pipx install pyright\n"], [62, "      - run: pyright\n"], [63, "\n"], [64, "  # === Semgrep -> SARIF -> Code scanning ===\n"], [65, "  semgrep:\n"], [66, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [54, 66], "resource": "jobs(pyright)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pyright"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"runs-on": "ubuntu-latest", "steps": [{"uses": "actions/checkout@v4", "__startline__": 68, "__endline__": 69}, {"name": "Run Semgrep (generate SARIF, keep going)", "id": "semgrep", "continue-on-error": true, "uses": "returntocorp/semgrep-action@v1", "with": {"config": "p/python\np/security-audit\n", "generateSarif": "1", "__startline__": 74, "__endline__": 79}, "__startline__": 69, "__endline__": 79}, {"name": "Upload Semgrep SARIF to Code Scanning", "uses": "github/codeql-action/upload-sarif@v3", "with": {"sarif_file": "semgrep.sarif", "__startline__": 82, "__endline__": 87}, "__startline__": 79, "__endline__": 87}], "__startline__": 66, "__endline__": 87}}, "code_block": [[66, "    runs-on: ubuntu-latest\n"], [67, "    steps:\n"], [68, "      - uses: actions/checkout@v4\n"], [69, "      - name: Run Semgrep (generate SARIF, keep going)\n"], [70, "        id: semgrep\n"], [71, "        continue-on-error: true  # ensure upload happens even with findings\n"], [72, "        uses: returntocorp/semgrep-action@v1\n"], [73, "        with:\n"], [74, "          config: |\n"], [75, "            p/python\n"], [76, "            p/security-audit\n"], [77, "          generateSarif: \"1\"     # writes semgrep.sarif in repo root\n"], [78, "\n"], [79, "      - name: Upload Semgrep SARIF to Code Scanning\n"], [80, "        uses: github/codeql-action/upload-sarif@v3\n"], [81, "        with:\n"], [82, "          sarif_file: semgrep.sarif\n"], [83, "      # Optionally fail the job if Semgrep found results (kept soft by default)\n"], [84, "      # - run: exit ${{ steps.semgrep.outputs.exit_code || 0 }}\n"], [85, "\n"], [86, "  # === pip-audit -> SARIF -> Code scanning ===\n"], [87, "  pip-audit:\n"], [88, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [66, 88], "resource": "jobs(semgrep)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["semgrep"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"runs-on": "ubuntu-latest", "steps": [{"uses": "actions/checkout@v4", "__startline__": 90, "__endline__": 91}, {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 93, "__endline__": 95}, "__startline__": 91, "__endline__": 95}, {"name": "Install Poetry", "run": "curl -sSL https://install.python-poetry.org | python3 -", "__startline__": 95, "__endline__": 98}, {"name": "Ensure Poetry on PATH", "run": "echo \"$HOME/.local/bin\" >> $GITHUB_PATH", "__startline__": 98, "__endline__": 101}, {"name": "Export deps from Poetry", "run": "poetry export -f requirements.txt --without-hashes -o requirements.txt", "__startline__": 101, "__endline__": 104}, {"name": "Install pip-audit", "run": "python -m pip install --upgrade pip pip-audit", "__startline__": 104, "__endline__": 107}, {"name": "Run pip-audit (produce SARIF, capture exit code)", "id": "pipaudit", "run": "set +e\npip-audit -r requirements.txt --format sarif --output pip-audit.sarif --progress-spinner off\necho \"exit_code=$?\" >> $GITHUB_OUTPUT\n# Always succeed so we can upload SARIF\nexit 0\n", "__startline__": 107, "__endline__": 116}, {"name": "Upload pip-audit SARIF to Code Scanning", "uses": "github/codeql-action/upload-sarif@v3", "with": {"sarif_file": "pip-audit.sarif", "__startline__": 119, "__endline__": 122}, "__startline__": 116, "__endline__": 122}, {"name": "Fail if pip-audit had findings", "if": "${{ steps.pipaudit.outputs.exit_code != '0' }}", "run": "echo \"pip-audit found vulnerabilities.\"\nexit 1\n", "__startline__": 122, "__endline__": 129}], "__startline__": 88, "__endline__": 129}}, "code_block": [[88, "    runs-on: ubuntu-latest\n"], [89, "    steps:\n"], [90, "      - uses: actions/checkout@v4\n"], [91, "      - uses: actions/setup-python@v5\n"], [92, "        with:\n"], [93, "          python-version: '3.12'\n"], [94, "\n"], [95, "      - name: Install Poetry\n"], [96, "        run: curl -sSL https://install.python-poetry.org | python3 -\n"], [97, "\n"], [98, "      - name: Ensure Poetry on PATH\n"], [99, "        run: echo \"$HOME/.local/bin\" >> $GITHUB_PATH\n"], [100, "\n"], [101, "      - name: Export deps from Poetry\n"], [102, "        run: poetry export -f requirements.txt --without-hashes -o requirements.txt\n"], [103, "\n"], [104, "      - name: Install pip-audit\n"], [105, "        run: python -m pip install --upgrade pip pip-audit\n"], [106, "\n"], [107, "      - name: Run pip-audit (produce SARIF, capture exit code)\n"], [108, "        id: pipaudit\n"], [109, "        run: |\n"], [110, "          set +e\n"], [111, "          pip-audit -r requirements.txt --format sarif --output pip-audit.sarif --progress-spinner off\n"], [112, "          echo \"exit_code=$?\" >> $GITHUB_OUTPUT\n"], [113, "          # Always succeed so we can upload SARIF\n"], [114, "          exit 0\n"], [115, "\n"], [116, "      - name: Upload pip-audit SARIF to Code Scanning\n"], [117, "        uses: github/codeql-action/upload-sarif@v3\n"], [118, "        with:\n"], [119, "          sarif_file: pip-audit.sarif\n"], [120, "\n"], [121, "      # Re-fail the job if vulnerabilities were found\n"], [122, "      - name: Fail if pip-audit had findings\n"], [123, "        if: ${{ steps.pipaudit.outputs.exit_code != '0' }}\n"], [124, "        run: |\n"], [125, "          echo \"pip-audit found vulnerabilities.\"\n"], [126, "          exit 1\n"], [127, "\n"], [128, "  # === Bandit (security lint) ===\n"], [129, "  bandit:\n"], [130, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [88, 130], "resource": "jobs(pip-audit)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"runs-on": "ubuntu-latest", "steps": [{"uses": "actions/checkout@v4", "__startline__": 132, "__endline__": 133}, {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 135, "__endline__": 136}, "__startline__": 133, "__endline__": 136}, {"name": "Install Bandit", "run": "python -m pip install --upgrade pip bandit", "__startline__": 136, "__endline__": 138}, {"name": "Run Bandit (JSON report)", "run": "bandit -r ./apps -x ./apps/chatbot/tests,./apps/cwe_ingestion/tests,./apps/pdf_worker/tests,./apps/tests,./apps/cwe_ingestion/build/lib/tests,./apps/cwe_ingestion/scripts -f json -o bandit_report_no_tests.json -iii -l\n", "__startline__": 138, "__endline__": 143}, {"name": "Upload Bandit report", "uses": "actions/upload-artifact@v4", "with": {"name": "bandit_report_no_tests.json", "path": "bandit_report_no_tests.json", "__startline__": 146, "__endline__": 149}, "__startline__": 143, "__endline__": 149}, {"name": "Fail if Bandit found issues", "run": "python - <<'PY'\nimport json, sys\nwith open(\"bandit_report_no_tests.json\") as f:\n    data = json.load(f)\nissues = data.get(\"results\", [])\nif issues:\n    print(f\"Bandit found {len(issues)} issue(s).\")\n    sys.exit(1)\nprint(\"Bandit found no issues.\")\nPY\n", "__startline__": 149, "__endline__": 163}], "__startline__": 130, "__endline__": 163}}, "code_block": [[130, "    runs-on: ubuntu-latest\n"], [131, "    steps:\n"], [132, "      - uses: actions/checkout@v4\n"], [133, "      - uses: actions/setup-python@v5\n"], [134, "        with:\n"], [135, "          python-version: '3.12'\n"], [136, "      - name: Install Bandit\n"], [137, "        run: python -m pip install --upgrade pip bandit\n"], [138, "      - name: Run Bandit (JSON report)\n"], [139, "        run: >\n"], [140, "          bandit -r ./apps\n"], [141, "          -x ./apps/chatbot/tests,./apps/cwe_ingestion/tests,./apps/pdf_worker/tests,./apps/tests,./apps/cwe_ingestion/build/lib/tests,./apps/cwe_ingestion/scripts\n"], [142, "          -f json -o bandit_report_no_tests.json -iii -l\n"], [143, "      - name: Upload Bandit report\n"], [144, "        uses: actions/upload-artifact@v4\n"], [145, "        with:\n"], [146, "          name: bandit_report_no_tests.json\n"], [147, "          path: bandit_report_no_tests.json\n"], [148, "      # Optional: fail the job if Bandit found issues (parses JSON count>0)\n"], [149, "      - name: Fail if Bandit found issues\n"], [150, "        run: |\n"], [151, "          python - <<'PY'\n"], [152, "          import json, sys\n"], [153, "          with open(\"bandit_report_no_tests.json\") as f:\n"], [154, "              data = json.load(f)\n"], [155, "          issues = data.get(\"results\", [])\n"], [156, "          if issues:\n"], [157, "              print(f\"Bandit found {len(issues)} issue(s).\")\n"], [158, "              sys.exit(1)\n"], [159, "          print(\"Bandit found no issues.\")\n"], [160, "          PY\n"], [161, "\n"], [162, "  # === Vulture (dead code finder) ===\n"], [163, "  vulture:\n"], [164, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [130, 164], "resource": "jobs(bandit)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["bandit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"runs-on": "ubuntu-latest", "steps": [{"uses": "actions/checkout@v4", "__startline__": 166, "__endline__": 167}, {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 169, "__endline__": 170}, "__startline__": 167, "__endline__": 170}, {"name": "Install Vulture", "run": "python -m pip install --upgrade pip vulture", "__startline__": 170, "__endline__": 172}, {"name": "Run Vulture", "run": "set +e\nvulture --sort-by-size --min-confidence 70 ./ > vulture.txt\nexit 0\n", "__startline__": 172, "__endline__": 177}, {"name": "Upload Vulture output", "uses": "actions/upload-artifact@v4", "with": {"name": "vulture.txt", "path": "vulture.txt", "__startline__": 180, "__endline__": 183}, "__startline__": 177, "__endline__": 183}, {"name": "Fail if Vulture found dead code", "run": "if grep -E \":[0-9]+:\" -q vulture.txt; then\n  echo \"::error::Vulture found potential dead code. See vulture.txt artifact.\"\n  exit 1\nelse\n  echo \"Vulture found no reportable dead code.\"\nfi\n", "__startline__": 183, "__endline__": 193}], "__startline__": 164, "__endline__": 193}}, "code_block": [[164, "    runs-on: ubuntu-latest\n"], [165, "    steps:\n"], [166, "      - uses: actions/checkout@v4\n"], [167, "      - uses: actions/setup-python@v5\n"], [168, "        with:\n"], [169, "          python-version: '3.12'\n"], [170, "      - name: Install Vulture\n"], [171, "        run: python -m pip install --upgrade pip vulture\n"], [172, "      - name: Run Vulture\n"], [173, "        run: |\n"], [174, "          set +e\n"], [175, "          vulture --sort-by-size --min-confidence 70 ./ > vulture.txt\n"], [176, "          exit 0\n"], [177, "      - name: Upload Vulture output\n"], [178, "        uses: actions/upload-artifact@v4\n"], [179, "        with:\n"], [180, "          name: vulture.txt\n"], [181, "          path: vulture.txt\n"], [182, "      # Optional: fail if Vulture reported potential dead code\n"], [183, "      - name: Fail if Vulture found dead code\n"], [184, "        run: |\n"], [185, "          if grep -E \":[0-9]+:\" -q vulture.txt; then\n"], [186, "            echo \"::error::Vulture found potential dead code. See vulture.txt artifact.\"\n"], [187, "            exit 1\n"], [188, "          else\n"], [189, "            echo \"Vulture found no reportable dead code.\"\n"], [190, "          fi\n"], [191, "\n"], [192, "  # === Checkov (Dockerfiles, GitHub Actions YAML, K8s/Helm) -> SARIF ===\n"], [193, "  checkov:\n"], [194, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [164, 194], "resource": "jobs(vulture)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["vulture"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"runs-on": "ubuntu-latest", "steps": [{"uses": "actions/checkout@v4", "__startline__": 196, "__endline__": 199}, {"name": "Run Checkov", "id": "checkov", "uses": "bridgecrewio/checkov-action@v12", "with": {"directory": ".", "framework": "dockerfile,github_actions,kubernetes,helm", "skip_path": ".git\n.venv\nvenv\nnode_modules\n**/tests/**\n", "output_format": "sarif,json", "output_file_path": "checkov.sarif::checkov.json", "soft_fail": true, "quiet": true, "__startline__": 204, "__endline__": 221}, "__startline__": 199, "__endline__": 221}, {"name": "Upload Checkov SARIF to Code Scanning", "uses": "github/codeql-action/upload-sarif@v3", "with": {"sarif_file": "checkov.sarif", "__startline__": 224, "__endline__": 226}, "__startline__": 221, "__endline__": 226}, {"name": "Upload Checkov JSON report", "uses": "actions/upload-artifact@v4", "with": {"name": "checkov.json", "path": "checkov.json", "__startline__": 229, "__endline__": 233}, "__startline__": 226, "__endline__": 233}, {"name": "Fail if Checkov had findings", "run": "python - <<'PY'\nimport json, sys\nwith open(\"checkov.json\") as f:\n    data = json.load(f)\n# Checkov JSON may be a list (multiple reports) or a dict (single)\nreports = data if isinstance(data, list) else [data]\nfailed = 0\nfor r in reports:\n    summ = r.get(\"summary\") or {}\n    failed += int(summ.get(\"failed\", 0))\nif failed > 0:\n    print(f\"Checkov found {failed} failed check(s). See SARIF or checkov.json.\")\n    sys.exit(1)\nprint(\"Checkov found no failed checks.\")\nPY", "__startline__": 233, "__endline__": 249}], "__startline__": 194, "__endline__": 249}}, "code_block": [[194, "    runs-on: ubuntu-latest\n"], [195, "    steps:\n"], [196, "      - uses: actions/checkout@v4\n"], [197, "\n"], [198, "      # Use the official Checkov action\n"], [199, "      - name: Run Checkov\n"], [200, "        id: checkov\n"], [201, "        uses: bridgecrewio/checkov-action@v12\n"], [202, "        with:\n"], [203, "          # Scan the whole repo\n"], [204, "          directory: .\n"], [205, "          # Focus on Dockerfiles and YAML-based configs\n"], [206, "          framework: dockerfile,github_actions,kubernetes,helm\n"], [207, "          # Exclude common noise; tweak as you like\n"], [208, "          skip_path: |\n"], [209, "            .git\n"], [210, "            .venv\n"], [211, "            venv\n"], [212, "            node_modules\n"], [213, "            **/tests/**\n"], [214, "          # Produce both SARIF (for Code Scanning) and JSON (for artifacts & gating)\n"], [215, "          output_format: sarif,json\n"], [216, "          output_file_path: checkov.sarif::checkov.json\n"], [217, "          # Always succeed so SARIF uploads even if findings exist\n"], [218, "          soft_fail: true\n"], [219, "          quiet: true\n"], [220, "\n"], [221, "      - name: Upload Checkov SARIF to Code Scanning\n"], [222, "        uses: github/codeql-action/upload-sarif@v3\n"], [223, "        with:\n"], [224, "          sarif_file: checkov.sarif\n"], [225, "\n"], [226, "      - name: Upload Checkov JSON report\n"], [227, "        uses: actions/upload-artifact@v4\n"], [228, "        with:\n"], [229, "          name: checkov.json\n"], [230, "          path: checkov.json\n"], [231, "\n"], [232, "      # Optional: fail CI if Checkov found failed checks\n"], [233, "      - name: Fail if Checkov had findings\n"], [234, "        run: |\n"], [235, "          python - <<'PY'\n"], [236, "          import json, sys\n"], [237, "          with open(\"checkov.json\") as f:\n"], [238, "              data = json.load(f)\n"], [239, "          # Checkov JSON may be a list (multiple reports) or a dict (single)\n"], [240, "          reports = data if isinstance(data, list) else [data]\n"], [241, "          failed = 0\n"], [242, "          for r in reports:\n"], [243, "              summ = r.get(\"summary\") or {}\n"], [244, "              failed += int(summ.get(\"failed\", 0))\n"], [245, "          if failed > 0:\n"], [246, "              print(f\"Checkov found {failed} failed check(s). See SARIF or checkov.json.\")\n"], [247, "              sys.exit(1)\n"], [248, "          print(\"Checkov found no failed checks.\")\n"], [249, "          PY"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [194, 250], "resource": "jobs(checkov)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["checkov"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/checkout@v4", "__startline__": 17, "__endline__": 18}}, "code_block": [[17, "      - uses: actions/checkout@v4\n"], [18, "      - uses: actions/setup-python@v5\n"], [19, "        with:\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [17, 19], "resource": "jobs(lint-type-test).steps[1]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/setup-python@v5", "with": {"python-version": "${{ matrix.python }}", "__startline__": 20, "__endline__": 22}, "__startline__": 18, "__endline__": 22}}, "code_block": [[18, "      - uses: actions/setup-python@v5\n"], [19, "        with:\n"], [20, "          python-version: ${{ matrix.python }}\n"], [21, "\n"], [22, "      - name: Install Poetry\n"], [23, "        run: curl -sSL https://install.python-poetry.org | python3 -\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [18, 23], "resource": "jobs(lint-type-test).steps[2]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"name": "Install Poetry", "run": "curl -sSL https://install.python-poetry.org | python3 -", "__startline__": 22, "__endline__": 25}}, "code_block": [[22, "      - name: Install Poetry\n"], [23, "        run: curl -sSL https://install.python-poetry.org | python3 -\n"], [24, "\n"], [25, "      - name: Ensure Poetry on PATH\n"], [26, "        run: echo \"$HOME/.local/bin\" >> $GITHUB_PATH\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [22, 26], "resource": "jobs(lint-type-test).steps[3](Install Poetry)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"name": "Ensure Poetry on PATH", "run": "echo \"$HOME/.local/bin\" >> $GITHUB_PATH", "__startline__": 25, "__endline__": 28}}, "code_block": [[25, "      - name: Ensure Poetry on PATH\n"], [26, "        run: echo \"$HOME/.local/bin\" >> $GITHUB_PATH\n"], [27, "\n"], [28, "      - name: Cache Poetry\n"], [29, "        uses: actions/cache@v4\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [25, 29], "resource": "jobs(lint-type-test).steps[4](Ensure Poetry on PATH)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"name": "Cache Poetry", "uses": "actions/cache@v4", "with": {"path": "~/.cache/pypoetry", "key": "poetry-${{ hashFiles('**/poetry.lock') }}", "__startline__": 31, "__endline__": 34}, "__startline__": 28, "__endline__": 34}}, "code_block": [[28, "      - name: Cache Poetry\n"], [29, "        uses: actions/cache@v4\n"], [30, "        with:\n"], [31, "          path: ~/.cache/pypoetry\n"], [32, "          key: poetry-${{ hashFiles('**/poetry.lock') }}\n"], [33, "\n"], [34, "      - name: Install deps\n"], [35, "        run: poetry install --no-interaction --no-root\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [28, 35], "resource": "jobs(lint-type-test).steps[5](Cache Poetry)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"name": "Install deps", "run": "poetry install --no-interaction --no-root", "__startline__": 34, "__endline__": 37}}, "code_block": [[34, "      - name: Install deps\n"], [35, "        run: poetry install --no-interaction --no-root\n"], [36, "\n"], [37, "      - name: Pre-commit (format, lint, mypy)\n"], [38, "        run: |\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [34, 38], "resource": "jobs(lint-type-test).steps[6](Install deps)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"name": "Pre-commit (format, lint, mypy)", "run": "python -m pip install --upgrade pip pipx\npipx install pre-commit\npre-commit run --all-files\n", "__startline__": 37, "__endline__": 43}}, "code_block": [[37, "      - name: Pre-commit (format, lint, mypy)\n"], [38, "        run: |\n"], [39, "          python -m pip install --upgrade pip pipx\n"], [40, "          pipx install pre-commit\n"], [41, "          pre-commit run --all-files\n"], [42, "\n"], [43, "      - name: Tests + coverage\n"], [44, "        run: poetry run pytest --cov --cov-report=xml\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [37, 44], "resource": "jobs(lint-type-test).steps[7](Pre-commit (format, lint, mypy))", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"name": "Tests + coverage", "run": "poetry run pytest --cov --cov-report=xml", "__startline__": 43, "__endline__": 46}}, "code_block": [[43, "      - name: Tests + coverage\n"], [44, "        run: poetry run pytest --cov --cov-report=xml\n"], [45, "\n"], [46, "      - name: Coverage gate\n"], [47, "        uses: orgoro/coverage@v3\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [43, 47], "resource": "jobs(lint-type-test).steps[8](Tests + coverage)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"name": "Coverage gate", "uses": "orgoro/coverage@v3", "with": {"coverageFile": "./coverage.xml", "failCiIfError": true, "minCoverage": 85, "__startline__": 49, "__endline__": 53}, "__startline__": 46, "__endline__": 53}}, "code_block": [[46, "      - name: Coverage gate\n"], [47, "        uses: orgoro/coverage@v3\n"], [48, "        with:\n"], [49, "          coverageFile: ./coverage.xml\n"], [50, "          failCiIfError: true\n"], [51, "          minCoverage: 85\n"], [52, "\n"], [53, "  pyright:\n"], [54, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [46, 54], "resource": "jobs(lint-type-test).steps[9](Coverage gate)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/checkout@v4", "__startline__": 56, "__endline__": 57}}, "code_block": [[56, "      - uses: actions/checkout@v4\n"], [57, "      - uses: actions/setup-python@v5\n"], [58, "        with:\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [56, 58], "resource": "jobs(pyright).steps[1]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pyright"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 59, "__endline__": 60}, "__startline__": 57, "__endline__": 60}}, "code_block": [[57, "      - uses: actions/setup-python@v5\n"], [58, "        with:\n"], [59, "          python-version: '3.12'\n"], [60, "      - run: python -m pip install --upgrade pip pipx\n"], [61, "      - run: pipx install pyright\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [57, 61], "resource": "jobs(pyright).steps[2]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pyright"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"run": "python -m pip install --upgrade pip pipx", "__startline__": 60, "__endline__": 61}}, "code_block": [[60, "      - run: python -m pip install --upgrade pip pipx\n"], [61, "      - run: pipx install pyright\n"], [62, "      - run: pyright\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [60, 62], "resource": "jobs(pyright).steps[3]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pyright"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"run": "pipx install pyright", "__startline__": 61, "__endline__": 62}}, "code_block": [[61, "      - run: pipx install pyright\n"], [62, "      - run: pyright\n"], [63, "\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [61, 63], "resource": "jobs(pyright).steps[4]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pyright"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"run": "pyright", "__startline__": 62, "__endline__": 65}}, "code_block": [[62, "      - run: pyright\n"], [63, "\n"], [64, "  # === Semgrep -> SARIF -> Code scanning ===\n"], [65, "  semgrep:\n"], [66, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [62, 66], "resource": "jobs(pyright).steps[5]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pyright"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/checkout@v4", "__startline__": 68, "__endline__": 69}}, "code_block": [[68, "      - uses: actions/checkout@v4\n"], [69, "      - name: Run Semgrep (generate SARIF, keep going)\n"], [70, "        id: semgrep\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [68, 70], "resource": "jobs(semgrep).steps[1]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["semgrep"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"name": "Run Semgrep (generate SARIF, keep going)", "id": "semgrep", "continue-on-error": true, "uses": "returntocorp/semgrep-action@v1", "with": {"config": "p/python\np/security-audit\n", "generateSarif": "1", "__startline__": 74, "__endline__": 79}, "__startline__": 69, "__endline__": 79}}, "code_block": [[69, "      - name: Run Semgrep (generate SARIF, keep going)\n"], [70, "        id: semgrep\n"], [71, "        continue-on-error: true  # ensure upload happens even with findings\n"], [72, "        uses: returntocorp/semgrep-action@v1\n"], [73, "        with:\n"], [74, "          config: |\n"], [75, "            p/python\n"], [76, "            p/security-audit\n"], [77, "          generateSarif: \"1\"     # writes semgrep.sarif in repo root\n"], [78, "\n"], [79, "      - name: Upload Semgrep SARIF to Code Scanning\n"], [80, "        uses: github/codeql-action/upload-sarif@v3\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [69, 80], "resource": "jobs(semgrep).steps[2](Run Semgrep (generate SARIF, keep going))", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["semgrep"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"name": "Upload Semgrep SARIF to Code Scanning", "uses": "github/codeql-action/upload-sarif@v3", "with": {"sarif_file": "semgrep.sarif", "__startline__": 82, "__endline__": 87}, "__startline__": 79, "__endline__": 87}}, "code_block": [[79, "      - name: Upload Semgrep SARIF to Code Scanning\n"], [80, "        uses: github/codeql-action/upload-sarif@v3\n"], [81, "        with:\n"], [82, "          sarif_file: semgrep.sarif\n"], [83, "      # Optionally fail the job if Semgrep found results (kept soft by default)\n"], [84, "      # - run: exit ${{ steps.semgrep.outputs.exit_code || 0 }}\n"], [85, "\n"], [86, "  # === pip-audit -> SARIF -> Code scanning ===\n"], [87, "  pip-audit:\n"], [88, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [79, 88], "resource": "jobs(semgrep).steps[3](Upload Semgrep SARIF to Code Scanning)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["semgrep"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/checkout@v4", "__startline__": 90, "__endline__": 91}}, "code_block": [[90, "      - uses: actions/checkout@v4\n"], [91, "      - uses: actions/setup-python@v5\n"], [92, "        with:\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [90, 92], "resource": "jobs(pip-audit).steps[1]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 93, "__endline__": 95}, "__startline__": 91, "__endline__": 95}}, "code_block": [[91, "      - uses: actions/setup-python@v5\n"], [92, "        with:\n"], [93, "          python-version: '3.12'\n"], [94, "\n"], [95, "      - name: Install Poetry\n"], [96, "        run: curl -sSL https://install.python-poetry.org | python3 -\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [91, 96], "resource": "jobs(pip-audit).steps[2]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"name": "Install Poetry", "run": "curl -sSL https://install.python-poetry.org | python3 -", "__startline__": 95, "__endline__": 98}}, "code_block": [[95, "      - name: Install Poetry\n"], [96, "        run: curl -sSL https://install.python-poetry.org | python3 -\n"], [97, "\n"], [98, "      - name: Ensure Poetry on PATH\n"], [99, "        run: echo \"$HOME/.local/bin\" >> $GITHUB_PATH\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [95, 99], "resource": "jobs(pip-audit).steps[3](Install Poetry)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"name": "Ensure Poetry on PATH", "run": "echo \"$HOME/.local/bin\" >> $GITHUB_PATH", "__startline__": 98, "__endline__": 101}}, "code_block": [[98, "      - name: Ensure Poetry on PATH\n"], [99, "        run: echo \"$HOME/.local/bin\" >> $GITHUB_PATH\n"], [100, "\n"], [101, "      - name: Export deps from Poetry\n"], [102, "        run: poetry export -f requirements.txt --without-hashes -o requirements.txt\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [98, 102], "resource": "jobs(pip-audit).steps[4](Ensure Poetry on PATH)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"name": "Export deps from Poetry", "run": "poetry export -f requirements.txt --without-hashes -o requirements.txt", "__startline__": 101, "__endline__": 104}}, "code_block": [[101, "      - name: Export deps from Poetry\n"], [102, "        run: poetry export -f requirements.txt --without-hashes -o requirements.txt\n"], [103, "\n"], [104, "      - name: Install pip-audit\n"], [105, "        run: python -m pip install --upgrade pip pip-audit\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [101, 105], "resource": "jobs(pip-audit).steps[5](Export deps from Poetry)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"name": "Install pip-audit", "run": "python -m pip install --upgrade pip pip-audit", "__startline__": 104, "__endline__": 107}}, "code_block": [[104, "      - name: Install pip-audit\n"], [105, "        run: python -m pip install --upgrade pip pip-audit\n"], [106, "\n"], [107, "      - name: Run pip-audit (produce SARIF, capture exit code)\n"], [108, "        id: pipaudit\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [104, 108], "resource": "jobs(pip-audit).steps[6](Install pip-audit)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"name": "Run pip-audit (produce SARIF, capture exit code)", "id": "pipaudit", "run": "set +e\npip-audit -r requirements.txt --format sarif --output pip-audit.sarif --progress-spinner off\necho \"exit_code=$?\" >> $GITHUB_OUTPUT\n# Always succeed so we can upload SARIF\nexit 0\n", "__startline__": 107, "__endline__": 116}}, "code_block": [[107, "      - name: Run pip-audit (produce SARIF, capture exit code)\n"], [108, "        id: pipaudit\n"], [109, "        run: |\n"], [110, "          set +e\n"], [111, "          pip-audit -r requirements.txt --format sarif --output pip-audit.sarif --progress-spinner off\n"], [112, "          echo \"exit_code=$?\" >> $GITHUB_OUTPUT\n"], [113, "          # Always succeed so we can upload SARIF\n"], [114, "          exit 0\n"], [115, "\n"], [116, "      - name: Upload pip-audit SARIF to Code Scanning\n"], [117, "        uses: github/codeql-action/upload-sarif@v3\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [107, 117], "resource": "jobs(pip-audit).steps[7](Run pip-audit (produce SARIF, capture exit code))", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"name": "Upload pip-audit SARIF to Code Scanning", "uses": "github/codeql-action/upload-sarif@v3", "with": {"sarif_file": "pip-audit.sarif", "__startline__": 119, "__endline__": 122}, "__startline__": 116, "__endline__": 122}}, "code_block": [[116, "      - name: Upload pip-audit SARIF to Code Scanning\n"], [117, "        uses: github/codeql-action/upload-sarif@v3\n"], [118, "        with:\n"], [119, "          sarif_file: pip-audit.sarif\n"], [120, "\n"], [121, "      # Re-fail the job if vulnerabilities were found\n"], [122, "      - name: Fail if pip-audit had findings\n"], [123, "        if: ${{ steps.pipaudit.outputs.exit_code != '0' }}\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [116, 123], "resource": "jobs(pip-audit).steps[8](Upload pip-audit SARIF to Code Scanning)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"name": "Fail if pip-audit had findings", "if": "${{ steps.pipaudit.outputs.exit_code != '0' }}", "run": "echo \"pip-audit found vulnerabilities.\"\nexit 1\n", "__startline__": 122, "__endline__": 129}}, "code_block": [[122, "      - name: Fail if pip-audit had findings\n"], [123, "        if: ${{ steps.pipaudit.outputs.exit_code != '0' }}\n"], [124, "        run: |\n"], [125, "          echo \"pip-audit found vulnerabilities.\"\n"], [126, "          exit 1\n"], [127, "\n"], [128, "  # === Bandit (security lint) ===\n"], [129, "  bandit:\n"], [130, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [122, 130], "resource": "jobs(pip-audit).steps[9](Fail if pip-audit had findings)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/checkout@v4", "__startline__": 132, "__endline__": 133}}, "code_block": [[132, "      - uses: actions/checkout@v4\n"], [133, "      - uses: actions/setup-python@v5\n"], [134, "        with:\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [132, 134], "resource": "jobs(bandit).steps[1]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["bandit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 135, "__endline__": 136}, "__startline__": 133, "__endline__": 136}}, "code_block": [[133, "      - uses: actions/setup-python@v5\n"], [134, "        with:\n"], [135, "          python-version: '3.12'\n"], [136, "      - name: Install Bandit\n"], [137, "        run: python -m pip install --upgrade pip bandit\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [133, 137], "resource": "jobs(bandit).steps[2]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["bandit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"name": "Install Bandit", "run": "python -m pip install --upgrade pip bandit", "__startline__": 136, "__endline__": 138}}, "code_block": [[136, "      - name: Install Bandit\n"], [137, "        run: python -m pip install --upgrade pip bandit\n"], [138, "      - name: Run Bandit (JSON report)\n"], [139, "        run: >\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [136, 139], "resource": "jobs(bandit).steps[3](Install Bandit)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["bandit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"name": "Run Bandit (JSON report)", "run": "bandit -r ./apps -x ./apps/chatbot/tests,./apps/cwe_ingestion/tests,./apps/pdf_worker/tests,./apps/tests,./apps/cwe_ingestion/build/lib/tests,./apps/cwe_ingestion/scripts -f json -o bandit_report_no_tests.json -iii -l\n", "__startline__": 138, "__endline__": 143}}, "code_block": [[138, "      - name: Run Bandit (JSON report)\n"], [139, "        run: >\n"], [140, "          bandit -r ./apps\n"], [141, "          -x ./apps/chatbot/tests,./apps/cwe_ingestion/tests,./apps/pdf_worker/tests,./apps/tests,./apps/cwe_ingestion/build/lib/tests,./apps/cwe_ingestion/scripts\n"], [142, "          -f json -o bandit_report_no_tests.json -iii -l\n"], [143, "      - name: Upload Bandit report\n"], [144, "        uses: actions/upload-artifact@v4\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [138, 144], "resource": "jobs(bandit).steps[4](Run Bandit (JSON report))", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["bandit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"name": "Upload Bandit report", "uses": "actions/upload-artifact@v4", "with": {"name": "bandit_report_no_tests.json", "path": "bandit_report_no_tests.json", "__startline__": 146, "__endline__": 149}, "__startline__": 143, "__endline__": 149}}, "code_block": [[143, "      - name: Upload Bandit report\n"], [144, "        uses: actions/upload-artifact@v4\n"], [145, "        with:\n"], [146, "          name: bandit_report_no_tests.json\n"], [147, "          path: bandit_report_no_tests.json\n"], [148, "      # Optional: fail the job if Bandit found issues (parses JSON count>0)\n"], [149, "      - name: Fail if Bandit found issues\n"], [150, "        run: |\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [143, 150], "resource": "jobs(bandit).steps[5](Upload Bandit report)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["bandit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"name": "Fail if Bandit found issues", "run": "python - <<'PY'\nimport json, sys\nwith open(\"bandit_report_no_tests.json\") as f:\n    data = json.load(f)\nissues = data.get(\"results\", [])\nif issues:\n    print(f\"Bandit found {len(issues)} issue(s).\")\n    sys.exit(1)\nprint(\"Bandit found no issues.\")\nPY\n", "__startline__": 149, "__endline__": 163}}, "code_block": [[149, "      - name: Fail if Bandit found issues\n"], [150, "        run: |\n"], [151, "          python - <<'PY'\n"], [152, "          import json, sys\n"], [153, "          with open(\"bandit_report_no_tests.json\") as f:\n"], [154, "              data = json.load(f)\n"], [155, "          issues = data.get(\"results\", [])\n"], [156, "          if issues:\n"], [157, "              print(f\"Bandit found {len(issues)} issue(s).\")\n"], [158, "              sys.exit(1)\n"], [159, "          print(\"Bandit found no issues.\")\n"], [160, "          PY\n"], [161, "\n"], [162, "  # === Vulture (dead code finder) ===\n"], [163, "  vulture:\n"], [164, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [149, 164], "resource": "jobs(bandit).steps[6](Fail if Bandit found issues)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["bandit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/checkout@v4", "__startline__": 166, "__endline__": 167}}, "code_block": [[166, "      - uses: actions/checkout@v4\n"], [167, "      - uses: actions/setup-python@v5\n"], [168, "        with:\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [166, 168], "resource": "jobs(vulture).steps[1]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["vulture"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 169, "__endline__": 170}, "__startline__": 167, "__endline__": 170}}, "code_block": [[167, "      - uses: actions/setup-python@v5\n"], [168, "        with:\n"], [169, "          python-version: '3.12'\n"], [170, "      - name: Install Vulture\n"], [171, "        run: python -m pip install --upgrade pip vulture\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [167, 171], "resource": "jobs(vulture).steps[2]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["vulture"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"name": "Install Vulture", "run": "python -m pip install --upgrade pip vulture", "__startline__": 170, "__endline__": 172}}, "code_block": [[170, "      - name: Install Vulture\n"], [171, "        run: python -m pip install --upgrade pip vulture\n"], [172, "      - name: Run Vulture\n"], [173, "        run: |\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [170, 173], "resource": "jobs(vulture).steps[3](Install Vulture)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["vulture"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"name": "Run Vulture", "run": "set +e\nvulture --sort-by-size --min-confidence 70 ./ > vulture.txt\nexit 0\n", "__startline__": 172, "__endline__": 177}}, "code_block": [[172, "      - name: Run Vulture\n"], [173, "        run: |\n"], [174, "          set +e\n"], [175, "          vulture --sort-by-size --min-confidence 70 ./ > vulture.txt\n"], [176, "          exit 0\n"], [177, "      - name: Upload Vulture output\n"], [178, "        uses: actions/upload-artifact@v4\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [172, 178], "resource": "jobs(vulture).steps[4](Run Vulture)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["vulture"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"name": "Upload Vulture output", "uses": "actions/upload-artifact@v4", "with": {"name": "vulture.txt", "path": "vulture.txt", "__startline__": 180, "__endline__": 183}, "__startline__": 177, "__endline__": 183}}, "code_block": [[177, "      - name: Upload Vulture output\n"], [178, "        uses: actions/upload-artifact@v4\n"], [179, "        with:\n"], [180, "          name: vulture.txt\n"], [181, "          path: vulture.txt\n"], [182, "      # Optional: fail if Vulture reported potential dead code\n"], [183, "      - name: Fail if Vulture found dead code\n"], [184, "        run: |\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [177, 184], "resource": "jobs(vulture).steps[5](Upload Vulture output)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["vulture"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"name": "Fail if Vulture found dead code", "run": "if grep -E \":[0-9]+:\" -q vulture.txt; then\n  echo \"::error::Vulture found potential dead code. See vulture.txt artifact.\"\n  exit 1\nelse\n  echo \"Vulture found no reportable dead code.\"\nfi\n", "__startline__": 183, "__endline__": 193}}, "code_block": [[183, "      - name: Fail if Vulture found dead code\n"], [184, "        run: |\n"], [185, "          if grep -E \":[0-9]+:\" -q vulture.txt; then\n"], [186, "            echo \"::error::Vulture found potential dead code. See vulture.txt artifact.\"\n"], [187, "            exit 1\n"], [188, "          else\n"], [189, "            echo \"Vulture found no reportable dead code.\"\n"], [190, "          fi\n"], [191, "\n"], [192, "  # === Checkov (Dockerfiles, GitHub Actions YAML, K8s/Helm) -> SARIF ===\n"], [193, "  checkov:\n"], [194, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [183, 194], "resource": "jobs(vulture).steps[6](Fail if Vulture found dead code)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["vulture"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/checkout@v4", "__startline__": 196, "__endline__": 199}}, "code_block": [[196, "      - uses: actions/checkout@v4\n"], [197, "\n"], [198, "      # Use the official Checkov action\n"], [199, "      - name: Run Checkov\n"], [200, "        id: checkov\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [196, 200], "resource": "jobs(checkov).steps[1]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["checkov"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"name": "Run Checkov", "id": "checkov", "uses": "bridgecrewio/checkov-action@v12", "with": {"directory": ".", "framework": "dockerfile,github_actions,kubernetes,helm", "skip_path": ".git\n.venv\nvenv\nnode_modules\n**/tests/**\n", "output_format": "sarif,json", "output_file_path": "checkov.sarif::checkov.json", "soft_fail": true, "quiet": true, "__startline__": 204, "__endline__": 221}, "__startline__": 199, "__endline__": 221}}, "code_block": [[199, "      - name: Run Checkov\n"], [200, "        id: checkov\n"], [201, "        uses: bridgecrewio/checkov-action@v12\n"], [202, "        with:\n"], [203, "          # Scan the whole repo\n"], [204, "          directory: .\n"], [205, "          # Focus on Dockerfiles and YAML-based configs\n"], [206, "          framework: dockerfile,github_actions,kubernetes,helm\n"], [207, "          # Exclude common noise; tweak as you like\n"], [208, "          skip_path: |\n"], [209, "            .git\n"], [210, "            .venv\n"], [211, "            venv\n"], [212, "            node_modules\n"], [213, "            **/tests/**\n"], [214, "          # Produce both SARIF (for Code Scanning) and JSON (for artifacts & gating)\n"], [215, "          output_format: sarif,json\n"], [216, "          output_file_path: checkov.sarif::checkov.json\n"], [217, "          # Always succeed so SARIF uploads even if findings exist\n"], [218, "          soft_fail: true\n"], [219, "          quiet: true\n"], [220, "\n"], [221, "      - name: Upload Checkov SARIF to Code Scanning\n"], [222, "        uses: github/codeql-action/upload-sarif@v3\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [199, 222], "resource": "jobs(checkov).steps[2](Run Checkov)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["checkov"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"name": "Upload Checkov SARIF to Code Scanning", "uses": "github/codeql-action/upload-sarif@v3", "with": {"sarif_file": "checkov.sarif", "__startline__": 224, "__endline__": 226}, "__startline__": 221, "__endline__": 226}}, "code_block": [[221, "      - name: Upload Checkov SARIF to Code Scanning\n"], [222, "        uses: github/codeql-action/upload-sarif@v3\n"], [223, "        with:\n"], [224, "          sarif_file: checkov.sarif\n"], [225, "\n"], [226, "      - name: Upload Checkov JSON report\n"], [227, "        uses: actions/upload-artifact@v4\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [221, 227], "resource": "jobs(checkov).steps[3](Upload Checkov SARIF to Code Scanning)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["checkov"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"name": "Upload Checkov JSON report", "uses": "actions/upload-artifact@v4", "with": {"name": "checkov.json", "path": "checkov.json", "__startline__": 229, "__endline__": 233}, "__startline__": 226, "__endline__": 233}}, "code_block": [[226, "      - name: Upload Checkov JSON report\n"], [227, "        uses: actions/upload-artifact@v4\n"], [228, "        with:\n"], [229, "          name: checkov.json\n"], [230, "          path: checkov.json\n"], [231, "\n"], [232, "      # Optional: fail CI if Checkov found failed checks\n"], [233, "      - name: Fail if Checkov had findings\n"], [234, "        run: |\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [226, 234], "resource": "jobs(checkov).steps[4](Upload Checkov JSON report)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["checkov"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"name": "Fail if Checkov had findings", "run": "python - <<'PY'\nimport json, sys\nwith open(\"checkov.json\") as f:\n    data = json.load(f)\n# Checkov JSON may be a list (multiple reports) or a dict (single)\nreports = data if isinstance(data, list) else [data]\nfailed = 0\nfor r in reports:\n    summ = r.get(\"summary\") or {}\n    failed += int(summ.get(\"failed\", 0))\nif failed > 0:\n    print(f\"Checkov found {failed} failed check(s). See SARIF or checkov.json.\")\n    sys.exit(1)\nprint(\"Checkov found no failed checks.\")\nPY", "__startline__": 233, "__endline__": 249}}, "code_block": [[233, "      - name: Fail if Checkov had findings\n"], [234, "        run: |\n"], [235, "          python - <<'PY'\n"], [236, "          import json, sys\n"], [237, "          with open(\"checkov.json\") as f:\n"], [238, "              data = json.load(f)\n"], [239, "          # Checkov JSON may be a list (multiple reports) or a dict (single)\n"], [240, "          reports = data if isinstance(data, list) else [data]\n"], [241, "          failed = 0\n"], [242, "          for r in reports:\n"], [243, "              summ = r.get(\"summary\") or {}\n"], [244, "              failed += int(summ.get(\"failed\", 0))\n"], [245, "          if failed > 0:\n"], [246, "              print(f\"Checkov found {failed} failed check(s). See SARIF or checkov.json.\")\n"], [247, "              sys.exit(1)\n"], [248, "          print(\"Checkov found no failed checks.\")\n"], [249, "          PY"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [233, 250], "resource": "jobs(checkov).steps[5](Fail if Checkov had findings)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["checkov"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/checkout@v4", "__startline__": 17, "__endline__": 18}}, "code_block": [[17, "      - uses: actions/checkout@v4\n"], [18, "      - uses: actions/setup-python@v5\n"], [19, "        with:\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [17, 19], "resource": "jobs(lint-type-test).steps[1]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/setup-python@v5", "with": {"python-version": "${{ matrix.python }}", "__startline__": 20, "__endline__": 22}, "__startline__": 18, "__endline__": 22}}, "code_block": [[18, "      - uses: actions/setup-python@v5\n"], [19, "        with:\n"], [20, "          python-version: ${{ matrix.python }}\n"], [21, "\n"], [22, "      - name: Install Poetry\n"], [23, "        run: curl -sSL https://install.python-poetry.org | python3 -\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [18, 23], "resource": "jobs(lint-type-test).steps[2]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"name": "Install Poetry", "run": "curl -sSL https://install.python-poetry.org | python3 -", "__startline__": 22, "__endline__": 25}}, "code_block": [[22, "      - name: Install Poetry\n"], [23, "        run: curl -sSL https://install.python-poetry.org | python3 -\n"], [24, "\n"], [25, "      - name: Ensure Poetry on PATH\n"], [26, "        run: echo \"$HOME/.local/bin\" >> $GITHUB_PATH\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [22, 26], "resource": "jobs(lint-type-test).steps[3](Install Poetry)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"name": "Ensure Poetry on PATH", "run": "echo \"$HOME/.local/bin\" >> $GITHUB_PATH", "__startline__": 25, "__endline__": 28}}, "code_block": [[25, "      - name: Ensure Poetry on PATH\n"], [26, "        run: echo \"$HOME/.local/bin\" >> $GITHUB_PATH\n"], [27, "\n"], [28, "      - name: Cache Poetry\n"], [29, "        uses: actions/cache@v4\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [25, 29], "resource": "jobs(lint-type-test).steps[4](Ensure Poetry on PATH)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"name": "Cache Poetry", "uses": "actions/cache@v4", "with": {"path": "~/.cache/pypoetry", "key": "poetry-${{ hashFiles('**/poetry.lock') }}", "__startline__": 31, "__endline__": 34}, "__startline__": 28, "__endline__": 34}}, "code_block": [[28, "      - name: Cache Poetry\n"], [29, "        uses: actions/cache@v4\n"], [30, "        with:\n"], [31, "          path: ~/.cache/pypoetry\n"], [32, "          key: poetry-${{ hashFiles('**/poetry.lock') }}\n"], [33, "\n"], [34, "      - name: Install deps\n"], [35, "        run: poetry install --no-interaction --no-root\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [28, 35], "resource": "jobs(lint-type-test).steps[5](Cache Poetry)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"name": "Install deps", "run": "poetry install --no-interaction --no-root", "__startline__": 34, "__endline__": 37}}, "code_block": [[34, "      - name: Install deps\n"], [35, "        run: poetry install --no-interaction --no-root\n"], [36, "\n"], [37, "      - name: Pre-commit (format, lint, mypy)\n"], [38, "        run: |\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [34, 38], "resource": "jobs(lint-type-test).steps[6](Install deps)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"name": "Pre-commit (format, lint, mypy)", "run": "python -m pip install --upgrade pip pipx\npipx install pre-commit\npre-commit run --all-files\n", "__startline__": 37, "__endline__": 43}}, "code_block": [[37, "      - name: Pre-commit (format, lint, mypy)\n"], [38, "        run: |\n"], [39, "          python -m pip install --upgrade pip pipx\n"], [40, "          pipx install pre-commit\n"], [41, "          pre-commit run --all-files\n"], [42, "\n"], [43, "      - name: Tests + coverage\n"], [44, "        run: poetry run pytest --cov --cov-report=xml\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [37, 44], "resource": "jobs(lint-type-test).steps[7](Pre-commit (format, lint, mypy))", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"name": "Tests + coverage", "run": "poetry run pytest --cov --cov-report=xml", "__startline__": 43, "__endline__": 46}}, "code_block": [[43, "      - name: Tests + coverage\n"], [44, "        run: poetry run pytest --cov --cov-report=xml\n"], [45, "\n"], [46, "      - name: Coverage gate\n"], [47, "        uses: orgoro/coverage@v3\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [43, 47], "resource": "jobs(lint-type-test).steps[8](Tests + coverage)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"name": "Coverage gate", "uses": "orgoro/coverage@v3", "with": {"coverageFile": "./coverage.xml", "failCiIfError": true, "minCoverage": 85, "__startline__": 49, "__endline__": 53}, "__startline__": 46, "__endline__": 53}}, "code_block": [[46, "      - name: Coverage gate\n"], [47, "        uses: orgoro/coverage@v3\n"], [48, "        with:\n"], [49, "          coverageFile: ./coverage.xml\n"], [50, "          failCiIfError: true\n"], [51, "          minCoverage: 85\n"], [52, "\n"], [53, "  pyright:\n"], [54, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [46, 54], "resource": "jobs(lint-type-test).steps[9](Coverage gate)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/checkout@v4", "__startline__": 56, "__endline__": 57}}, "code_block": [[56, "      - uses: actions/checkout@v4\n"], [57, "      - uses: actions/setup-python@v5\n"], [58, "        with:\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [56, 58], "resource": "jobs(pyright).steps[1]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pyright"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 59, "__endline__": 60}, "__startline__": 57, "__endline__": 60}}, "code_block": [[57, "      - uses: actions/setup-python@v5\n"], [58, "        with:\n"], [59, "          python-version: '3.12'\n"], [60, "      - run: python -m pip install --upgrade pip pipx\n"], [61, "      - run: pipx install pyright\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [57, 61], "resource": "jobs(pyright).steps[2]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pyright"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"run": "python -m pip install --upgrade pip pipx", "__startline__": 60, "__endline__": 61}}, "code_block": [[60, "      - run: python -m pip install --upgrade pip pipx\n"], [61, "      - run: pipx install pyright\n"], [62, "      - run: pyright\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [60, 62], "resource": "jobs(pyright).steps[3]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pyright"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"run": "pipx install pyright", "__startline__": 61, "__endline__": 62}}, "code_block": [[61, "      - run: pipx install pyright\n"], [62, "      - run: pyright\n"], [63, "\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [61, 63], "resource": "jobs(pyright).steps[4]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pyright"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"run": "pyright", "__startline__": 62, "__endline__": 65}}, "code_block": [[62, "      - run: pyright\n"], [63, "\n"], [64, "  # === Semgrep -> SARIF -> Code scanning ===\n"], [65, "  semgrep:\n"], [66, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [62, 66], "resource": "jobs(pyright).steps[5]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pyright"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/checkout@v4", "__startline__": 68, "__endline__": 69}}, "code_block": [[68, "      - uses: actions/checkout@v4\n"], [69, "      - name: Run Semgrep (generate SARIF, keep going)\n"], [70, "        id: semgrep\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [68, 70], "resource": "jobs(semgrep).steps[1]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["semgrep"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"name": "Run Semgrep (generate SARIF, keep going)", "id": "semgrep", "continue-on-error": true, "uses": "returntocorp/semgrep-action@v1", "with": {"config": "p/python\np/security-audit\n", "generateSarif": "1", "__startline__": 74, "__endline__": 79}, "__startline__": 69, "__endline__": 79}}, "code_block": [[69, "      - name: Run Semgrep (generate SARIF, keep going)\n"], [70, "        id: semgrep\n"], [71, "        continue-on-error: true  # ensure upload happens even with findings\n"], [72, "        uses: returntocorp/semgrep-action@v1\n"], [73, "        with:\n"], [74, "          config: |\n"], [75, "            p/python\n"], [76, "            p/security-audit\n"], [77, "          generateSarif: \"1\"     # writes semgrep.sarif in repo root\n"], [78, "\n"], [79, "      - name: Upload Semgrep SARIF to Code Scanning\n"], [80, "        uses: github/codeql-action/upload-sarif@v3\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [69, 80], "resource": "jobs(semgrep).steps[2](Run Semgrep (generate SARIF, keep going))", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["semgrep"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"name": "Upload Semgrep SARIF to Code Scanning", "uses": "github/codeql-action/upload-sarif@v3", "with": {"sarif_file": "semgrep.sarif", "__startline__": 82, "__endline__": 87}, "__startline__": 79, "__endline__": 87}}, "code_block": [[79, "      - name: Upload Semgrep SARIF to Code Scanning\n"], [80, "        uses: github/codeql-action/upload-sarif@v3\n"], [81, "        with:\n"], [82, "          sarif_file: semgrep.sarif\n"], [83, "      # Optionally fail the job if Semgrep found results (kept soft by default)\n"], [84, "      # - run: exit ${{ steps.semgrep.outputs.exit_code || 0 }}\n"], [85, "\n"], [86, "  # === pip-audit -> SARIF -> Code scanning ===\n"], [87, "  pip-audit:\n"], [88, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [79, 88], "resource": "jobs(semgrep).steps[3](Upload Semgrep SARIF to Code Scanning)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["semgrep"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/checkout@v4", "__startline__": 90, "__endline__": 91}}, "code_block": [[90, "      - uses: actions/checkout@v4\n"], [91, "      - uses: actions/setup-python@v5\n"], [92, "        with:\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [90, 92], "resource": "jobs(pip-audit).steps[1]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 93, "__endline__": 95}, "__startline__": 91, "__endline__": 95}}, "code_block": [[91, "      - uses: actions/setup-python@v5\n"], [92, "        with:\n"], [93, "          python-version: '3.12'\n"], [94, "\n"], [95, "      - name: Install Poetry\n"], [96, "        run: curl -sSL https://install.python-poetry.org | python3 -\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [91, 96], "resource": "jobs(pip-audit).steps[2]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"name": "Install Poetry", "run": "curl -sSL https://install.python-poetry.org | python3 -", "__startline__": 95, "__endline__": 98}}, "code_block": [[95, "      - name: Install Poetry\n"], [96, "        run: curl -sSL https://install.python-poetry.org | python3 -\n"], [97, "\n"], [98, "      - name: Ensure Poetry on PATH\n"], [99, "        run: echo \"$HOME/.local/bin\" >> $GITHUB_PATH\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [95, 99], "resource": "jobs(pip-audit).steps[3](Install Poetry)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"name": "Ensure Poetry on PATH", "run": "echo \"$HOME/.local/bin\" >> $GITHUB_PATH", "__startline__": 98, "__endline__": 101}}, "code_block": [[98, "      - name: Ensure Poetry on PATH\n"], [99, "        run: echo \"$HOME/.local/bin\" >> $GITHUB_PATH\n"], [100, "\n"], [101, "      - name: Export deps from Poetry\n"], [102, "        run: poetry export -f requirements.txt --without-hashes -o requirements.txt\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [98, 102], "resource": "jobs(pip-audit).steps[4](Ensure Poetry on PATH)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"name": "Export deps from Poetry", "run": "poetry export -f requirements.txt --without-hashes -o requirements.txt", "__startline__": 101, "__endline__": 104}}, "code_block": [[101, "      - name: Export deps from Poetry\n"], [102, "        run: poetry export -f requirements.txt --without-hashes -o requirements.txt\n"], [103, "\n"], [104, "      - name: Install pip-audit\n"], [105, "        run: python -m pip install --upgrade pip pip-audit\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [101, 105], "resource": "jobs(pip-audit).steps[5](Export deps from Poetry)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"name": "Install pip-audit", "run": "python -m pip install --upgrade pip pip-audit", "__startline__": 104, "__endline__": 107}}, "code_block": [[104, "      - name: Install pip-audit\n"], [105, "        run: python -m pip install --upgrade pip pip-audit\n"], [106, "\n"], [107, "      - name: Run pip-audit (produce SARIF, capture exit code)\n"], [108, "        id: pipaudit\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [104, 108], "resource": "jobs(pip-audit).steps[6](Install pip-audit)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"name": "Run pip-audit (produce SARIF, capture exit code)", "id": "pipaudit", "run": "set +e\npip-audit -r requirements.txt --format sarif --output pip-audit.sarif --progress-spinner off\necho \"exit_code=$?\" >> $GITHUB_OUTPUT\n# Always succeed so we can upload SARIF\nexit 0\n", "__startline__": 107, "__endline__": 116}}, "code_block": [[107, "      - name: Run pip-audit (produce SARIF, capture exit code)\n"], [108, "        id: pipaudit\n"], [109, "        run: |\n"], [110, "          set +e\n"], [111, "          pip-audit -r requirements.txt --format sarif --output pip-audit.sarif --progress-spinner off\n"], [112, "          echo \"exit_code=$?\" >> $GITHUB_OUTPUT\n"], [113, "          # Always succeed so we can upload SARIF\n"], [114, "          exit 0\n"], [115, "\n"], [116, "      - name: Upload pip-audit SARIF to Code Scanning\n"], [117, "        uses: github/codeql-action/upload-sarif@v3\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [107, 117], "resource": "jobs(pip-audit).steps[7](Run pip-audit (produce SARIF, capture exit code))", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"name": "Upload pip-audit SARIF to Code Scanning", "uses": "github/codeql-action/upload-sarif@v3", "with": {"sarif_file": "pip-audit.sarif", "__startline__": 119, "__endline__": 122}, "__startline__": 116, "__endline__": 122}}, "code_block": [[116, "      - name: Upload pip-audit SARIF to Code Scanning\n"], [117, "        uses: github/codeql-action/upload-sarif@v3\n"], [118, "        with:\n"], [119, "          sarif_file: pip-audit.sarif\n"], [120, "\n"], [121, "      # Re-fail the job if vulnerabilities were found\n"], [122, "      - name: Fail if pip-audit had findings\n"], [123, "        if: ${{ steps.pipaudit.outputs.exit_code != '0' }}\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [116, 123], "resource": "jobs(pip-audit).steps[8](Upload pip-audit SARIF to Code Scanning)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"name": "Fail if pip-audit had findings", "if": "${{ steps.pipaudit.outputs.exit_code != '0' }}", "run": "echo \"pip-audit found vulnerabilities.\"\nexit 1\n", "__startline__": 122, "__endline__": 129}}, "code_block": [[122, "      - name: Fail if pip-audit had findings\n"], [123, "        if: ${{ steps.pipaudit.outputs.exit_code != '0' }}\n"], [124, "        run: |\n"], [125, "          echo \"pip-audit found vulnerabilities.\"\n"], [126, "          exit 1\n"], [127, "\n"], [128, "  # === Bandit (security lint) ===\n"], [129, "  bandit:\n"], [130, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [122, 130], "resource": "jobs(pip-audit).steps[9](Fail if pip-audit had findings)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/checkout@v4", "__startline__": 132, "__endline__": 133}}, "code_block": [[132, "      - uses: actions/checkout@v4\n"], [133, "      - uses: actions/setup-python@v5\n"], [134, "        with:\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [132, 134], "resource": "jobs(bandit).steps[1]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["bandit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 135, "__endline__": 136}, "__startline__": 133, "__endline__": 136}}, "code_block": [[133, "      - uses: actions/setup-python@v5\n"], [134, "        with:\n"], [135, "          python-version: '3.12'\n"], [136, "      - name: Install Bandit\n"], [137, "        run: python -m pip install --upgrade pip bandit\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [133, 137], "resource": "jobs(bandit).steps[2]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["bandit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"name": "Install Bandit", "run": "python -m pip install --upgrade pip bandit", "__startline__": 136, "__endline__": 138}}, "code_block": [[136, "      - name: Install Bandit\n"], [137, "        run: python -m pip install --upgrade pip bandit\n"], [138, "      - name: Run Bandit (JSON report)\n"], [139, "        run: >\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [136, 139], "resource": "jobs(bandit).steps[3](Install Bandit)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["bandit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"name": "Run Bandit (JSON report)", "run": "bandit -r ./apps -x ./apps/chatbot/tests,./apps/cwe_ingestion/tests,./apps/pdf_worker/tests,./apps/tests,./apps/cwe_ingestion/build/lib/tests,./apps/cwe_ingestion/scripts -f json -o bandit_report_no_tests.json -iii -l\n", "__startline__": 138, "__endline__": 143}}, "code_block": [[138, "      - name: Run Bandit (JSON report)\n"], [139, "        run: >\n"], [140, "          bandit -r ./apps\n"], [141, "          -x ./apps/chatbot/tests,./apps/cwe_ingestion/tests,./apps/pdf_worker/tests,./apps/tests,./apps/cwe_ingestion/build/lib/tests,./apps/cwe_ingestion/scripts\n"], [142, "          -f json -o bandit_report_no_tests.json -iii -l\n"], [143, "      - name: Upload Bandit report\n"], [144, "        uses: actions/upload-artifact@v4\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [138, 144], "resource": "jobs(bandit).steps[4](Run Bandit (JSON report))", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["bandit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"name": "Upload Bandit report", "uses": "actions/upload-artifact@v4", "with": {"name": "bandit_report_no_tests.json", "path": "bandit_report_no_tests.json", "__startline__": 146, "__endline__": 149}, "__startline__": 143, "__endline__": 149}}, "code_block": [[143, "      - name: Upload Bandit report\n"], [144, "        uses: actions/upload-artifact@v4\n"], [145, "        with:\n"], [146, "          name: bandit_report_no_tests.json\n"], [147, "          path: bandit_report_no_tests.json\n"], [148, "      # Optional: fail the job if Bandit found issues (parses JSON count>0)\n"], [149, "      - name: Fail if Bandit found issues\n"], [150, "        run: |\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [143, 150], "resource": "jobs(bandit).steps[5](Upload Bandit report)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["bandit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"name": "Fail if Bandit found issues", "run": "python - <<'PY'\nimport json, sys\nwith open(\"bandit_report_no_tests.json\") as f:\n    data = json.load(f)\nissues = data.get(\"results\", [])\nif issues:\n    print(f\"Bandit found {len(issues)} issue(s).\")\n    sys.exit(1)\nprint(\"Bandit found no issues.\")\nPY\n", "__startline__": 149, "__endline__": 163}}, "code_block": [[149, "      - name: Fail if Bandit found issues\n"], [150, "        run: |\n"], [151, "          python - <<'PY'\n"], [152, "          import json, sys\n"], [153, "          with open(\"bandit_report_no_tests.json\") as f:\n"], [154, "              data = json.load(f)\n"], [155, "          issues = data.get(\"results\", [])\n"], [156, "          if issues:\n"], [157, "              print(f\"Bandit found {len(issues)} issue(s).\")\n"], [158, "              sys.exit(1)\n"], [159, "          print(\"Bandit found no issues.\")\n"], [160, "          PY\n"], [161, "\n"], [162, "  # === Vulture (dead code finder) ===\n"], [163, "  vulture:\n"], [164, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [149, 164], "resource": "jobs(bandit).steps[6](Fail if Bandit found issues)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["bandit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/checkout@v4", "__startline__": 166, "__endline__": 167}}, "code_block": [[166, "      - uses: actions/checkout@v4\n"], [167, "      - uses: actions/setup-python@v5\n"], [168, "        with:\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [166, 168], "resource": "jobs(vulture).steps[1]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["vulture"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 169, "__endline__": 170}, "__startline__": 167, "__endline__": 170}}, "code_block": [[167, "      - uses: actions/setup-python@v5\n"], [168, "        with:\n"], [169, "          python-version: '3.12'\n"], [170, "      - name: Install Vulture\n"], [171, "        run: python -m pip install --upgrade pip vulture\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [167, 171], "resource": "jobs(vulture).steps[2]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["vulture"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"name": "Install Vulture", "run": "python -m pip install --upgrade pip vulture", "__startline__": 170, "__endline__": 172}}, "code_block": [[170, "      - name: Install Vulture\n"], [171, "        run: python -m pip install --upgrade pip vulture\n"], [172, "      - name: Run Vulture\n"], [173, "        run: |\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [170, 173], "resource": "jobs(vulture).steps[3](Install Vulture)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["vulture"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"name": "Run Vulture", "run": "set +e\nvulture --sort-by-size --min-confidence 70 ./ > vulture.txt\nexit 0\n", "__startline__": 172, "__endline__": 177}}, "code_block": [[172, "      - name: Run Vulture\n"], [173, "        run: |\n"], [174, "          set +e\n"], [175, "          vulture --sort-by-size --min-confidence 70 ./ > vulture.txt\n"], [176, "          exit 0\n"], [177, "      - name: Upload Vulture output\n"], [178, "        uses: actions/upload-artifact@v4\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [172, 178], "resource": "jobs(vulture).steps[4](Run Vulture)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["vulture"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"name": "Upload Vulture output", "uses": "actions/upload-artifact@v4", "with": {"name": "vulture.txt", "path": "vulture.txt", "__startline__": 180, "__endline__": 183}, "__startline__": 177, "__endline__": 183}}, "code_block": [[177, "      - name: Upload Vulture output\n"], [178, "        uses: actions/upload-artifact@v4\n"], [179, "        with:\n"], [180, "          name: vulture.txt\n"], [181, "          path: vulture.txt\n"], [182, "      # Optional: fail if Vulture reported potential dead code\n"], [183, "      - name: Fail if Vulture found dead code\n"], [184, "        run: |\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [177, 184], "resource": "jobs(vulture).steps[5](Upload Vulture output)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["vulture"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"name": "Fail if Vulture found dead code", "run": "if grep -E \":[0-9]+:\" -q vulture.txt; then\n  echo \"::error::Vulture found potential dead code. See vulture.txt artifact.\"\n  exit 1\nelse\n  echo \"Vulture found no reportable dead code.\"\nfi\n", "__startline__": 183, "__endline__": 193}}, "code_block": [[183, "      - name: Fail if Vulture found dead code\n"], [184, "        run: |\n"], [185, "          if grep -E \":[0-9]+:\" -q vulture.txt; then\n"], [186, "            echo \"::error::Vulture found potential dead code. See vulture.txt artifact.\"\n"], [187, "            exit 1\n"], [188, "          else\n"], [189, "            echo \"Vulture found no reportable dead code.\"\n"], [190, "          fi\n"], [191, "\n"], [192, "  # === Checkov (Dockerfiles, GitHub Actions YAML, K8s/Helm) -> SARIF ===\n"], [193, "  checkov:\n"], [194, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [183, 194], "resource": "jobs(vulture).steps[6](Fail if Vulture found dead code)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["vulture"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/checkout@v4", "__startline__": 196, "__endline__": 199}}, "code_block": [[196, "      - uses: actions/checkout@v4\n"], [197, "\n"], [198, "      # Use the official Checkov action\n"], [199, "      - name: Run Checkov\n"], [200, "        id: checkov\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [196, 200], "resource": "jobs(checkov).steps[1]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["checkov"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"name": "Run Checkov", "id": "checkov", "uses": "bridgecrewio/checkov-action@v12", "with": {"directory": ".", "framework": "dockerfile,github_actions,kubernetes,helm", "skip_path": ".git\n.venv\nvenv\nnode_modules\n**/tests/**\n", "output_format": "sarif,json", "output_file_path": "checkov.sarif::checkov.json", "soft_fail": true, "quiet": true, "__startline__": 204, "__endline__": 221}, "__startline__": 199, "__endline__": 221}}, "code_block": [[199, "      - name: Run Checkov\n"], [200, "        id: checkov\n"], [201, "        uses: bridgecrewio/checkov-action@v12\n"], [202, "        with:\n"], [203, "          # Scan the whole repo\n"], [204, "          directory: .\n"], [205, "          # Focus on Dockerfiles and YAML-based configs\n"], [206, "          framework: dockerfile,github_actions,kubernetes,helm\n"], [207, "          # Exclude common noise; tweak as you like\n"], [208, "          skip_path: |\n"], [209, "            .git\n"], [210, "            .venv\n"], [211, "            venv\n"], [212, "            node_modules\n"], [213, "            **/tests/**\n"], [214, "          # Produce both SARIF (for Code Scanning) and JSON (for artifacts & gating)\n"], [215, "          output_format: sarif,json\n"], [216, "          output_file_path: checkov.sarif::checkov.json\n"], [217, "          # Always succeed so SARIF uploads even if findings exist\n"], [218, "          soft_fail: true\n"], [219, "          quiet: true\n"], [220, "\n"], [221, "      - name: Upload Checkov SARIF to Code Scanning\n"], [222, "        uses: github/codeql-action/upload-sarif@v3\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [199, 222], "resource": "jobs(checkov).steps[2](Run Checkov)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["checkov"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"name": "Upload Checkov SARIF to Code Scanning", "uses": "github/codeql-action/upload-sarif@v3", "with": {"sarif_file": "checkov.sarif", "__startline__": 224, "__endline__": 226}, "__startline__": 221, "__endline__": 226}}, "code_block": [[221, "      - name: Upload Checkov SARIF to Code Scanning\n"], [222, "        uses: github/codeql-action/upload-sarif@v3\n"], [223, "        with:\n"], [224, "          sarif_file: checkov.sarif\n"], [225, "\n"], [226, "      - name: Upload Checkov JSON report\n"], [227, "        uses: actions/upload-artifact@v4\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [221, 227], "resource": "jobs(checkov).steps[3](Upload Checkov SARIF to Code Scanning)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["checkov"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"name": "Upload Checkov JSON report", "uses": "actions/upload-artifact@v4", "with": {"name": "checkov.json", "path": "checkov.json", "__startline__": 229, "__endline__": 233}, "__startline__": 226, "__endline__": 233}}, "code_block": [[226, "      - name: Upload Checkov JSON report\n"], [227, "        uses: actions/upload-artifact@v4\n"], [228, "        with:\n"], [229, "          name: checkov.json\n"], [230, "          path: checkov.json\n"], [231, "\n"], [232, "      # Optional: fail CI if Checkov found failed checks\n"], [233, "      - name: Fail if Checkov had findings\n"], [234, "        run: |\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [226, 234], "resource": "jobs(checkov).steps[4](Upload Checkov JSON report)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["checkov"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"name": "Fail if Checkov had findings", "run": "python - <<'PY'\nimport json, sys\nwith open(\"checkov.json\") as f:\n    data = json.load(f)\n# Checkov JSON may be a list (multiple reports) or a dict (single)\nreports = data if isinstance(data, list) else [data]\nfailed = 0\nfor r in reports:\n    summ = r.get(\"summary\") or {}\n    failed += int(summ.get(\"failed\", 0))\nif failed > 0:\n    print(f\"Checkov found {failed} failed check(s). See SARIF or checkov.json.\")\n    sys.exit(1)\nprint(\"Checkov found no failed checks.\")\nPY", "__startline__": 233, "__endline__": 249}}, "code_block": [[233, "      - name: Fail if Checkov had findings\n"], [234, "        run: |\n"], [235, "          python - <<'PY'\n"], [236, "          import json, sys\n"], [237, "          with open(\"checkov.json\") as f:\n"], [238, "              data = json.load(f)\n"], [239, "          # Checkov JSON may be a list (multiple reports) or a dict (single)\n"], [240, "          reports = data if isinstance(data, list) else [data]\n"], [241, "          failed = 0\n"], [242, "          for r in reports:\n"], [243, "              summ = r.get(\"summary\") or {}\n"], [244, "              failed += int(summ.get(\"failed\", 0))\n"], [245, "          if failed > 0:\n"], [246, "              print(f\"Checkov found {failed} failed check(s). See SARIF or checkov.json.\")\n"], [247, "              sys.exit(1)\n"], [248, "          print(\"Checkov found no failed checks.\")\n"], [249, "          PY"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [233, 250], "resource": "jobs(checkov).steps[5](Fail if Checkov had findings)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["checkov"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/checkout@v4", "__startline__": 17, "__endline__": 18}}, "code_block": [[17, "      - uses: actions/checkout@v4\n"], [18, "      - uses: actions/setup-python@v5\n"], [19, "        with:\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [17, 19], "resource": "jobs(lint-type-test).steps[1]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/setup-python@v5", "with": {"python-version": "${{ matrix.python }}", "__startline__": 20, "__endline__": 22}, "__startline__": 18, "__endline__": 22}}, "code_block": [[18, "      - uses: actions/setup-python@v5\n"], [19, "        with:\n"], [20, "          python-version: ${{ matrix.python }}\n"], [21, "\n"], [22, "      - name: Install Poetry\n"], [23, "        run: curl -sSL https://install.python-poetry.org | python3 -\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [18, 23], "resource": "jobs(lint-type-test).steps[2]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"name": "Install Poetry", "run": "curl -sSL https://install.python-poetry.org | python3 -", "__startline__": 22, "__endline__": 25}}, "code_block": [[22, "      - name: Install Poetry\n"], [23, "        run: curl -sSL https://install.python-poetry.org | python3 -\n"], [24, "\n"], [25, "      - name: Ensure Poetry on PATH\n"], [26, "        run: echo \"$HOME/.local/bin\" >> $GITHUB_PATH\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [22, 26], "resource": "jobs(lint-type-test).steps[3](Install Poetry)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"name": "Ensure Poetry on PATH", "run": "echo \"$HOME/.local/bin\" >> $GITHUB_PATH", "__startline__": 25, "__endline__": 28}}, "code_block": [[25, "      - name: Ensure Poetry on PATH\n"], [26, "        run: echo \"$HOME/.local/bin\" >> $GITHUB_PATH\n"], [27, "\n"], [28, "      - name: Cache Poetry\n"], [29, "        uses: actions/cache@v4\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [25, 29], "resource": "jobs(lint-type-test).steps[4](Ensure Poetry on PATH)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"name": "Cache Poetry", "uses": "actions/cache@v4", "with": {"path": "~/.cache/pypoetry", "key": "poetry-${{ hashFiles('**/poetry.lock') }}", "__startline__": 31, "__endline__": 34}, "__startline__": 28, "__endline__": 34}}, "code_block": [[28, "      - name: Cache Poetry\n"], [29, "        uses: actions/cache@v4\n"], [30, "        with:\n"], [31, "          path: ~/.cache/pypoetry\n"], [32, "          key: poetry-${{ hashFiles('**/poetry.lock') }}\n"], [33, "\n"], [34, "      - name: Install deps\n"], [35, "        run: poetry install --no-interaction --no-root\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [28, 35], "resource": "jobs(lint-type-test).steps[5](Cache Poetry)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"name": "Install deps", "run": "poetry install --no-interaction --no-root", "__startline__": 34, "__endline__": 37}}, "code_block": [[34, "      - name: Install deps\n"], [35, "        run: poetry install --no-interaction --no-root\n"], [36, "\n"], [37, "      - name: Pre-commit (format, lint, mypy)\n"], [38, "        run: |\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [34, 38], "resource": "jobs(lint-type-test).steps[6](Install deps)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"name": "Pre-commit (format, lint, mypy)", "run": "python -m pip install --upgrade pip pipx\npipx install pre-commit\npre-commit run --all-files\n", "__startline__": 37, "__endline__": 43}}, "code_block": [[37, "      - name: Pre-commit (format, lint, mypy)\n"], [38, "        run: |\n"], [39, "          python -m pip install --upgrade pip pipx\n"], [40, "          pipx install pre-commit\n"], [41, "          pre-commit run --all-files\n"], [42, "\n"], [43, "      - name: Tests + coverage\n"], [44, "        run: poetry run pytest --cov --cov-report=xml\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [37, 44], "resource": "jobs(lint-type-test).steps[7](Pre-commit (format, lint, mypy))", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"name": "Tests + coverage", "run": "poetry run pytest --cov --cov-report=xml", "__startline__": 43, "__endline__": 46}}, "code_block": [[43, "      - name: Tests + coverage\n"], [44, "        run: poetry run pytest --cov --cov-report=xml\n"], [45, "\n"], [46, "      - name: Coverage gate\n"], [47, "        uses: orgoro/coverage@v3\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [43, 47], "resource": "jobs(lint-type-test).steps[8](Tests + coverage)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"name": "Coverage gate", "uses": "orgoro/coverage@v3", "with": {"coverageFile": "./coverage.xml", "failCiIfError": true, "minCoverage": 85, "__startline__": 49, "__endline__": 53}, "__startline__": 46, "__endline__": 53}}, "code_block": [[46, "      - name: Coverage gate\n"], [47, "        uses: orgoro/coverage@v3\n"], [48, "        with:\n"], [49, "          coverageFile: ./coverage.xml\n"], [50, "          failCiIfError: true\n"], [51, "          minCoverage: 85\n"], [52, "\n"], [53, "  pyright:\n"], [54, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [46, 54], "resource": "jobs(lint-type-test).steps[9](Coverage gate)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/checkout@v4", "__startline__": 56, "__endline__": 57}}, "code_block": [[56, "      - uses: actions/checkout@v4\n"], [57, "      - uses: actions/setup-python@v5\n"], [58, "        with:\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [56, 58], "resource": "jobs(pyright).steps[1]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pyright"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 59, "__endline__": 60}, "__startline__": 57, "__endline__": 60}}, "code_block": [[57, "      - uses: actions/setup-python@v5\n"], [58, "        with:\n"], [59, "          python-version: '3.12'\n"], [60, "      - run: python -m pip install --upgrade pip pipx\n"], [61, "      - run: pipx install pyright\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [57, 61], "resource": "jobs(pyright).steps[2]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pyright"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"run": "python -m pip install --upgrade pip pipx", "__startline__": 60, "__endline__": 61}}, "code_block": [[60, "      - run: python -m pip install --upgrade pip pipx\n"], [61, "      - run: pipx install pyright\n"], [62, "      - run: pyright\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [60, 62], "resource": "jobs(pyright).steps[3]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pyright"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"run": "pipx install pyright", "__startline__": 61, "__endline__": 62}}, "code_block": [[61, "      - run: pipx install pyright\n"], [62, "      - run: pyright\n"], [63, "\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [61, 63], "resource": "jobs(pyright).steps[4]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pyright"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"run": "pyright", "__startline__": 62, "__endline__": 65}}, "code_block": [[62, "      - run: pyright\n"], [63, "\n"], [64, "  # === Semgrep -> SARIF -> Code scanning ===\n"], [65, "  semgrep:\n"], [66, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [62, 66], "resource": "jobs(pyright).steps[5]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pyright"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/checkout@v4", "__startline__": 68, "__endline__": 69}}, "code_block": [[68, "      - uses: actions/checkout@v4\n"], [69, "      - name: Run Semgrep (generate SARIF, keep going)\n"], [70, "        id: semgrep\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [68, 70], "resource": "jobs(semgrep).steps[1]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["semgrep"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"name": "Run Semgrep (generate SARIF, keep going)", "id": "semgrep", "continue-on-error": true, "uses": "returntocorp/semgrep-action@v1", "with": {"config": "p/python\np/security-audit\n", "generateSarif": "1", "__startline__": 74, "__endline__": 79}, "__startline__": 69, "__endline__": 79}}, "code_block": [[69, "      - name: Run Semgrep (generate SARIF, keep going)\n"], [70, "        id: semgrep\n"], [71, "        continue-on-error: true  # ensure upload happens even with findings\n"], [72, "        uses: returntocorp/semgrep-action@v1\n"], [73, "        with:\n"], [74, "          config: |\n"], [75, "            p/python\n"], [76, "            p/security-audit\n"], [77, "          generateSarif: \"1\"     # writes semgrep.sarif in repo root\n"], [78, "\n"], [79, "      - name: Upload Semgrep SARIF to Code Scanning\n"], [80, "        uses: github/codeql-action/upload-sarif@v3\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [69, 80], "resource": "jobs(semgrep).steps[2](Run Semgrep (generate SARIF, keep going))", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["semgrep"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"name": "Upload Semgrep SARIF to Code Scanning", "uses": "github/codeql-action/upload-sarif@v3", "with": {"sarif_file": "semgrep.sarif", "__startline__": 82, "__endline__": 87}, "__startline__": 79, "__endline__": 87}}, "code_block": [[79, "      - name: Upload Semgrep SARIF to Code Scanning\n"], [80, "        uses: github/codeql-action/upload-sarif@v3\n"], [81, "        with:\n"], [82, "          sarif_file: semgrep.sarif\n"], [83, "      # Optionally fail the job if Semgrep found results (kept soft by default)\n"], [84, "      # - run: exit ${{ steps.semgrep.outputs.exit_code || 0 }}\n"], [85, "\n"], [86, "  # === pip-audit -> SARIF -> Code scanning ===\n"], [87, "  pip-audit:\n"], [88, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [79, 88], "resource": "jobs(semgrep).steps[3](Upload Semgrep SARIF to Code Scanning)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["semgrep"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/checkout@v4", "__startline__": 90, "__endline__": 91}}, "code_block": [[90, "      - uses: actions/checkout@v4\n"], [91, "      - uses: actions/setup-python@v5\n"], [92, "        with:\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [90, 92], "resource": "jobs(pip-audit).steps[1]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 93, "__endline__": 95}, "__startline__": 91, "__endline__": 95}}, "code_block": [[91, "      - uses: actions/setup-python@v5\n"], [92, "        with:\n"], [93, "          python-version: '3.12'\n"], [94, "\n"], [95, "      - name: Install Poetry\n"], [96, "        run: curl -sSL https://install.python-poetry.org | python3 -\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [91, 96], "resource": "jobs(pip-audit).steps[2]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"name": "Install Poetry", "run": "curl -sSL https://install.python-poetry.org | python3 -", "__startline__": 95, "__endline__": 98}}, "code_block": [[95, "      - name: Install Poetry\n"], [96, "        run: curl -sSL https://install.python-poetry.org | python3 -\n"], [97, "\n"], [98, "      - name: Ensure Poetry on PATH\n"], [99, "        run: echo \"$HOME/.local/bin\" >> $GITHUB_PATH\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [95, 99], "resource": "jobs(pip-audit).steps[3](Install Poetry)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"name": "Ensure Poetry on PATH", "run": "echo \"$HOME/.local/bin\" >> $GITHUB_PATH", "__startline__": 98, "__endline__": 101}}, "code_block": [[98, "      - name: Ensure Poetry on PATH\n"], [99, "        run: echo \"$HOME/.local/bin\" >> $GITHUB_PATH\n"], [100, "\n"], [101, "      - name: Export deps from Poetry\n"], [102, "        run: poetry export -f requirements.txt --without-hashes -o requirements.txt\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [98, 102], "resource": "jobs(pip-audit).steps[4](Ensure Poetry on PATH)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"name": "Export deps from Poetry", "run": "poetry export -f requirements.txt --without-hashes -o requirements.txt", "__startline__": 101, "__endline__": 104}}, "code_block": [[101, "      - name: Export deps from Poetry\n"], [102, "        run: poetry export -f requirements.txt --without-hashes -o requirements.txt\n"], [103, "\n"], [104, "      - name: Install pip-audit\n"], [105, "        run: python -m pip install --upgrade pip pip-audit\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [101, 105], "resource": "jobs(pip-audit).steps[5](Export deps from Poetry)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"name": "Install pip-audit", "run": "python -m pip install --upgrade pip pip-audit", "__startline__": 104, "__endline__": 107}}, "code_block": [[104, "      - name: Install pip-audit\n"], [105, "        run: python -m pip install --upgrade pip pip-audit\n"], [106, "\n"], [107, "      - name: Run pip-audit (produce SARIF, capture exit code)\n"], [108, "        id: pipaudit\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [104, 108], "resource": "jobs(pip-audit).steps[6](Install pip-audit)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"name": "Run pip-audit (produce SARIF, capture exit code)", "id": "pipaudit", "run": "set +e\npip-audit -r requirements.txt --format sarif --output pip-audit.sarif --progress-spinner off\necho \"exit_code=$?\" >> $GITHUB_OUTPUT\n# Always succeed so we can upload SARIF\nexit 0\n", "__startline__": 107, "__endline__": 116}}, "code_block": [[107, "      - name: Run pip-audit (produce SARIF, capture exit code)\n"], [108, "        id: pipaudit\n"], [109, "        run: |\n"], [110, "          set +e\n"], [111, "          pip-audit -r requirements.txt --format sarif --output pip-audit.sarif --progress-spinner off\n"], [112, "          echo \"exit_code=$?\" >> $GITHUB_OUTPUT\n"], [113, "          # Always succeed so we can upload SARIF\n"], [114, "          exit 0\n"], [115, "\n"], [116, "      - name: Upload pip-audit SARIF to Code Scanning\n"], [117, "        uses: github/codeql-action/upload-sarif@v3\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [107, 117], "resource": "jobs(pip-audit).steps[7](Run pip-audit (produce SARIF, capture exit code))", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"name": "Upload pip-audit SARIF to Code Scanning", "uses": "github/codeql-action/upload-sarif@v3", "with": {"sarif_file": "pip-audit.sarif", "__startline__": 119, "__endline__": 122}, "__startline__": 116, "__endline__": 122}}, "code_block": [[116, "      - name: Upload pip-audit SARIF to Code Scanning\n"], [117, "        uses: github/codeql-action/upload-sarif@v3\n"], [118, "        with:\n"], [119, "          sarif_file: pip-audit.sarif\n"], [120, "\n"], [121, "      # Re-fail the job if vulnerabilities were found\n"], [122, "      - name: Fail if pip-audit had findings\n"], [123, "        if: ${{ steps.pipaudit.outputs.exit_code != '0' }}\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [116, 123], "resource": "jobs(pip-audit).steps[8](Upload pip-audit SARIF to Code Scanning)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"name": "Fail if pip-audit had findings", "if": "${{ steps.pipaudit.outputs.exit_code != '0' }}", "run": "echo \"pip-audit found vulnerabilities.\"\nexit 1\n", "__startline__": 122, "__endline__": 129}}, "code_block": [[122, "      - name: Fail if pip-audit had findings\n"], [123, "        if: ${{ steps.pipaudit.outputs.exit_code != '0' }}\n"], [124, "        run: |\n"], [125, "          echo \"pip-audit found vulnerabilities.\"\n"], [126, "          exit 1\n"], [127, "\n"], [128, "  # === Bandit (security lint) ===\n"], [129, "  bandit:\n"], [130, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [122, 130], "resource": "jobs(pip-audit).steps[9](Fail if pip-audit had findings)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/checkout@v4", "__startline__": 132, "__endline__": 133}}, "code_block": [[132, "      - uses: actions/checkout@v4\n"], [133, "      - uses: actions/setup-python@v5\n"], [134, "        with:\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [132, 134], "resource": "jobs(bandit).steps[1]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["bandit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 135, "__endline__": 136}, "__startline__": 133, "__endline__": 136}}, "code_block": [[133, "      - uses: actions/setup-python@v5\n"], [134, "        with:\n"], [135, "          python-version: '3.12'\n"], [136, "      - name: Install Bandit\n"], [137, "        run: python -m pip install --upgrade pip bandit\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [133, 137], "resource": "jobs(bandit).steps[2]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["bandit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"name": "Install Bandit", "run": "python -m pip install --upgrade pip bandit", "__startline__": 136, "__endline__": 138}}, "code_block": [[136, "      - name: Install Bandit\n"], [137, "        run: python -m pip install --upgrade pip bandit\n"], [138, "      - name: Run Bandit (JSON report)\n"], [139, "        run: >\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [136, 139], "resource": "jobs(bandit).steps[3](Install Bandit)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["bandit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"name": "Run Bandit (JSON report)", "run": "bandit -r ./apps -x ./apps/chatbot/tests,./apps/cwe_ingestion/tests,./apps/pdf_worker/tests,./apps/tests,./apps/cwe_ingestion/build/lib/tests,./apps/cwe_ingestion/scripts -f json -o bandit_report_no_tests.json -iii -l\n", "__startline__": 138, "__endline__": 143}}, "code_block": [[138, "      - name: Run Bandit (JSON report)\n"], [139, "        run: >\n"], [140, "          bandit -r ./apps\n"], [141, "          -x ./apps/chatbot/tests,./apps/cwe_ingestion/tests,./apps/pdf_worker/tests,./apps/tests,./apps/cwe_ingestion/build/lib/tests,./apps/cwe_ingestion/scripts\n"], [142, "          -f json -o bandit_report_no_tests.json -iii -l\n"], [143, "      - name: Upload Bandit report\n"], [144, "        uses: actions/upload-artifact@v4\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [138, 144], "resource": "jobs(bandit).steps[4](Run Bandit (JSON report))", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["bandit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"name": "Upload Bandit report", "uses": "actions/upload-artifact@v4", "with": {"name": "bandit_report_no_tests.json", "path": "bandit_report_no_tests.json", "__startline__": 146, "__endline__": 149}, "__startline__": 143, "__endline__": 149}}, "code_block": [[143, "      - name: Upload Bandit report\n"], [144, "        uses: actions/upload-artifact@v4\n"], [145, "        with:\n"], [146, "          name: bandit_report_no_tests.json\n"], [147, "          path: bandit_report_no_tests.json\n"], [148, "      # Optional: fail the job if Bandit found issues (parses JSON count>0)\n"], [149, "      - name: Fail if Bandit found issues\n"], [150, "        run: |\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [143, 150], "resource": "jobs(bandit).steps[5](Upload Bandit report)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["bandit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"name": "Fail if Bandit found issues", "run": "python - <<'PY'\nimport json, sys\nwith open(\"bandit_report_no_tests.json\") as f:\n    data = json.load(f)\nissues = data.get(\"results\", [])\nif issues:\n    print(f\"Bandit found {len(issues)} issue(s).\")\n    sys.exit(1)\nprint(\"Bandit found no issues.\")\nPY\n", "__startline__": 149, "__endline__": 163}}, "code_block": [[149, "      - name: Fail if Bandit found issues\n"], [150, "        run: |\n"], [151, "          python - <<'PY'\n"], [152, "          import json, sys\n"], [153, "          with open(\"bandit_report_no_tests.json\") as f:\n"], [154, "              data = json.load(f)\n"], [155, "          issues = data.get(\"results\", [])\n"], [156, "          if issues:\n"], [157, "              print(f\"Bandit found {len(issues)} issue(s).\")\n"], [158, "              sys.exit(1)\n"], [159, "          print(\"Bandit found no issues.\")\n"], [160, "          PY\n"], [161, "\n"], [162, "  # === Vulture (dead code finder) ===\n"], [163, "  vulture:\n"], [164, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [149, 164], "resource": "jobs(bandit).steps[6](Fail if Bandit found issues)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["bandit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/checkout@v4", "__startline__": 166, "__endline__": 167}}, "code_block": [[166, "      - uses: actions/checkout@v4\n"], [167, "      - uses: actions/setup-python@v5\n"], [168, "        with:\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [166, 168], "resource": "jobs(vulture).steps[1]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["vulture"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 169, "__endline__": 170}, "__startline__": 167, "__endline__": 170}}, "code_block": [[167, "      - uses: actions/setup-python@v5\n"], [168, "        with:\n"], [169, "          python-version: '3.12'\n"], [170, "      - name: Install Vulture\n"], [171, "        run: python -m pip install --upgrade pip vulture\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [167, 171], "resource": "jobs(vulture).steps[2]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["vulture"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"name": "Install Vulture", "run": "python -m pip install --upgrade pip vulture", "__startline__": 170, "__endline__": 172}}, "code_block": [[170, "      - name: Install Vulture\n"], [171, "        run: python -m pip install --upgrade pip vulture\n"], [172, "      - name: Run Vulture\n"], [173, "        run: |\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [170, 173], "resource": "jobs(vulture).steps[3](Install Vulture)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["vulture"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"name": "Run Vulture", "run": "set +e\nvulture --sort-by-size --min-confidence 70 ./ > vulture.txt\nexit 0\n", "__startline__": 172, "__endline__": 177}}, "code_block": [[172, "      - name: Run Vulture\n"], [173, "        run: |\n"], [174, "          set +e\n"], [175, "          vulture --sort-by-size --min-confidence 70 ./ > vulture.txt\n"], [176, "          exit 0\n"], [177, "      - name: Upload Vulture output\n"], [178, "        uses: actions/upload-artifact@v4\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [172, 178], "resource": "jobs(vulture).steps[4](Run Vulture)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["vulture"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"name": "Upload Vulture output", "uses": "actions/upload-artifact@v4", "with": {"name": "vulture.txt", "path": "vulture.txt", "__startline__": 180, "__endline__": 183}, "__startline__": 177, "__endline__": 183}}, "code_block": [[177, "      - name: Upload Vulture output\n"], [178, "        uses: actions/upload-artifact@v4\n"], [179, "        with:\n"], [180, "          name: vulture.txt\n"], [181, "          path: vulture.txt\n"], [182, "      # Optional: fail if Vulture reported potential dead code\n"], [183, "      - name: Fail if Vulture found dead code\n"], [184, "        run: |\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [177, 184], "resource": "jobs(vulture).steps[5](Upload Vulture output)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["vulture"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"name": "Fail if Vulture found dead code", "run": "if grep -E \":[0-9]+:\" -q vulture.txt; then\n  echo \"::error::Vulture found potential dead code. See vulture.txt artifact.\"\n  exit 1\nelse\n  echo \"Vulture found no reportable dead code.\"\nfi\n", "__startline__": 183, "__endline__": 193}}, "code_block": [[183, "      - name: Fail if Vulture found dead code\n"], [184, "        run: |\n"], [185, "          if grep -E \":[0-9]+:\" -q vulture.txt; then\n"], [186, "            echo \"::error::Vulture found potential dead code. See vulture.txt artifact.\"\n"], [187, "            exit 1\n"], [188, "          else\n"], [189, "            echo \"Vulture found no reportable dead code.\"\n"], [190, "          fi\n"], [191, "\n"], [192, "  # === Checkov (Dockerfiles, GitHub Actions YAML, K8s/Helm) -> SARIF ===\n"], [193, "  checkov:\n"], [194, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [183, 194], "resource": "jobs(vulture).steps[6](Fail if Vulture found dead code)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["vulture"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/checkout@v4", "__startline__": 196, "__endline__": 199}}, "code_block": [[196, "      - uses: actions/checkout@v4\n"], [197, "\n"], [198, "      # Use the official Checkov action\n"], [199, "      - name: Run Checkov\n"], [200, "        id: checkov\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [196, 200], "resource": "jobs(checkov).steps[1]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["checkov"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"name": "Run Checkov", "id": "checkov", "uses": "bridgecrewio/checkov-action@v12", "with": {"directory": ".", "framework": "dockerfile,github_actions,kubernetes,helm", "skip_path": ".git\n.venv\nvenv\nnode_modules\n**/tests/**\n", "output_format": "sarif,json", "output_file_path": "checkov.sarif::checkov.json", "soft_fail": true, "quiet": true, "__startline__": 204, "__endline__": 221}, "__startline__": 199, "__endline__": 221}}, "code_block": [[199, "      - name: Run Checkov\n"], [200, "        id: checkov\n"], [201, "        uses: bridgecrewio/checkov-action@v12\n"], [202, "        with:\n"], [203, "          # Scan the whole repo\n"], [204, "          directory: .\n"], [205, "          # Focus on Dockerfiles and YAML-based configs\n"], [206, "          framework: dockerfile,github_actions,kubernetes,helm\n"], [207, "          # Exclude common noise; tweak as you like\n"], [208, "          skip_path: |\n"], [209, "            .git\n"], [210, "            .venv\n"], [211, "            venv\n"], [212, "            node_modules\n"], [213, "            **/tests/**\n"], [214, "          # Produce both SARIF (for Code Scanning) and JSON (for artifacts & gating)\n"], [215, "          output_format: sarif,json\n"], [216, "          output_file_path: checkov.sarif::checkov.json\n"], [217, "          # Always succeed so SARIF uploads even if findings exist\n"], [218, "          soft_fail: true\n"], [219, "          quiet: true\n"], [220, "\n"], [221, "      - name: Upload Checkov SARIF to Code Scanning\n"], [222, "        uses: github/codeql-action/upload-sarif@v3\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [199, 222], "resource": "jobs(checkov).steps[2](Run Checkov)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["checkov"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"name": "Upload Checkov SARIF to Code Scanning", "uses": "github/codeql-action/upload-sarif@v3", "with": {"sarif_file": "checkov.sarif", "__startline__": 224, "__endline__": 226}, "__startline__": 221, "__endline__": 226}}, "code_block": [[221, "      - name: Upload Checkov SARIF to Code Scanning\n"], [222, "        uses: github/codeql-action/upload-sarif@v3\n"], [223, "        with:\n"], [224, "          sarif_file: checkov.sarif\n"], [225, "\n"], [226, "      - name: Upload Checkov JSON report\n"], [227, "        uses: actions/upload-artifact@v4\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [221, 227], "resource": "jobs(checkov).steps[3](Upload Checkov SARIF to Code Scanning)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["checkov"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"name": "Upload Checkov JSON report", "uses": "actions/upload-artifact@v4", "with": {"name": "checkov.json", "path": "checkov.json", "__startline__": 229, "__endline__": 233}, "__startline__": 226, "__endline__": 233}}, "code_block": [[226, "      - name: Upload Checkov JSON report\n"], [227, "        uses: actions/upload-artifact@v4\n"], [228, "        with:\n"], [229, "          name: checkov.json\n"], [230, "          path: checkov.json\n"], [231, "\n"], [232, "      # Optional: fail CI if Checkov found failed checks\n"], [233, "      - name: Fail if Checkov had findings\n"], [234, "        run: |\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [226, 234], "resource": "jobs(checkov).steps[4](Upload Checkov JSON report)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["checkov"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"name": "Fail if Checkov had findings", "run": "python - <<'PY'\nimport json, sys\nwith open(\"checkov.json\") as f:\n    data = json.load(f)\n# Checkov JSON may be a list (multiple reports) or a dict (single)\nreports = data if isinstance(data, list) else [data]\nfailed = 0\nfor r in reports:\n    summ = r.get(\"summary\") or {}\n    failed += int(summ.get(\"failed\", 0))\nif failed > 0:\n    print(f\"Checkov found {failed} failed check(s). See SARIF or checkov.json.\")\n    sys.exit(1)\nprint(\"Checkov found no failed checks.\")\nPY", "__startline__": 233, "__endline__": 249}}, "code_block": [[233, "      - name: Fail if Checkov had findings\n"], [234, "        run: |\n"], [235, "          python - <<'PY'\n"], [236, "          import json, sys\n"], [237, "          with open(\"checkov.json\") as f:\n"], [238, "              data = json.load(f)\n"], [239, "          # Checkov JSON may be a list (multiple reports) or a dict (single)\n"], [240, "          reports = data if isinstance(data, list) else [data]\n"], [241, "          failed = 0\n"], [242, "          for r in reports:\n"], [243, "              summ = r.get(\"summary\") or {}\n"], [244, "              failed += int(summ.get(\"failed\", 0))\n"], [245, "          if failed > 0:\n"], [246, "              print(f\"Checkov found {failed} failed check(s). See SARIF or checkov.json.\")\n"], [247, "              sys.exit(1)\n"], [248, "          print(\"Checkov found no failed checks.\")\n"], [249, "          PY"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [233, 250], "resource": "jobs(checkov).steps[5](Fail if Checkov had findings)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["checkov"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/checkout@v4", "__startline__": 17, "__endline__": 18}}, "code_block": [[17, "      - uses: actions/checkout@v4\n"], [18, "      - uses: actions/setup-python@v5\n"], [19, "        with:\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [17, 19], "resource": "jobs(lint-type-test).steps[1]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/setup-python@v5", "with": {"python-version": "${{ matrix.python }}", "__startline__": 20, "__endline__": 22}, "__startline__": 18, "__endline__": 22}}, "code_block": [[18, "      - uses: actions/setup-python@v5\n"], [19, "        with:\n"], [20, "          python-version: ${{ matrix.python }}\n"], [21, "\n"], [22, "      - name: Install Poetry\n"], [23, "        run: curl -sSL https://install.python-poetry.org | python3 -\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [18, 23], "resource": "jobs(lint-type-test).steps[2]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"name": "Install Poetry", "run": "curl -sSL https://install.python-poetry.org | python3 -", "__startline__": 22, "__endline__": 25}}, "code_block": [[22, "      - name: Install Poetry\n"], [23, "        run: curl -sSL https://install.python-poetry.org | python3 -\n"], [24, "\n"], [25, "      - name: Ensure Poetry on PATH\n"], [26, "        run: echo \"$HOME/.local/bin\" >> $GITHUB_PATH\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [22, 26], "resource": "jobs(lint-type-test).steps[3](Install Poetry)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"name": "Ensure Poetry on PATH", "run": "echo \"$HOME/.local/bin\" >> $GITHUB_PATH", "__startline__": 25, "__endline__": 28}}, "code_block": [[25, "      - name: Ensure Poetry on PATH\n"], [26, "        run: echo \"$HOME/.local/bin\" >> $GITHUB_PATH\n"], [27, "\n"], [28, "      - name: Cache Poetry\n"], [29, "        uses: actions/cache@v4\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [25, 29], "resource": "jobs(lint-type-test).steps[4](Ensure Poetry on PATH)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"name": "Cache Poetry", "uses": "actions/cache@v4", "with": {"path": "~/.cache/pypoetry", "key": "poetry-${{ hashFiles('**/poetry.lock') }}", "__startline__": 31, "__endline__": 34}, "__startline__": 28, "__endline__": 34}}, "code_block": [[28, "      - name: Cache Poetry\n"], [29, "        uses: actions/cache@v4\n"], [30, "        with:\n"], [31, "          path: ~/.cache/pypoetry\n"], [32, "          key: poetry-${{ hashFiles('**/poetry.lock') }}\n"], [33, "\n"], [34, "      - name: Install deps\n"], [35, "        run: poetry install --no-interaction --no-root\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [28, 35], "resource": "jobs(lint-type-test).steps[5](Cache Poetry)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"name": "Install deps", "run": "poetry install --no-interaction --no-root", "__startline__": 34, "__endline__": 37}}, "code_block": [[34, "      - name: Install deps\n"], [35, "        run: poetry install --no-interaction --no-root\n"], [36, "\n"], [37, "      - name: Pre-commit (format, lint, mypy)\n"], [38, "        run: |\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [34, 38], "resource": "jobs(lint-type-test).steps[6](Install deps)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"name": "Pre-commit (format, lint, mypy)", "run": "python -m pip install --upgrade pip pipx\npipx install pre-commit\npre-commit run --all-files\n", "__startline__": 37, "__endline__": 43}}, "code_block": [[37, "      - name: Pre-commit (format, lint, mypy)\n"], [38, "        run: |\n"], [39, "          python -m pip install --upgrade pip pipx\n"], [40, "          pipx install pre-commit\n"], [41, "          pre-commit run --all-files\n"], [42, "\n"], [43, "      - name: Tests + coverage\n"], [44, "        run: poetry run pytest --cov --cov-report=xml\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [37, 44], "resource": "jobs(lint-type-test).steps[7](Pre-commit (format, lint, mypy))", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"name": "Tests + coverage", "run": "poetry run pytest --cov --cov-report=xml", "__startline__": 43, "__endline__": 46}}, "code_block": [[43, "      - name: Tests + coverage\n"], [44, "        run: poetry run pytest --cov --cov-report=xml\n"], [45, "\n"], [46, "      - name: Coverage gate\n"], [47, "        uses: orgoro/coverage@v3\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [43, 47], "resource": "jobs(lint-type-test).steps[8](Tests + coverage)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"name": "Coverage gate", "uses": "orgoro/coverage@v3", "with": {"coverageFile": "./coverage.xml", "failCiIfError": true, "minCoverage": 85, "__startline__": 49, "__endline__": 53}, "__startline__": 46, "__endline__": 53}}, "code_block": [[46, "      - name: Coverage gate\n"], [47, "        uses: orgoro/coverage@v3\n"], [48, "        with:\n"], [49, "          coverageFile: ./coverage.xml\n"], [50, "          failCiIfError: true\n"], [51, "          minCoverage: 85\n"], [52, "\n"], [53, "  pyright:\n"], [54, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [46, 54], "resource": "jobs(lint-type-test).steps[9](Coverage gate)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["lint-type-test"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/checkout@v4", "__startline__": 56, "__endline__": 57}}, "code_block": [[56, "      - uses: actions/checkout@v4\n"], [57, "      - uses: actions/setup-python@v5\n"], [58, "        with:\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [56, 58], "resource": "jobs(pyright).steps[1]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pyright"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 59, "__endline__": 60}, "__startline__": 57, "__endline__": 60}}, "code_block": [[57, "      - uses: actions/setup-python@v5\n"], [58, "        with:\n"], [59, "          python-version: '3.12'\n"], [60, "      - run: python -m pip install --upgrade pip pipx\n"], [61, "      - run: pipx install pyright\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [57, 61], "resource": "jobs(pyright).steps[2]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pyright"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"run": "python -m pip install --upgrade pip pipx", "__startline__": 60, "__endline__": 61}}, "code_block": [[60, "      - run: python -m pip install --upgrade pip pipx\n"], [61, "      - run: pipx install pyright\n"], [62, "      - run: pyright\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [60, 62], "resource": "jobs(pyright).steps[3]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pyright"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"run": "pipx install pyright", "__startline__": 61, "__endline__": 62}}, "code_block": [[61, "      - run: pipx install pyright\n"], [62, "      - run: pyright\n"], [63, "\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [61, 63], "resource": "jobs(pyright).steps[4]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pyright"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"run": "pyright", "__startline__": 62, "__endline__": 65}}, "code_block": [[62, "      - run: pyright\n"], [63, "\n"], [64, "  # === Semgrep -> SARIF -> Code scanning ===\n"], [65, "  semgrep:\n"], [66, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [62, 66], "resource": "jobs(pyright).steps[5]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pyright"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/checkout@v4", "__startline__": 68, "__endline__": 69}}, "code_block": [[68, "      - uses: actions/checkout@v4\n"], [69, "      - name: Run Semgrep (generate SARIF, keep going)\n"], [70, "        id: semgrep\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [68, 70], "resource": "jobs(semgrep).steps[1]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["semgrep"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"name": "Run Semgrep (generate SARIF, keep going)", "id": "semgrep", "continue-on-error": true, "uses": "returntocorp/semgrep-action@v1", "with": {"config": "p/python\np/security-audit\n", "generateSarif": "1", "__startline__": 74, "__endline__": 79}, "__startline__": 69, "__endline__": 79}}, "code_block": [[69, "      - name: Run Semgrep (generate SARIF, keep going)\n"], [70, "        id: semgrep\n"], [71, "        continue-on-error: true  # ensure upload happens even with findings\n"], [72, "        uses: returntocorp/semgrep-action@v1\n"], [73, "        with:\n"], [74, "          config: |\n"], [75, "            p/python\n"], [76, "            p/security-audit\n"], [77, "          generateSarif: \"1\"     # writes semgrep.sarif in repo root\n"], [78, "\n"], [79, "      - name: Upload Semgrep SARIF to Code Scanning\n"], [80, "        uses: github/codeql-action/upload-sarif@v3\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [69, 80], "resource": "jobs(semgrep).steps[2](Run Semgrep (generate SARIF, keep going))", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["semgrep"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"name": "Upload Semgrep SARIF to Code Scanning", "uses": "github/codeql-action/upload-sarif@v3", "with": {"sarif_file": "semgrep.sarif", "__startline__": 82, "__endline__": 87}, "__startline__": 79, "__endline__": 87}}, "code_block": [[79, "      - name: Upload Semgrep SARIF to Code Scanning\n"], [80, "        uses: github/codeql-action/upload-sarif@v3\n"], [81, "        with:\n"], [82, "          sarif_file: semgrep.sarif\n"], [83, "      # Optionally fail the job if Semgrep found results (kept soft by default)\n"], [84, "      # - run: exit ${{ steps.semgrep.outputs.exit_code || 0 }}\n"], [85, "\n"], [86, "  # === pip-audit -> SARIF -> Code scanning ===\n"], [87, "  pip-audit:\n"], [88, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [79, 88], "resource": "jobs(semgrep).steps[3](Upload Semgrep SARIF to Code Scanning)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["semgrep"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/checkout@v4", "__startline__": 90, "__endline__": 91}}, "code_block": [[90, "      - uses: actions/checkout@v4\n"], [91, "      - uses: actions/setup-python@v5\n"], [92, "        with:\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [90, 92], "resource": "jobs(pip-audit).steps[1]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 93, "__endline__": 95}, "__startline__": 91, "__endline__": 95}}, "code_block": [[91, "      - uses: actions/setup-python@v5\n"], [92, "        with:\n"], [93, "          python-version: '3.12'\n"], [94, "\n"], [95, "      - name: Install Poetry\n"], [96, "        run: curl -sSL https://install.python-poetry.org | python3 -\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [91, 96], "resource": "jobs(pip-audit).steps[2]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"name": "Install Poetry", "run": "curl -sSL https://install.python-poetry.org | python3 -", "__startline__": 95, "__endline__": 98}}, "code_block": [[95, "      - name: Install Poetry\n"], [96, "        run: curl -sSL https://install.python-poetry.org | python3 -\n"], [97, "\n"], [98, "      - name: Ensure Poetry on PATH\n"], [99, "        run: echo \"$HOME/.local/bin\" >> $GITHUB_PATH\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [95, 99], "resource": "jobs(pip-audit).steps[3](Install Poetry)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"name": "Ensure Poetry on PATH", "run": "echo \"$HOME/.local/bin\" >> $GITHUB_PATH", "__startline__": 98, "__endline__": 101}}, "code_block": [[98, "      - name: Ensure Poetry on PATH\n"], [99, "        run: echo \"$HOME/.local/bin\" >> $GITHUB_PATH\n"], [100, "\n"], [101, "      - name: Export deps from Poetry\n"], [102, "        run: poetry export -f requirements.txt --without-hashes -o requirements.txt\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [98, 102], "resource": "jobs(pip-audit).steps[4](Ensure Poetry on PATH)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"name": "Export deps from Poetry", "run": "poetry export -f requirements.txt --without-hashes -o requirements.txt", "__startline__": 101, "__endline__": 104}}, "code_block": [[101, "      - name: Export deps from Poetry\n"], [102, "        run: poetry export -f requirements.txt --without-hashes -o requirements.txt\n"], [103, "\n"], [104, "      - name: Install pip-audit\n"], [105, "        run: python -m pip install --upgrade pip pip-audit\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [101, 105], "resource": "jobs(pip-audit).steps[5](Export deps from Poetry)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"name": "Install pip-audit", "run": "python -m pip install --upgrade pip pip-audit", "__startline__": 104, "__endline__": 107}}, "code_block": [[104, "      - name: Install pip-audit\n"], [105, "        run: python -m pip install --upgrade pip pip-audit\n"], [106, "\n"], [107, "      - name: Run pip-audit (produce SARIF, capture exit code)\n"], [108, "        id: pipaudit\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [104, 108], "resource": "jobs(pip-audit).steps[6](Install pip-audit)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"name": "Run pip-audit (produce SARIF, capture exit code)", "id": "pipaudit", "run": "set +e\npip-audit -r requirements.txt --format sarif --output pip-audit.sarif --progress-spinner off\necho \"exit_code=$?\" >> $GITHUB_OUTPUT\n# Always succeed so we can upload SARIF\nexit 0\n", "__startline__": 107, "__endline__": 116}}, "code_block": [[107, "      - name: Run pip-audit (produce SARIF, capture exit code)\n"], [108, "        id: pipaudit\n"], [109, "        run: |\n"], [110, "          set +e\n"], [111, "          pip-audit -r requirements.txt --format sarif --output pip-audit.sarif --progress-spinner off\n"], [112, "          echo \"exit_code=$?\" >> $GITHUB_OUTPUT\n"], [113, "          # Always succeed so we can upload SARIF\n"], [114, "          exit 0\n"], [115, "\n"], [116, "      - name: Upload pip-audit SARIF to Code Scanning\n"], [117, "        uses: github/codeql-action/upload-sarif@v3\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [107, 117], "resource": "jobs(pip-audit).steps[7](Run pip-audit (produce SARIF, capture exit code))", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"name": "Upload pip-audit SARIF to Code Scanning", "uses": "github/codeql-action/upload-sarif@v3", "with": {"sarif_file": "pip-audit.sarif", "__startline__": 119, "__endline__": 122}, "__startline__": 116, "__endline__": 122}}, "code_block": [[116, "      - name: Upload pip-audit SARIF to Code Scanning\n"], [117, "        uses: github/codeql-action/upload-sarif@v3\n"], [118, "        with:\n"], [119, "          sarif_file: pip-audit.sarif\n"], [120, "\n"], [121, "      # Re-fail the job if vulnerabilities were found\n"], [122, "      - name: Fail if pip-audit had findings\n"], [123, "        if: ${{ steps.pipaudit.outputs.exit_code != '0' }}\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [116, 123], "resource": "jobs(pip-audit).steps[8](Upload pip-audit SARIF to Code Scanning)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"name": "Fail if pip-audit had findings", "if": "${{ steps.pipaudit.outputs.exit_code != '0' }}", "run": "echo \"pip-audit found vulnerabilities.\"\nexit 1\n", "__startline__": 122, "__endline__": 129}}, "code_block": [[122, "      - name: Fail if pip-audit had findings\n"], [123, "        if: ${{ steps.pipaudit.outputs.exit_code != '0' }}\n"], [124, "        run: |\n"], [125, "          echo \"pip-audit found vulnerabilities.\"\n"], [126, "          exit 1\n"], [127, "\n"], [128, "  # === Bandit (security lint) ===\n"], [129, "  bandit:\n"], [130, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [122, 130], "resource": "jobs(pip-audit).steps[9](Fail if pip-audit had findings)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["pip-audit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/checkout@v4", "__startline__": 132, "__endline__": 133}}, "code_block": [[132, "      - uses: actions/checkout@v4\n"], [133, "      - uses: actions/setup-python@v5\n"], [134, "        with:\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [132, 134], "resource": "jobs(bandit).steps[1]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["bandit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 135, "__endline__": 136}, "__startline__": 133, "__endline__": 136}}, "code_block": [[133, "      - uses: actions/setup-python@v5\n"], [134, "        with:\n"], [135, "          python-version: '3.12'\n"], [136, "      - name: Install Bandit\n"], [137, "        run: python -m pip install --upgrade pip bandit\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [133, 137], "resource": "jobs(bandit).steps[2]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["bandit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"name": "Install Bandit", "run": "python -m pip install --upgrade pip bandit", "__startline__": 136, "__endline__": 138}}, "code_block": [[136, "      - name: Install Bandit\n"], [137, "        run: python -m pip install --upgrade pip bandit\n"], [138, "      - name: Run Bandit (JSON report)\n"], [139, "        run: >\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [136, 139], "resource": "jobs(bandit).steps[3](Install Bandit)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["bandit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"name": "Run Bandit (JSON report)", "run": "bandit -r ./apps -x ./apps/chatbot/tests,./apps/cwe_ingestion/tests,./apps/pdf_worker/tests,./apps/tests,./apps/cwe_ingestion/build/lib/tests,./apps/cwe_ingestion/scripts -f json -o bandit_report_no_tests.json -iii -l\n", "__startline__": 138, "__endline__": 143}}, "code_block": [[138, "      - name: Run Bandit (JSON report)\n"], [139, "        run: >\n"], [140, "          bandit -r ./apps\n"], [141, "          -x ./apps/chatbot/tests,./apps/cwe_ingestion/tests,./apps/pdf_worker/tests,./apps/tests,./apps/cwe_ingestion/build/lib/tests,./apps/cwe_ingestion/scripts\n"], [142, "          -f json -o bandit_report_no_tests.json -iii -l\n"], [143, "      - name: Upload Bandit report\n"], [144, "        uses: actions/upload-artifact@v4\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [138, 144], "resource": "jobs(bandit).steps[4](Run Bandit (JSON report))", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["bandit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"name": "Upload Bandit report", "uses": "actions/upload-artifact@v4", "with": {"name": "bandit_report_no_tests.json", "path": "bandit_report_no_tests.json", "__startline__": 146, "__endline__": 149}, "__startline__": 143, "__endline__": 149}}, "code_block": [[143, "      - name: Upload Bandit report\n"], [144, "        uses: actions/upload-artifact@v4\n"], [145, "        with:\n"], [146, "          name: bandit_report_no_tests.json\n"], [147, "          path: bandit_report_no_tests.json\n"], [148, "      # Optional: fail the job if Bandit found issues (parses JSON count>0)\n"], [149, "      - name: Fail if Bandit found issues\n"], [150, "        run: |\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [143, 150], "resource": "jobs(bandit).steps[5](Upload Bandit report)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["bandit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"name": "Fail if Bandit found issues", "run": "python - <<'PY'\nimport json, sys\nwith open(\"bandit_report_no_tests.json\") as f:\n    data = json.load(f)\nissues = data.get(\"results\", [])\nif issues:\n    print(f\"Bandit found {len(issues)} issue(s).\")\n    sys.exit(1)\nprint(\"Bandit found no issues.\")\nPY\n", "__startline__": 149, "__endline__": 163}}, "code_block": [[149, "      - name: Fail if Bandit found issues\n"], [150, "        run: |\n"], [151, "          python - <<'PY'\n"], [152, "          import json, sys\n"], [153, "          with open(\"bandit_report_no_tests.json\") as f:\n"], [154, "              data = json.load(f)\n"], [155, "          issues = data.get(\"results\", [])\n"], [156, "          if issues:\n"], [157, "              print(f\"Bandit found {len(issues)} issue(s).\")\n"], [158, "              sys.exit(1)\n"], [159, "          print(\"Bandit found no issues.\")\n"], [160, "          PY\n"], [161, "\n"], [162, "  # === Vulture (dead code finder) ===\n"], [163, "  vulture:\n"], [164, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [149, 164], "resource": "jobs(bandit).steps[6](Fail if Bandit found issues)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["bandit"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/checkout@v4", "__startline__": 166, "__endline__": 167}}, "code_block": [[166, "      - uses: actions/checkout@v4\n"], [167, "      - uses: actions/setup-python@v5\n"], [168, "        with:\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [166, 168], "resource": "jobs(vulture).steps[1]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["vulture"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/setup-python@v5", "with": {"python-version": "3.12", "__startline__": 169, "__endline__": 170}, "__startline__": 167, "__endline__": 170}}, "code_block": [[167, "      - uses: actions/setup-python@v5\n"], [168, "        with:\n"], [169, "          python-version: '3.12'\n"], [170, "      - name: Install Vulture\n"], [171, "        run: python -m pip install --upgrade pip vulture\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [167, 171], "resource": "jobs(vulture).steps[2]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["vulture"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"name": "Install Vulture", "run": "python -m pip install --upgrade pip vulture", "__startline__": 170, "__endline__": 172}}, "code_block": [[170, "      - name: Install Vulture\n"], [171, "        run: python -m pip install --upgrade pip vulture\n"], [172, "      - name: Run Vulture\n"], [173, "        run: |\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [170, 173], "resource": "jobs(vulture).steps[3](Install Vulture)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["vulture"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"name": "Run Vulture", "run": "set +e\nvulture --sort-by-size --min-confidence 70 ./ > vulture.txt\nexit 0\n", "__startline__": 172, "__endline__": 177}}, "code_block": [[172, "      - name: Run Vulture\n"], [173, "        run: |\n"], [174, "          set +e\n"], [175, "          vulture --sort-by-size --min-confidence 70 ./ > vulture.txt\n"], [176, "          exit 0\n"], [177, "      - name: Upload Vulture output\n"], [178, "        uses: actions/upload-artifact@v4\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [172, 178], "resource": "jobs(vulture).steps[4](Run Vulture)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["vulture"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"name": "Upload Vulture output", "uses": "actions/upload-artifact@v4", "with": {"name": "vulture.txt", "path": "vulture.txt", "__startline__": 180, "__endline__": 183}, "__startline__": 177, "__endline__": 183}}, "code_block": [[177, "      - name: Upload Vulture output\n"], [178, "        uses: actions/upload-artifact@v4\n"], [179, "        with:\n"], [180, "          name: vulture.txt\n"], [181, "          path: vulture.txt\n"], [182, "      # Optional: fail if Vulture reported potential dead code\n"], [183, "      - name: Fail if Vulture found dead code\n"], [184, "        run: |\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [177, 184], "resource": "jobs(vulture).steps[5](Upload Vulture output)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["vulture"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"name": "Fail if Vulture found dead code", "run": "if grep -E \":[0-9]+:\" -q vulture.txt; then\n  echo \"::error::Vulture found potential dead code. See vulture.txt artifact.\"\n  exit 1\nelse\n  echo \"Vulture found no reportable dead code.\"\nfi\n", "__startline__": 183, "__endline__": 193}}, "code_block": [[183, "      - name: Fail if Vulture found dead code\n"], [184, "        run: |\n"], [185, "          if grep -E \":[0-9]+:\" -q vulture.txt; then\n"], [186, "            echo \"::error::Vulture found potential dead code. See vulture.txt artifact.\"\n"], [187, "            exit 1\n"], [188, "          else\n"], [189, "            echo \"Vulture found no reportable dead code.\"\n"], [190, "          fi\n"], [191, "\n"], [192, "  # === Checkov (Dockerfiles, GitHub Actions YAML, K8s/Helm) -> SARIF ===\n"], [193, "  checkov:\n"], [194, "    runs-on: ubuntu-latest\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [183, 194], "resource": "jobs(vulture).steps[6](Fail if Vulture found dead code)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["vulture"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"uses": "actions/checkout@v4", "__startline__": 196, "__endline__": 199}}, "code_block": [[196, "      - uses: actions/checkout@v4\n"], [197, "\n"], [198, "      # Use the official Checkov action\n"], [199, "      - name: Run Checkov\n"], [200, "        id: checkov\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [196, 200], "resource": "jobs(checkov).steps[1]", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["checkov"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"name": "Run Checkov", "id": "checkov", "uses": "bridgecrewio/checkov-action@v12", "with": {"directory": ".", "framework": "dockerfile,github_actions,kubernetes,helm", "skip_path": ".git\n.venv\nvenv\nnode_modules\n**/tests/**\n", "output_format": "sarif,json", "output_file_path": "checkov.sarif::checkov.json", "soft_fail": true, "quiet": true, "__startline__": 204, "__endline__": 221}, "__startline__": 199, "__endline__": 221}}, "code_block": [[199, "      - name: Run Checkov\n"], [200, "        id: checkov\n"], [201, "        uses: bridgecrewio/checkov-action@v12\n"], [202, "        with:\n"], [203, "          # Scan the whole repo\n"], [204, "          directory: .\n"], [205, "          # Focus on Dockerfiles and YAML-based configs\n"], [206, "          framework: dockerfile,github_actions,kubernetes,helm\n"], [207, "          # Exclude common noise; tweak as you like\n"], [208, "          skip_path: |\n"], [209, "            .git\n"], [210, "            .venv\n"], [211, "            venv\n"], [212, "            node_modules\n"], [213, "            **/tests/**\n"], [214, "          # Produce both SARIF (for Code Scanning) and JSON (for artifacts & gating)\n"], [215, "          output_format: sarif,json\n"], [216, "          output_file_path: checkov.sarif::checkov.json\n"], [217, "          # Always succeed so SARIF uploads even if findings exist\n"], [218, "          soft_fail: true\n"], [219, "          quiet: true\n"], [220, "\n"], [221, "      - name: Upload Checkov SARIF to Code Scanning\n"], [222, "        uses: github/codeql-action/upload-sarif@v3\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [199, 222], "resource": "jobs(checkov).steps[2](Run Checkov)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["checkov"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"name": "Upload Checkov SARIF to Code Scanning", "uses": "github/codeql-action/upload-sarif@v3", "with": {"sarif_file": "checkov.sarif", "__startline__": 224, "__endline__": 226}, "__startline__": 221, "__endline__": 226}}, "code_block": [[221, "      - name: Upload Checkov SARIF to Code Scanning\n"], [222, "        uses: github/codeql-action/upload-sarif@v3\n"], [223, "        with:\n"], [224, "          sarif_file: checkov.sarif\n"], [225, "\n"], [226, "      - name: Upload Checkov JSON report\n"], [227, "        uses: actions/upload-artifact@v4\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [221, 227], "resource": "jobs(checkov).steps[3](Upload Checkov SARIF to Code Scanning)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["checkov"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"name": "Upload Checkov JSON report", "uses": "actions/upload-artifact@v4", "with": {"name": "checkov.json", "path": "checkov.json", "__startline__": 229, "__endline__": 233}, "__startline__": 226, "__endline__": 233}}, "code_block": [[226, "      - name: Upload Checkov JSON report\n"], [227, "        uses: actions/upload-artifact@v4\n"], [228, "        with:\n"], [229, "          name: checkov.json\n"], [230, "          path: checkov.json\n"], [231, "\n"], [232, "      # Optional: fail CI if Checkov found failed checks\n"], [233, "      - name: Fail if Checkov had findings\n"], [234, "        run: |\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [226, 234], "resource": "jobs(checkov).steps[4](Upload Checkov JSON report)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["checkov"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"name": "Fail if Checkov had findings", "run": "python - <<'PY'\nimport json, sys\nwith open(\"checkov.json\") as f:\n    data = json.load(f)\n# Checkov JSON may be a list (multiple reports) or a dict (single)\nreports = data if isinstance(data, list) else [data]\nfailed = 0\nfor r in reports:\n    summ = r.get(\"summary\") or {}\n    failed += int(summ.get(\"failed\", 0))\nif failed > 0:\n    print(f\"Checkov found {failed} failed check(s). See SARIF or checkov.json.\")\n    sys.exit(1)\nprint(\"Checkov found no failed checks.\")\nPY", "__startline__": 233, "__endline__": 249}}, "code_block": [[233, "      - name: Fail if Checkov had findings\n"], [234, "        run: |\n"], [235, "          python - <<'PY'\n"], [236, "          import json, sys\n"], [237, "          with open(\"checkov.json\") as f:\n"], [238, "              data = json.load(f)\n"], [239, "          # Checkov JSON may be a list (multiple reports) or a dict (single)\n"], [240, "          reports = data if isinstance(data, list) else [data]\n"], [241, "          failed = 0\n"], [242, "          for r in reports:\n"], [243, "              summ = r.get(\"summary\") or {}\n"], [244, "              failed += int(summ.get(\"failed\", 0))\n"], [245, "          if failed > 0:\n"], [246, "              print(f\"Checkov found {failed} failed check(s). See SARIF or checkov.json.\")\n"], [247, "              sys.exit(1)\n"], [248, "          print(\"Checkov found no failed checks.\")\n"], [249, "          PY"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [233, 250], "resource": "jobs(checkov).steps[5](Fail if Checkov had findings)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": ["checkov"], "workflow_name": "quality"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"name": "Build and Deploy to Cloud Run", "runs-on": "ubuntu-latest", "permissions": {"contents": "read", "id-token": "write", "__startline__": 23, "__endline__": 26}, "steps": [{"name": "Checkout code", "uses": "actions/checkout@v4", "__startline__": 27, "__endline__": 30}, {"name": "Authenticate to Google Cloud", "uses": "google-github-actions/auth@v2", "with": {"workload_identity_provider": "${{ secrets.WIF_PROVIDER }}", "service_account": "${{ secrets.WIF_SERVICE_ACCOUNT }}", "__startline__": 33, "__endline__": 36}, "__startline__": 30, "__endline__": 36}, {"name": "Configure Docker to use gcloud as credential helper", "run": "gcloud auth configure-docker ${{ env.REGISTRY }}", "__startline__": 36, "__endline__": 39}, {"name": "Build Docker image", "working-directory": "./apps/chatbot", "run": "docker build \\\n  --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n  --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest \\\n  .\n", "__startline__": 39, "__endline__": 47}, {"name": "Push Docker image to Artifact Registry", "run": "docker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }}\ndocker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest\n", "__startline__": 47, "__endline__": 52}, {"name": "Deploy to Cloud Run", "run": "gcloud run deploy ${{ env.SERVICE_NAME }} \\\n  --image ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n  --region ${{ env.GCP_REGION }} \\\n  --service-account cwe-chatbot-sa@${{ env.GCP_PROJECT_ID }}.iam.gserviceaccount.com \\\n  --ingress internal-and-cloud-load-balancing \\\n  --allow-unauthenticated \\\n  --port 8080 \\\n  --memory 512Mi \\\n  --cpu 1000m \\\n  --min-instances 0 \\\n  --max-instances 10 \\\n  --timeout 300 \\\n  --set-env-vars \"ENVIRONMENT=production\" \\\n  --quiet\n", "__startline__": 52, "__endline__": 69}, {"name": "Get Cloud Run URL", "run": "SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} \\\n  --region ${{ env.GCP_REGION }} \\\n  --format 'value(status.url)')\necho \"\ud83d\ude80 Service deployed to: $SERVICE_URL\"\necho \"SERVICE_URL=$SERVICE_URL\" >> $GITHUB_ENV\n", "__startline__": 69, "__endline__": 77}, {"name": "Verify deployment", "run": "echo \"Waiting for service to be ready...\"\nsleep 30\n\n# Health check\ncurl -f ${{ env.SERVICE_URL }}/health || exit 1\necho \"\u2705 Health check passed\"\n\n# Basic functionality check\necho \"\u2705 Deployment verification completed successfully\"", "__startline__": 77, "__endline__": 87}], "__startline__": 19, "__endline__": 87}}, "code_block": [[19, "    name: Build and Deploy to Cloud Run\n"], [20, "    runs-on: ubuntu-latest\n"], [21, "    \n"], [22, "    permissions:\n"], [23, "      contents: read\n"], [24, "      id-token: write\n"], [25, "    \n"], [26, "    steps:\n"], [27, "      - name: Checkout code\n"], [28, "        uses: actions/checkout@v4\n"], [29, "      \n"], [30, "      - name: Authenticate to Google Cloud\n"], [31, "        uses: google-github-actions/auth@v2\n"], [32, "        with:\n"], [33, "          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}\n"], [34, "          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}\n"], [35, "      \n"], [36, "      - name: Configure Docker to use gcloud as credential helper\n"], [37, "        run: gcloud auth configure-docker ${{ env.REGISTRY }}\n"], [38, "      \n"], [39, "      - name: Build Docker image\n"], [40, "        working-directory: ./apps/chatbot\n"], [41, "        run: |\n"], [42, "          docker build \\\n"], [43, "            --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n"], [44, "            --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest \\\n"], [45, "            .\n"], [46, "      \n"], [47, "      - name: Push Docker image to Artifact Registry\n"], [48, "        run: |\n"], [49, "          docker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }}\n"], [50, "          docker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest\n"], [51, "      \n"], [52, "      - name: Deploy to Cloud Run\n"], [53, "        run: |\n"], [54, "          gcloud run deploy ${{ env.SERVICE_NAME }} \\\n"], [55, "            --image ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n"], [56, "            --region ${{ env.GCP_REGION }} \\\n"], [57, "            --service-account cwe-chatbot-sa@${{ env.GCP_PROJECT_ID }}.iam.gserviceaccount.com \\\n"], [58, "            --ingress internal-and-cloud-load-balancing \\\n"], [59, "            --allow-unauthenticated \\\n"], [60, "            --port 8080 \\\n"], [61, "            --memory 512Mi \\\n"], [62, "            --cpu 1000m \\\n"], [63, "            --min-instances 0 \\\n"], [64, "            --max-instances 10 \\\n"], [65, "            --timeout 300 \\\n"], [66, "            --set-env-vars \"ENVIRONMENT=production\" \\\n"], [67, "            --quiet\n"], [68, "      \n"], [69, "      - name: Get Cloud Run URL\n"], [70, "        run: |\n"], [71, "          SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} \\\n"], [72, "            --region ${{ env.GCP_REGION }} \\\n"], [73, "            --format 'value(status.url)')\n"], [74, "          echo \"\ud83d\ude80 Service deployed to: $SERVICE_URL\"\n"], [75, "          echo \"SERVICE_URL=$SERVICE_URL\" >> $GITHUB_ENV\n"], [76, "      \n"], [77, "      - name: Verify deployment\n"], [78, "        run: |\n"], [79, "          echo \"Waiting for service to be ready...\"\n"], [80, "          sleep 30\n"], [81, "          \n"], [82, "          # Health check\n"], [83, "          curl -f ${{ env.SERVICE_URL }}/health || exit 1\n"], [84, "          echo \"\u2705 Health check passed\"\n"], [85, "          \n"], [86, "          # Basic functionality check\n"], [87, "          echo \"\u2705 Deployment verification completed successfully\""]], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [19, 88], "resource": "jobs(deploy)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": ["deploy"], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"name": "Build and Deploy to Cloud Run", "runs-on": "ubuntu-latest", "permissions": {"contents": "read", "id-token": "write", "__startline__": 23, "__endline__": 26}, "steps": [{"name": "Checkout code", "uses": "actions/checkout@v4", "__startline__": 27, "__endline__": 30}, {"name": "Authenticate to Google Cloud", "uses": "google-github-actions/auth@v2", "with": {"workload_identity_provider": "${{ secrets.WIF_PROVIDER }}", "service_account": "${{ secrets.WIF_SERVICE_ACCOUNT }}", "__startline__": 33, "__endline__": 36}, "__startline__": 30, "__endline__": 36}, {"name": "Configure Docker to use gcloud as credential helper", "run": "gcloud auth configure-docker ${{ env.REGISTRY }}", "__startline__": 36, "__endline__": 39}, {"name": "Build Docker image", "working-directory": "./apps/chatbot", "run": "docker build \\\n  --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n  --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest \\\n  .\n", "__startline__": 39, "__endline__": 47}, {"name": "Push Docker image to Artifact Registry", "run": "docker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }}\ndocker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest\n", "__startline__": 47, "__endline__": 52}, {"name": "Deploy to Cloud Run", "run": "gcloud run deploy ${{ env.SERVICE_NAME }} \\\n  --image ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n  --region ${{ env.GCP_REGION }} \\\n  --service-account cwe-chatbot-sa@${{ env.GCP_PROJECT_ID }}.iam.gserviceaccount.com \\\n  --ingress internal-and-cloud-load-balancing \\\n  --allow-unauthenticated \\\n  --port 8080 \\\n  --memory 512Mi \\\n  --cpu 1000m \\\n  --min-instances 0 \\\n  --max-instances 10 \\\n  --timeout 300 \\\n  --set-env-vars \"ENVIRONMENT=production\" \\\n  --quiet\n", "__startline__": 52, "__endline__": 69}, {"name": "Get Cloud Run URL", "run": "SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} \\\n  --region ${{ env.GCP_REGION }} \\\n  --format 'value(status.url)')\necho \"\ud83d\ude80 Service deployed to: $SERVICE_URL\"\necho \"SERVICE_URL=$SERVICE_URL\" >> $GITHUB_ENV\n", "__startline__": 69, "__endline__": 77}, {"name": "Verify deployment", "run": "echo \"Waiting for service to be ready...\"\nsleep 30\n\n# Health check\ncurl -f ${{ env.SERVICE_URL }}/health || exit 1\necho \"\u2705 Health check passed\"\n\n# Basic functionality check\necho \"\u2705 Deployment verification completed successfully\"", "__startline__": 77, "__endline__": 87}], "__startline__": 19, "__endline__": 87}}, "code_block": [[19, "    name: Build and Deploy to Cloud Run\n"], [20, "    runs-on: ubuntu-latest\n"], [21, "    \n"], [22, "    permissions:\n"], [23, "      contents: read\n"], [24, "      id-token: write\n"], [25, "    \n"], [26, "    steps:\n"], [27, "      - name: Checkout code\n"], [28, "        uses: actions/checkout@v4\n"], [29, "      \n"], [30, "      - name: Authenticate to Google Cloud\n"], [31, "        uses: google-github-actions/auth@v2\n"], [32, "        with:\n"], [33, "          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}\n"], [34, "          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}\n"], [35, "      \n"], [36, "      - name: Configure Docker to use gcloud as credential helper\n"], [37, "        run: gcloud auth configure-docker ${{ env.REGISTRY }}\n"], [38, "      \n"], [39, "      - name: Build Docker image\n"], [40, "        working-directory: ./apps/chatbot\n"], [41, "        run: |\n"], [42, "          docker build \\\n"], [43, "            --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n"], [44, "            --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest \\\n"], [45, "            .\n"], [46, "      \n"], [47, "      - name: Push Docker image to Artifact Registry\n"], [48, "        run: |\n"], [49, "          docker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }}\n"], [50, "          docker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest\n"], [51, "      \n"], [52, "      - name: Deploy to Cloud Run\n"], [53, "        run: |\n"], [54, "          gcloud run deploy ${{ env.SERVICE_NAME }} \\\n"], [55, "            --image ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n"], [56, "            --region ${{ env.GCP_REGION }} \\\n"], [57, "            --service-account cwe-chatbot-sa@${{ env.GCP_PROJECT_ID }}.iam.gserviceaccount.com \\\n"], [58, "            --ingress internal-and-cloud-load-balancing \\\n"], [59, "            --allow-unauthenticated \\\n"], [60, "            --port 8080 \\\n"], [61, "            --memory 512Mi \\\n"], [62, "            --cpu 1000m \\\n"], [63, "            --min-instances 0 \\\n"], [64, "            --max-instances 10 \\\n"], [65, "            --timeout 300 \\\n"], [66, "            --set-env-vars \"ENVIRONMENT=production\" \\\n"], [67, "            --quiet\n"], [68, "      \n"], [69, "      - name: Get Cloud Run URL\n"], [70, "        run: |\n"], [71, "          SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} \\\n"], [72, "            --region ${{ env.GCP_REGION }} \\\n"], [73, "            --format 'value(status.url)')\n"], [74, "          echo \"\ud83d\ude80 Service deployed to: $SERVICE_URL\"\n"], [75, "          echo \"SERVICE_URL=$SERVICE_URL\" >> $GITHUB_ENV\n"], [76, "      \n"], [77, "      - name: Verify deployment\n"], [78, "        run: |\n"], [79, "          echo \"Waiting for service to be ready...\"\n"], [80, "          sleep 30\n"], [81, "          \n"], [82, "          # Health check\n"], [83, "          curl -f ${{ env.SERVICE_URL }}/health || exit 1\n"], [84, "          echo \"\u2705 Health check passed\"\n"], [85, "          \n"], [86, "          # Basic functionality check\n"], [87, "          echo \"\u2705 Deployment verification completed successfully\""]], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [19, 88], "resource": "jobs(deploy)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": ["deploy"], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}, {"check_id": "CKV_GHA_5", "bc_check_id": null, "check_name": "Found artifact build without evidence of cosign sign execution in pipeline", "check_result": {"result": "PASSED", "results_configuration": {"deploy": {"name": "Build and Deploy to Cloud Run", "runs-on": "ubuntu-latest", "permissions": {"contents": "read", "id-token": "write", "__startline__": 23, "__endline__": 26}, "steps": [{"name": "Checkout code", "uses": "actions/checkout@v4", "__startline__": 27, "__endline__": 30}, {"name": "Authenticate to Google Cloud", "uses": "google-github-actions/auth@v2", "with": {"workload_identity_provider": "${{ secrets.WIF_PROVIDER }}", "service_account": "${{ secrets.WIF_SERVICE_ACCOUNT }}", "__startline__": 33, "__endline__": 36}, "__startline__": 30, "__endline__": 36}, {"name": "Configure Docker to use gcloud as credential helper", "run": "gcloud auth configure-docker ${{ env.REGISTRY }}", "__startline__": 36, "__endline__": 39}, {"name": "Build Docker image", "working-directory": "./apps/chatbot", "run": "docker build \\\n  --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n  --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest \\\n  .\n", "__startline__": 39, "__endline__": 47}, {"name": "Push Docker image to Artifact Registry", "run": "docker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }}\ndocker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest\n", "__startline__": 47, "__endline__": 52}, {"name": "Deploy to Cloud Run", "run": "gcloud run deploy ${{ env.SERVICE_NAME }} \\\n  --image ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n  --region ${{ env.GCP_REGION }} \\\n  --service-account cwe-chatbot-sa@${{ env.GCP_PROJECT_ID }}.iam.gserviceaccount.com \\\n  --ingress internal-and-cloud-load-balancing \\\n  --allow-unauthenticated \\\n  --port 8080 \\\n  --memory 512Mi \\\n  --cpu 1000m \\\n  --min-instances 0 \\\n  --max-instances 10 \\\n  --timeout 300 \\\n  --set-env-vars \"ENVIRONMENT=production\" \\\n  --quiet\n", "__startline__": 52, "__endline__": 69}, {"name": "Get Cloud Run URL", "run": "SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} \\\n  --region ${{ env.GCP_REGION }} \\\n  --format 'value(status.url)')\necho \"\ud83d\ude80 Service deployed to: $SERVICE_URL\"\necho \"SERVICE_URL=$SERVICE_URL\" >> $GITHUB_ENV\n", "__startline__": 69, "__endline__": 77}, {"name": "Verify deployment", "run": "echo \"Waiting for service to be ready...\"\nsleep 30\n\n# Health check\ncurl -f ${{ env.SERVICE_URL }}/health || exit 1\necho \"\u2705 Health check passed\"\n\n# Basic functionality check\necho \"\u2705 Deployment verification completed successfully\"", "__startline__": 77, "__endline__": 87}], "__startline__": 19, "__endline__": 87}, "__startline__": 18, "__endline__": 87}}, "code_block": [[18, "  deploy:\n"], [19, "    name: Build and Deploy to Cloud Run\n"], [20, "    runs-on: ubuntu-latest\n"], [21, "    \n"], [22, "    permissions:\n"], [23, "      contents: read\n"], [24, "      id-token: write\n"], [25, "    \n"], [26, "    steps:\n"], [27, "      - name: Checkout code\n"], [28, "        uses: actions/checkout@v4\n"], [29, "      \n"], [30, "      - name: Authenticate to Google Cloud\n"], [31, "        uses: google-github-actions/auth@v2\n"], [32, "        with:\n"], [33, "          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}\n"], [34, "          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}\n"], [35, "      \n"], [36, "      - name: Configure Docker to use gcloud as credential helper\n"], [37, "        run: gcloud auth configure-docker ${{ env.REGISTRY }}\n"], [38, "      \n"], [39, "      - name: Build Docker image\n"], [40, "        working-directory: ./apps/chatbot\n"], [41, "        run: |\n"], [42, "          docker build \\\n"], [43, "            --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n"], [44, "            --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest \\\n"], [45, "            .\n"], [46, "      \n"], [47, "      - name: Push Docker image to Artifact Registry\n"], [48, "        run: |\n"], [49, "          docker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }}\n"], [50, "          docker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest\n"], [51, "      \n"], [52, "      - name: Deploy to Cloud Run\n"], [53, "        run: |\n"], [54, "          gcloud run deploy ${{ env.SERVICE_NAME }} \\\n"], [55, "            --image ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n"], [56, "            --region ${{ env.GCP_REGION }} \\\n"], [57, "            --service-account cwe-chatbot-sa@${{ env.GCP_PROJECT_ID }}.iam.gserviceaccount.com \\\n"], [58, "            --ingress internal-and-cloud-load-balancing \\\n"], [59, "            --allow-unauthenticated \\\n"], [60, "            --port 8080 \\\n"], [61, "            --memory 512Mi \\\n"], [62, "            --cpu 1000m \\\n"], [63, "            --min-instances 0 \\\n"], [64, "            --max-instances 10 \\\n"], [65, "            --timeout 300 \\\n"], [66, "            --set-env-vars \"ENVIRONMENT=production\" \\\n"], [67, "            --quiet\n"], [68, "      \n"], [69, "      - name: Get Cloud Run URL\n"], [70, "        run: |\n"], [71, "          SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} \\\n"], [72, "            --region ${{ env.GCP_REGION }} \\\n"], [73, "            --format 'value(status.url)')\n"], [74, "          echo \"\ud83d\ude80 Service deployed to: $SERVICE_URL\"\n"], [75, "          echo \"SERVICE_URL=$SERVICE_URL\" >> $GITHUB_ENV\n"], [76, "      \n"], [77, "      - name: Verify deployment\n"], [78, "        run: |\n"], [79, "          echo \"Waiting for service to be ready...\"\n"], [80, "          sleep 30\n"], [81, "          \n"], [82, "          # Health check\n"], [83, "          curl -f ${{ env.SERVICE_URL }}/health || exit 1\n"], [84, "          echo \"\u2705 Health check passed\"\n"], [85, "          \n"], [86, "          # Basic functionality check\n"], [87, "          echo \"\u2705 Deployment verification completed successfully\""]], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [18, 88], "resource": "jobs", "evaluations": null, "check_class": "checkov.github_actions.checks.job.CosignArtifacts", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": ["deploy"], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"name": "Build and Deploy to Cloud Run", "runs-on": "ubuntu-latest", "permissions": {"contents": "read", "id-token": "write", "__startline__": 23, "__endline__": 26}, "steps": [{"name": "Checkout code", "uses": "actions/checkout@v4", "__startline__": 27, "__endline__": 30}, {"name": "Authenticate to Google Cloud", "uses": "google-github-actions/auth@v2", "with": {"workload_identity_provider": "${{ secrets.WIF_PROVIDER }}", "service_account": "${{ secrets.WIF_SERVICE_ACCOUNT }}", "__startline__": 33, "__endline__": 36}, "__startline__": 30, "__endline__": 36}, {"name": "Configure Docker to use gcloud as credential helper", "run": "gcloud auth configure-docker ${{ env.REGISTRY }}", "__startline__": 36, "__endline__": 39}, {"name": "Build Docker image", "working-directory": "./apps/chatbot", "run": "docker build \\\n  --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n  --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest \\\n  .\n", "__startline__": 39, "__endline__": 47}, {"name": "Push Docker image to Artifact Registry", "run": "docker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }}\ndocker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest\n", "__startline__": 47, "__endline__": 52}, {"name": "Deploy to Cloud Run", "run": "gcloud run deploy ${{ env.SERVICE_NAME }} \\\n  --image ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n  --region ${{ env.GCP_REGION }} \\\n  --service-account cwe-chatbot-sa@${{ env.GCP_PROJECT_ID }}.iam.gserviceaccount.com \\\n  --ingress internal-and-cloud-load-balancing \\\n  --allow-unauthenticated \\\n  --port 8080 \\\n  --memory 512Mi \\\n  --cpu 1000m \\\n  --min-instances 0 \\\n  --max-instances 10 \\\n  --timeout 300 \\\n  --set-env-vars \"ENVIRONMENT=production\" \\\n  --quiet\n", "__startline__": 52, "__endline__": 69}, {"name": "Get Cloud Run URL", "run": "SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} \\\n  --region ${{ env.GCP_REGION }} \\\n  --format 'value(status.url)')\necho \"\ud83d\ude80 Service deployed to: $SERVICE_URL\"\necho \"SERVICE_URL=$SERVICE_URL\" >> $GITHUB_ENV\n", "__startline__": 69, "__endline__": 77}, {"name": "Verify deployment", "run": "echo \"Waiting for service to be ready...\"\nsleep 30\n\n# Health check\ncurl -f ${{ env.SERVICE_URL }}/health || exit 1\necho \"\u2705 Health check passed\"\n\n# Basic functionality check\necho \"\u2705 Deployment verification completed successfully\"", "__startline__": 77, "__endline__": 87}], "__startline__": 19, "__endline__": 87}}, "code_block": [[19, "    name: Build and Deploy to Cloud Run\n"], [20, "    runs-on: ubuntu-latest\n"], [21, "    \n"], [22, "    permissions:\n"], [23, "      contents: read\n"], [24, "      id-token: write\n"], [25, "    \n"], [26, "    steps:\n"], [27, "      - name: Checkout code\n"], [28, "        uses: actions/checkout@v4\n"], [29, "      \n"], [30, "      - name: Authenticate to Google Cloud\n"], [31, "        uses: google-github-actions/auth@v2\n"], [32, "        with:\n"], [33, "          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}\n"], [34, "          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}\n"], [35, "      \n"], [36, "      - name: Configure Docker to use gcloud as credential helper\n"], [37, "        run: gcloud auth configure-docker ${{ env.REGISTRY }}\n"], [38, "      \n"], [39, "      - name: Build Docker image\n"], [40, "        working-directory: ./apps/chatbot\n"], [41, "        run: |\n"], [42, "          docker build \\\n"], [43, "            --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n"], [44, "            --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest \\\n"], [45, "            .\n"], [46, "      \n"], [47, "      - name: Push Docker image to Artifact Registry\n"], [48, "        run: |\n"], [49, "          docker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }}\n"], [50, "          docker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest\n"], [51, "      \n"], [52, "      - name: Deploy to Cloud Run\n"], [53, "        run: |\n"], [54, "          gcloud run deploy ${{ env.SERVICE_NAME }} \\\n"], [55, "            --image ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n"], [56, "            --region ${{ env.GCP_REGION }} \\\n"], [57, "            --service-account cwe-chatbot-sa@${{ env.GCP_PROJECT_ID }}.iam.gserviceaccount.com \\\n"], [58, "            --ingress internal-and-cloud-load-balancing \\\n"], [59, "            --allow-unauthenticated \\\n"], [60, "            --port 8080 \\\n"], [61, "            --memory 512Mi \\\n"], [62, "            --cpu 1000m \\\n"], [63, "            --min-instances 0 \\\n"], [64, "            --max-instances 10 \\\n"], [65, "            --timeout 300 \\\n"], [66, "            --set-env-vars \"ENVIRONMENT=production\" \\\n"], [67, "            --quiet\n"], [68, "      \n"], [69, "      - name: Get Cloud Run URL\n"], [70, "        run: |\n"], [71, "          SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} \\\n"], [72, "            --region ${{ env.GCP_REGION }} \\\n"], [73, "            --format 'value(status.url)')\n"], [74, "          echo \"\ud83d\ude80 Service deployed to: $SERVICE_URL\"\n"], [75, "          echo \"SERVICE_URL=$SERVICE_URL\" >> $GITHUB_ENV\n"], [76, "      \n"], [77, "      - name: Verify deployment\n"], [78, "        run: |\n"], [79, "          echo \"Waiting for service to be ready...\"\n"], [80, "          sleep 30\n"], [81, "          \n"], [82, "          # Health check\n"], [83, "          curl -f ${{ env.SERVICE_URL }}/health || exit 1\n"], [84, "          echo \"\u2705 Health check passed\"\n"], [85, "          \n"], [86, "          # Basic functionality check\n"], [87, "          echo \"\u2705 Deployment verification completed successfully\""]], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [19, 88], "resource": "jobs(deploy)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": ["deploy"], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}, {"check_id": "CKV_GHA_6", "bc_check_id": null, "check_name": "Found artifact build without evidence of cosign sbom attestation in pipeline", "check_result": {"result": "PASSED", "results_configuration": {"deploy": {"name": "Build and Deploy to Cloud Run", "runs-on": "ubuntu-latest", "permissions": {"contents": "read", "id-token": "write", "__startline__": 23, "__endline__": 26}, "steps": [{"name": "Checkout code", "uses": "actions/checkout@v4", "__startline__": 27, "__endline__": 30}, {"name": "Authenticate to Google Cloud", "uses": "google-github-actions/auth@v2", "with": {"workload_identity_provider": "${{ secrets.WIF_PROVIDER }}", "service_account": "${{ secrets.WIF_SERVICE_ACCOUNT }}", "__startline__": 33, "__endline__": 36}, "__startline__": 30, "__endline__": 36}, {"name": "Configure Docker to use gcloud as credential helper", "run": "gcloud auth configure-docker ${{ env.REGISTRY }}", "__startline__": 36, "__endline__": 39}, {"name": "Build Docker image", "working-directory": "./apps/chatbot", "run": "docker build \\\n  --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n  --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest \\\n  .\n", "__startline__": 39, "__endline__": 47}, {"name": "Push Docker image to Artifact Registry", "run": "docker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }}\ndocker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest\n", "__startline__": 47, "__endline__": 52}, {"name": "Deploy to Cloud Run", "run": "gcloud run deploy ${{ env.SERVICE_NAME }} \\\n  --image ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n  --region ${{ env.GCP_REGION }} \\\n  --service-account cwe-chatbot-sa@${{ env.GCP_PROJECT_ID }}.iam.gserviceaccount.com \\\n  --ingress internal-and-cloud-load-balancing \\\n  --allow-unauthenticated \\\n  --port 8080 \\\n  --memory 512Mi \\\n  --cpu 1000m \\\n  --min-instances 0 \\\n  --max-instances 10 \\\n  --timeout 300 \\\n  --set-env-vars \"ENVIRONMENT=production\" \\\n  --quiet\n", "__startline__": 52, "__endline__": 69}, {"name": "Get Cloud Run URL", "run": "SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} \\\n  --region ${{ env.GCP_REGION }} \\\n  --format 'value(status.url)')\necho \"\ud83d\ude80 Service deployed to: $SERVICE_URL\"\necho \"SERVICE_URL=$SERVICE_URL\" >> $GITHUB_ENV\n", "__startline__": 69, "__endline__": 77}, {"name": "Verify deployment", "run": "echo \"Waiting for service to be ready...\"\nsleep 30\n\n# Health check\ncurl -f ${{ env.SERVICE_URL }}/health || exit 1\necho \"\u2705 Health check passed\"\n\n# Basic functionality check\necho \"\u2705 Deployment verification completed successfully\"", "__startline__": 77, "__endline__": 87}], "__startline__": 19, "__endline__": 87}, "__startline__": 18, "__endline__": 87}}, "code_block": [[18, "  deploy:\n"], [19, "    name: Build and Deploy to Cloud Run\n"], [20, "    runs-on: ubuntu-latest\n"], [21, "    \n"], [22, "    permissions:\n"], [23, "      contents: read\n"], [24, "      id-token: write\n"], [25, "    \n"], [26, "    steps:\n"], [27, "      - name: Checkout code\n"], [28, "        uses: actions/checkout@v4\n"], [29, "      \n"], [30, "      - name: Authenticate to Google Cloud\n"], [31, "        uses: google-github-actions/auth@v2\n"], [32, "        with:\n"], [33, "          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}\n"], [34, "          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}\n"], [35, "      \n"], [36, "      - name: Configure Docker to use gcloud as credential helper\n"], [37, "        run: gcloud auth configure-docker ${{ env.REGISTRY }}\n"], [38, "      \n"], [39, "      - name: Build Docker image\n"], [40, "        working-directory: ./apps/chatbot\n"], [41, "        run: |\n"], [42, "          docker build \\\n"], [43, "            --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n"], [44, "            --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest \\\n"], [45, "            .\n"], [46, "      \n"], [47, "      - name: Push Docker image to Artifact Registry\n"], [48, "        run: |\n"], [49, "          docker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }}\n"], [50, "          docker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest\n"], [51, "      \n"], [52, "      - name: Deploy to Cloud Run\n"], [53, "        run: |\n"], [54, "          gcloud run deploy ${{ env.SERVICE_NAME }} \\\n"], [55, "            --image ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n"], [56, "            --region ${{ env.GCP_REGION }} \\\n"], [57, "            --service-account cwe-chatbot-sa@${{ env.GCP_PROJECT_ID }}.iam.gserviceaccount.com \\\n"], [58, "            --ingress internal-and-cloud-load-balancing \\\n"], [59, "            --allow-unauthenticated \\\n"], [60, "            --port 8080 \\\n"], [61, "            --memory 512Mi \\\n"], [62, "            --cpu 1000m \\\n"], [63, "            --min-instances 0 \\\n"], [64, "            --max-instances 10 \\\n"], [65, "            --timeout 300 \\\n"], [66, "            --set-env-vars \"ENVIRONMENT=production\" \\\n"], [67, "            --quiet\n"], [68, "      \n"], [69, "      - name: Get Cloud Run URL\n"], [70, "        run: |\n"], [71, "          SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} \\\n"], [72, "            --region ${{ env.GCP_REGION }} \\\n"], [73, "            --format 'value(status.url)')\n"], [74, "          echo \"\ud83d\ude80 Service deployed to: $SERVICE_URL\"\n"], [75, "          echo \"SERVICE_URL=$SERVICE_URL\" >> $GITHUB_ENV\n"], [76, "      \n"], [77, "      - name: Verify deployment\n"], [78, "        run: |\n"], [79, "          echo \"Waiting for service to be ready...\"\n"], [80, "          sleep 30\n"], [81, "          \n"], [82, "          # Health check\n"], [83, "          curl -f ${{ env.SERVICE_URL }}/health || exit 1\n"], [84, "          echo \"\u2705 Health check passed\"\n"], [85, "          \n"], [86, "          # Basic functionality check\n"], [87, "          echo \"\u2705 Deployment verification completed successfully\""]], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [18, 88], "resource": "jobs", "evaluations": null, "check_class": "checkov.github_actions.checks.job.CosignSBOM", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": ["deploy"], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"name": "Build and Deploy to Cloud Run", "runs-on": "ubuntu-latest", "permissions": {"contents": "read", "id-token": "write", "__startline__": 23, "__endline__": 26}, "steps": [{"name": "Checkout code", "uses": "actions/checkout@v4", "__startline__": 27, "__endline__": 30}, {"name": "Authenticate to Google Cloud", "uses": "google-github-actions/auth@v2", "with": {"workload_identity_provider": "${{ secrets.WIF_PROVIDER }}", "service_account": "${{ secrets.WIF_SERVICE_ACCOUNT }}", "__startline__": 33, "__endline__": 36}, "__startline__": 30, "__endline__": 36}, {"name": "Configure Docker to use gcloud as credential helper", "run": "gcloud auth configure-docker ${{ env.REGISTRY }}", "__startline__": 36, "__endline__": 39}, {"name": "Build Docker image", "working-directory": "./apps/chatbot", "run": "docker build \\\n  --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n  --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest \\\n  .\n", "__startline__": 39, "__endline__": 47}, {"name": "Push Docker image to Artifact Registry", "run": "docker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }}\ndocker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest\n", "__startline__": 47, "__endline__": 52}, {"name": "Deploy to Cloud Run", "run": "gcloud run deploy ${{ env.SERVICE_NAME }} \\\n  --image ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n  --region ${{ env.GCP_REGION }} \\\n  --service-account cwe-chatbot-sa@${{ env.GCP_PROJECT_ID }}.iam.gserviceaccount.com \\\n  --ingress internal-and-cloud-load-balancing \\\n  --allow-unauthenticated \\\n  --port 8080 \\\n  --memory 512Mi \\\n  --cpu 1000m \\\n  --min-instances 0 \\\n  --max-instances 10 \\\n  --timeout 300 \\\n  --set-env-vars \"ENVIRONMENT=production\" \\\n  --quiet\n", "__startline__": 52, "__endline__": 69}, {"name": "Get Cloud Run URL", "run": "SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} \\\n  --region ${{ env.GCP_REGION }} \\\n  --format 'value(status.url)')\necho \"\ud83d\ude80 Service deployed to: $SERVICE_URL\"\necho \"SERVICE_URL=$SERVICE_URL\" >> $GITHUB_ENV\n", "__startline__": 69, "__endline__": 77}, {"name": "Verify deployment", "run": "echo \"Waiting for service to be ready...\"\nsleep 30\n\n# Health check\ncurl -f ${{ env.SERVICE_URL }}/health || exit 1\necho \"\u2705 Health check passed\"\n\n# Basic functionality check\necho \"\u2705 Deployment verification completed successfully\"", "__startline__": 77, "__endline__": 87}], "__startline__": 19, "__endline__": 87}}, "code_block": [[19, "    name: Build and Deploy to Cloud Run\n"], [20, "    runs-on: ubuntu-latest\n"], [21, "    \n"], [22, "    permissions:\n"], [23, "      contents: read\n"], [24, "      id-token: write\n"], [25, "    \n"], [26, "    steps:\n"], [27, "      - name: Checkout code\n"], [28, "        uses: actions/checkout@v4\n"], [29, "      \n"], [30, "      - name: Authenticate to Google Cloud\n"], [31, "        uses: google-github-actions/auth@v2\n"], [32, "        with:\n"], [33, "          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}\n"], [34, "          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}\n"], [35, "      \n"], [36, "      - name: Configure Docker to use gcloud as credential helper\n"], [37, "        run: gcloud auth configure-docker ${{ env.REGISTRY }}\n"], [38, "      \n"], [39, "      - name: Build Docker image\n"], [40, "        working-directory: ./apps/chatbot\n"], [41, "        run: |\n"], [42, "          docker build \\\n"], [43, "            --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n"], [44, "            --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest \\\n"], [45, "            .\n"], [46, "      \n"], [47, "      - name: Push Docker image to Artifact Registry\n"], [48, "        run: |\n"], [49, "          docker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }}\n"], [50, "          docker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest\n"], [51, "      \n"], [52, "      - name: Deploy to Cloud Run\n"], [53, "        run: |\n"], [54, "          gcloud run deploy ${{ env.SERVICE_NAME }} \\\n"], [55, "            --image ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n"], [56, "            --region ${{ env.GCP_REGION }} \\\n"], [57, "            --service-account cwe-chatbot-sa@${{ env.GCP_PROJECT_ID }}.iam.gserviceaccount.com \\\n"], [58, "            --ingress internal-and-cloud-load-balancing \\\n"], [59, "            --allow-unauthenticated \\\n"], [60, "            --port 8080 \\\n"], [61, "            --memory 512Mi \\\n"], [62, "            --cpu 1000m \\\n"], [63, "            --min-instances 0 \\\n"], [64, "            --max-instances 10 \\\n"], [65, "            --timeout 300 \\\n"], [66, "            --set-env-vars \"ENVIRONMENT=production\" \\\n"], [67, "            --quiet\n"], [68, "      \n"], [69, "      - name: Get Cloud Run URL\n"], [70, "        run: |\n"], [71, "          SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} \\\n"], [72, "            --region ${{ env.GCP_REGION }} \\\n"], [73, "            --format 'value(status.url)')\n"], [74, "          echo \"\ud83d\ude80 Service deployed to: $SERVICE_URL\"\n"], [75, "          echo \"SERVICE_URL=$SERVICE_URL\" >> $GITHUB_ENV\n"], [76, "      \n"], [77, "      - name: Verify deployment\n"], [78, "        run: |\n"], [79, "          echo \"Waiting for service to be ready...\"\n"], [80, "          sleep 30\n"], [81, "          \n"], [82, "          # Health check\n"], [83, "          curl -f ${{ env.SERVICE_URL }}/health || exit 1\n"], [84, "          echo \"\u2705 Health check passed\"\n"], [85, "          \n"], [86, "          # Basic functionality check\n"], [87, "          echo \"\u2705 Deployment verification completed successfully\""]], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [19, 88], "resource": "jobs(deploy)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": ["deploy"], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}, {"check_id": "CKV_GHA_7", "bc_check_id": null, "check_name": "The build output cannot be affected by user parameters other than the build entry point and the top-level source location. GitHub Actions workflow_dispatch inputs MUST be empty. ", "check_result": {"result": "PASSED", "results_configuration": {"push": {"branches": ["main"], "paths": ["apps/chatbot/**"], "__startline__": 5, "__endline__": 8}, "workflow_dispatch": null, "__startline__": 4, "__endline__": 10}}, "code_block": [[4, "  push:\n"], [5, "    branches: [ main ]\n"], [6, "    paths: \n"], [7, "      - 'apps/chatbot/**'\n"], [8, "  workflow_dispatch:\n"], [9, "\n"], [10, "env:\n"], [11, "  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}\n"]], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [4, 11], "resource": "on(Deploy CWE ChatBot to Cloud Run)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.EmptyWorkflowDispatch", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": [""], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"name": "Checkout code", "uses": "actions/checkout@v4", "__startline__": 27, "__endline__": 30}}, "code_block": [[27, "      - name: Checkout code\n"], [28, "        uses: actions/checkout@v4\n"], [29, "      \n"], [30, "      - name: Authenticate to Google Cloud\n"], [31, "        uses: google-github-actions/auth@v2\n"]], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [27, 31], "resource": "jobs(deploy).steps[1](Checkout code)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": ["deploy"], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"name": "Authenticate to Google Cloud", "uses": "google-github-actions/auth@v2", "with": {"workload_identity_provider": "${{ secrets.WIF_PROVIDER }}", "service_account": "${{ secrets.WIF_SERVICE_ACCOUNT }}", "__startline__": 33, "__endline__": 36}, "__startline__": 30, "__endline__": 36}}, "code_block": [[30, "      - name: Authenticate to Google Cloud\n"], [31, "        uses: google-github-actions/auth@v2\n"], [32, "        with:\n"], [33, "          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}\n"], [34, "          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}\n"], [35, "      \n"], [36, "      - name: Configure Docker to use gcloud as credential helper\n"], [37, "        run: gcloud auth configure-docker ${{ env.REGISTRY }}\n"]], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [30, 37], "resource": "jobs(deploy).steps[2](Authenticate to Google Cloud)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": ["deploy"], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"name": "Configure Docker to use gcloud as credential helper", "run": "gcloud auth configure-docker ${{ env.REGISTRY }}", "__startline__": 36, "__endline__": 39}}, "code_block": [[36, "      - name: Configure Docker to use gcloud as credential helper\n"], [37, "        run: gcloud auth configure-docker ${{ env.REGISTRY }}\n"], [38, "      \n"], [39, "      - name: Build Docker image\n"], [40, "        working-directory: ./apps/chatbot\n"]], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [36, 40], "resource": "jobs(deploy).steps[3](Configure Docker to use gcloud as credential helper)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": ["deploy"], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"name": "Build Docker image", "working-directory": "./apps/chatbot", "run": "docker build \\\n  --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n  --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest \\\n  .\n", "__startline__": 39, "__endline__": 47}}, "code_block": [[39, "      - name: Build Docker image\n"], [40, "        working-directory: ./apps/chatbot\n"], [41, "        run: |\n"], [42, "          docker build \\\n"], [43, "            --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n"], [44, "            --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest \\\n"], [45, "            .\n"], [46, "      \n"], [47, "      - name: Push Docker image to Artifact Registry\n"], [48, "        run: |\n"]], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [39, 48], "resource": "jobs(deploy).steps[4](Build Docker image)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": ["deploy"], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"name": "Push Docker image to Artifact Registry", "run": "docker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }}\ndocker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest\n", "__startline__": 47, "__endline__": 52}}, "code_block": [[47, "      - name: Push Docker image to Artifact Registry\n"], [48, "        run: |\n"], [49, "          docker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }}\n"], [50, "          docker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest\n"], [51, "      \n"], [52, "      - name: Deploy to Cloud Run\n"], [53, "        run: |\n"]], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [47, 53], "resource": "jobs(deploy).steps[5](Push Docker image to Artifact Registry)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": ["deploy"], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"name": "Deploy to Cloud Run", "run": "gcloud run deploy ${{ env.SERVICE_NAME }} \\\n  --image ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n  --region ${{ env.GCP_REGION }} \\\n  --service-account cwe-chatbot-sa@${{ env.GCP_PROJECT_ID }}.iam.gserviceaccount.com \\\n  --ingress internal-and-cloud-load-balancing \\\n  --allow-unauthenticated \\\n  --port 8080 \\\n  --memory 512Mi \\\n  --cpu 1000m \\\n  --min-instances 0 \\\n  --max-instances 10 \\\n  --timeout 300 \\\n  --set-env-vars \"ENVIRONMENT=production\" \\\n  --quiet\n", "__startline__": 52, "__endline__": 69}}, "code_block": [[52, "      - name: Deploy to Cloud Run\n"], [53, "        run: |\n"], [54, "          gcloud run deploy ${{ env.SERVICE_NAME }} \\\n"], [55, "            --image ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n"], [56, "            --region ${{ env.GCP_REGION }} \\\n"], [57, "            --service-account cwe-chatbot-sa@${{ env.GCP_PROJECT_ID }}.iam.gserviceaccount.com \\\n"], [58, "            --ingress internal-and-cloud-load-balancing \\\n"], [59, "            --allow-unauthenticated \\\n"], [60, "            --port 8080 \\\n"], [61, "            --memory 512Mi \\\n"], [62, "            --cpu 1000m \\\n"], [63, "            --min-instances 0 \\\n"], [64, "            --max-instances 10 \\\n"], [65, "            --timeout 300 \\\n"], [66, "            --set-env-vars \"ENVIRONMENT=production\" \\\n"], [67, "            --quiet\n"], [68, "      \n"], [69, "      - name: Get Cloud Run URL\n"], [70, "        run: |\n"]], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [52, 70], "resource": "jobs(deploy).steps[6](Deploy to Cloud Run)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": ["deploy"], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"name": "Get Cloud Run URL", "run": "SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} \\\n  --region ${{ env.GCP_REGION }} \\\n  --format 'value(status.url)')\necho \"\ud83d\ude80 Service deployed to: $SERVICE_URL\"\necho \"SERVICE_URL=$SERVICE_URL\" >> $GITHUB_ENV\n", "__startline__": 69, "__endline__": 77}}, "code_block": [[69, "      - name: Get Cloud Run URL\n"], [70, "        run: |\n"], [71, "          SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} \\\n"], [72, "            --region ${{ env.GCP_REGION }} \\\n"], [73, "            --format 'value(status.url)')\n"], [74, "          echo \"\ud83d\ude80 Service deployed to: $SERVICE_URL\"\n"], [75, "          echo \"SERVICE_URL=$SERVICE_URL\" >> $GITHUB_ENV\n"], [76, "      \n"], [77, "      - name: Verify deployment\n"], [78, "        run: |\n"]], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [69, 78], "resource": "jobs(deploy).steps[7](Get Cloud Run URL)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": ["deploy"], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}, {"check_id": "CKV_GHA_1", "bc_check_id": null, "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables", "check_result": {"result": "PASSED", "results_configuration": {"name": "Verify deployment", "run": "echo \"Waiting for service to be ready...\"\nsleep 30\n\n# Health check\ncurl -f ${{ env.SERVICE_URL }}/health || exit 1\necho \"\u2705 Health check passed\"\n\n# Basic functionality check\necho \"\u2705 Deployment verification completed successfully\"", "__startline__": 77, "__endline__": 87}}, "code_block": [[77, "      - name: Verify deployment\n"], [78, "        run: |\n"], [79, "          echo \"Waiting for service to be ready...\"\n"], [80, "          sleep 30\n"], [81, "          \n"], [82, "          # Health check\n"], [83, "          curl -f ${{ env.SERVICE_URL }}/health || exit 1\n"], [84, "          echo \"\u2705 Health check passed\"\n"], [85, "          \n"], [86, "          # Basic functionality check\n"], [87, "          echo \"\u2705 Deployment verification completed successfully\""]], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [77, 88], "resource": "jobs(deploy).steps[8](Verify deployment)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": ["deploy"], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"name": "Checkout code", "uses": "actions/checkout@v4", "__startline__": 27, "__endline__": 30}}, "code_block": [[27, "      - name: Checkout code\n"], [28, "        uses: actions/checkout@v4\n"], [29, "      \n"], [30, "      - name: Authenticate to Google Cloud\n"], [31, "        uses: google-github-actions/auth@v2\n"]], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [27, 31], "resource": "jobs(deploy).steps[1](Checkout code)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": ["deploy"], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"name": "Authenticate to Google Cloud", "uses": "google-github-actions/auth@v2", "with": {"workload_identity_provider": "${{ secrets.WIF_PROVIDER }}", "service_account": "${{ secrets.WIF_SERVICE_ACCOUNT }}", "__startline__": 33, "__endline__": 36}, "__startline__": 30, "__endline__": 36}}, "code_block": [[30, "      - name: Authenticate to Google Cloud\n"], [31, "        uses: google-github-actions/auth@v2\n"], [32, "        with:\n"], [33, "          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}\n"], [34, "          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}\n"], [35, "      \n"], [36, "      - name: Configure Docker to use gcloud as credential helper\n"], [37, "        run: gcloud auth configure-docker ${{ env.REGISTRY }}\n"]], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [30, 37], "resource": "jobs(deploy).steps[2](Authenticate to Google Cloud)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": ["deploy"], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"name": "Configure Docker to use gcloud as credential helper", "run": "gcloud auth configure-docker ${{ env.REGISTRY }}", "__startline__": 36, "__endline__": 39}}, "code_block": [[36, "      - name: Configure Docker to use gcloud as credential helper\n"], [37, "        run: gcloud auth configure-docker ${{ env.REGISTRY }}\n"], [38, "      \n"], [39, "      - name: Build Docker image\n"], [40, "        working-directory: ./apps/chatbot\n"]], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [36, 40], "resource": "jobs(deploy).steps[3](Configure Docker to use gcloud as credential helper)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": ["deploy"], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"name": "Build Docker image", "working-directory": "./apps/chatbot", "run": "docker build \\\n  --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n  --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest \\\n  .\n", "__startline__": 39, "__endline__": 47}}, "code_block": [[39, "      - name: Build Docker image\n"], [40, "        working-directory: ./apps/chatbot\n"], [41, "        run: |\n"], [42, "          docker build \\\n"], [43, "            --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n"], [44, "            --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest \\\n"], [45, "            .\n"], [46, "      \n"], [47, "      - name: Push Docker image to Artifact Registry\n"], [48, "        run: |\n"]], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [39, 48], "resource": "jobs(deploy).steps[4](Build Docker image)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": ["deploy"], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"name": "Push Docker image to Artifact Registry", "run": "docker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }}\ndocker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest\n", "__startline__": 47, "__endline__": 52}}, "code_block": [[47, "      - name: Push Docker image to Artifact Registry\n"], [48, "        run: |\n"], [49, "          docker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }}\n"], [50, "          docker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest\n"], [51, "      \n"], [52, "      - name: Deploy to Cloud Run\n"], [53, "        run: |\n"]], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [47, 53], "resource": "jobs(deploy).steps[5](Push Docker image to Artifact Registry)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": ["deploy"], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"name": "Deploy to Cloud Run", "run": "gcloud run deploy ${{ env.SERVICE_NAME }} \\\n  --image ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n  --region ${{ env.GCP_REGION }} \\\n  --service-account cwe-chatbot-sa@${{ env.GCP_PROJECT_ID }}.iam.gserviceaccount.com \\\n  --ingress internal-and-cloud-load-balancing \\\n  --allow-unauthenticated \\\n  --port 8080 \\\n  --memory 512Mi \\\n  --cpu 1000m \\\n  --min-instances 0 \\\n  --max-instances 10 \\\n  --timeout 300 \\\n  --set-env-vars \"ENVIRONMENT=production\" \\\n  --quiet\n", "__startline__": 52, "__endline__": 69}}, "code_block": [[52, "      - name: Deploy to Cloud Run\n"], [53, "        run: |\n"], [54, "          gcloud run deploy ${{ env.SERVICE_NAME }} \\\n"], [55, "            --image ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n"], [56, "            --region ${{ env.GCP_REGION }} \\\n"], [57, "            --service-account cwe-chatbot-sa@${{ env.GCP_PROJECT_ID }}.iam.gserviceaccount.com \\\n"], [58, "            --ingress internal-and-cloud-load-balancing \\\n"], [59, "            --allow-unauthenticated \\\n"], [60, "            --port 8080 \\\n"], [61, "            --memory 512Mi \\\n"], [62, "            --cpu 1000m \\\n"], [63, "            --min-instances 0 \\\n"], [64, "            --max-instances 10 \\\n"], [65, "            --timeout 300 \\\n"], [66, "            --set-env-vars \"ENVIRONMENT=production\" \\\n"], [67, "            --quiet\n"], [68, "      \n"], [69, "      - name: Get Cloud Run URL\n"], [70, "        run: |\n"]], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [52, 70], "resource": "jobs(deploy).steps[6](Deploy to Cloud Run)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": ["deploy"], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"name": "Get Cloud Run URL", "run": "SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} \\\n  --region ${{ env.GCP_REGION }} \\\n  --format 'value(status.url)')\necho \"\ud83d\ude80 Service deployed to: $SERVICE_URL\"\necho \"SERVICE_URL=$SERVICE_URL\" >> $GITHUB_ENV\n", "__startline__": 69, "__endline__": 77}}, "code_block": [[69, "      - name: Get Cloud Run URL\n"], [70, "        run: |\n"], [71, "          SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} \\\n"], [72, "            --region ${{ env.GCP_REGION }} \\\n"], [73, "            --format 'value(status.url)')\n"], [74, "          echo \"\ud83d\ude80 Service deployed to: $SERVICE_URL\"\n"], [75, "          echo \"SERVICE_URL=$SERVICE_URL\" >> $GITHUB_ENV\n"], [76, "      \n"], [77, "      - name: Verify deployment\n"], [78, "        run: |\n"]], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [69, 78], "resource": "jobs(deploy).steps[7](Get Cloud Run URL)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": ["deploy"], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}, {"check_id": "CKV_GHA_2", "bc_check_id": null, "check_name": "Ensure run commands are not vulnerable to shell injection", "check_result": {"result": "PASSED", "results_configuration": {"name": "Verify deployment", "run": "echo \"Waiting for service to be ready...\"\nsleep 30\n\n# Health check\ncurl -f ${{ env.SERVICE_URL }}/health || exit 1\necho \"\u2705 Health check passed\"\n\n# Basic functionality check\necho \"\u2705 Deployment verification completed successfully\"", "__startline__": 77, "__endline__": 87}}, "code_block": [[77, "      - name: Verify deployment\n"], [78, "        run: |\n"], [79, "          echo \"Waiting for service to be ready...\"\n"], [80, "          sleep 30\n"], [81, "          \n"], [82, "          # Health check\n"], [83, "          curl -f ${{ env.SERVICE_URL }}/health || exit 1\n"], [84, "          echo \"\u2705 Health check passed\"\n"], [85, "          \n"], [86, "          # Basic functionality check\n"], [87, "          echo \"\u2705 Deployment verification completed successfully\""]], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [77, 88], "resource": "jobs(deploy).steps[8](Verify deployment)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ShellInjection", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": ["deploy"], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"name": "Checkout code", "uses": "actions/checkout@v4", "__startline__": 27, "__endline__": 30}}, "code_block": [[27, "      - name: Checkout code\n"], [28, "        uses: actions/checkout@v4\n"], [29, "      \n"], [30, "      - name: Authenticate to Google Cloud\n"], [31, "        uses: google-github-actions/auth@v2\n"]], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [27, 31], "resource": "jobs(deploy).steps[1](Checkout code)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": ["deploy"], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"name": "Authenticate to Google Cloud", "uses": "google-github-actions/auth@v2", "with": {"workload_identity_provider": "${{ secrets.WIF_PROVIDER }}", "service_account": "${{ secrets.WIF_SERVICE_ACCOUNT }}", "__startline__": 33, "__endline__": 36}, "__startline__": 30, "__endline__": 36}}, "code_block": [[30, "      - name: Authenticate to Google Cloud\n"], [31, "        uses: google-github-actions/auth@v2\n"], [32, "        with:\n"], [33, "          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}\n"], [34, "          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}\n"], [35, "      \n"], [36, "      - name: Configure Docker to use gcloud as credential helper\n"], [37, "        run: gcloud auth configure-docker ${{ env.REGISTRY }}\n"]], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [30, 37], "resource": "jobs(deploy).steps[2](Authenticate to Google Cloud)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": ["deploy"], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"name": "Configure Docker to use gcloud as credential helper", "run": "gcloud auth configure-docker ${{ env.REGISTRY }}", "__startline__": 36, "__endline__": 39}}, "code_block": [[36, "      - name: Configure Docker to use gcloud as credential helper\n"], [37, "        run: gcloud auth configure-docker ${{ env.REGISTRY }}\n"], [38, "      \n"], [39, "      - name: Build Docker image\n"], [40, "        working-directory: ./apps/chatbot\n"]], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [36, 40], "resource": "jobs(deploy).steps[3](Configure Docker to use gcloud as credential helper)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": ["deploy"], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"name": "Build Docker image", "working-directory": "./apps/chatbot", "run": "docker build \\\n  --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n  --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest \\\n  .\n", "__startline__": 39, "__endline__": 47}}, "code_block": [[39, "      - name: Build Docker image\n"], [40, "        working-directory: ./apps/chatbot\n"], [41, "        run: |\n"], [42, "          docker build \\\n"], [43, "            --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n"], [44, "            --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest \\\n"], [45, "            .\n"], [46, "      \n"], [47, "      - name: Push Docker image to Artifact Registry\n"], [48, "        run: |\n"]], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [39, 48], "resource": "jobs(deploy).steps[4](Build Docker image)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": ["deploy"], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"name": "Push Docker image to Artifact Registry", "run": "docker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }}\ndocker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest\n", "__startline__": 47, "__endline__": 52}}, "code_block": [[47, "      - name: Push Docker image to Artifact Registry\n"], [48, "        run: |\n"], [49, "          docker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }}\n"], [50, "          docker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest\n"], [51, "      \n"], [52, "      - name: Deploy to Cloud Run\n"], [53, "        run: |\n"]], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [47, 53], "resource": "jobs(deploy).steps[5](Push Docker image to Artifact Registry)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": ["deploy"], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"name": "Deploy to Cloud Run", "run": "gcloud run deploy ${{ env.SERVICE_NAME }} \\\n  --image ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n  --region ${{ env.GCP_REGION }} \\\n  --service-account cwe-chatbot-sa@${{ env.GCP_PROJECT_ID }}.iam.gserviceaccount.com \\\n  --ingress internal-and-cloud-load-balancing \\\n  --allow-unauthenticated \\\n  --port 8080 \\\n  --memory 512Mi \\\n  --cpu 1000m \\\n  --min-instances 0 \\\n  --max-instances 10 \\\n  --timeout 300 \\\n  --set-env-vars \"ENVIRONMENT=production\" \\\n  --quiet\n", "__startline__": 52, "__endline__": 69}}, "code_block": [[52, "      - name: Deploy to Cloud Run\n"], [53, "        run: |\n"], [54, "          gcloud run deploy ${{ env.SERVICE_NAME }} \\\n"], [55, "            --image ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n"], [56, "            --region ${{ env.GCP_REGION }} \\\n"], [57, "            --service-account cwe-chatbot-sa@${{ env.GCP_PROJECT_ID }}.iam.gserviceaccount.com \\\n"], [58, "            --ingress internal-and-cloud-load-balancing \\\n"], [59, "            --allow-unauthenticated \\\n"], [60, "            --port 8080 \\\n"], [61, "            --memory 512Mi \\\n"], [62, "            --cpu 1000m \\\n"], [63, "            --min-instances 0 \\\n"], [64, "            --max-instances 10 \\\n"], [65, "            --timeout 300 \\\n"], [66, "            --set-env-vars \"ENVIRONMENT=production\" \\\n"], [67, "            --quiet\n"], [68, "      \n"], [69, "      - name: Get Cloud Run URL\n"], [70, "        run: |\n"]], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [52, 70], "resource": "jobs(deploy).steps[6](Deploy to Cloud Run)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": ["deploy"], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"name": "Get Cloud Run URL", "run": "SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} \\\n  --region ${{ env.GCP_REGION }} \\\n  --format 'value(status.url)')\necho \"\ud83d\ude80 Service deployed to: $SERVICE_URL\"\necho \"SERVICE_URL=$SERVICE_URL\" >> $GITHUB_ENV\n", "__startline__": 69, "__endline__": 77}}, "code_block": [[69, "      - name: Get Cloud Run URL\n"], [70, "        run: |\n"], [71, "          SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} \\\n"], [72, "            --region ${{ env.GCP_REGION }} \\\n"], [73, "            --format 'value(status.url)')\n"], [74, "          echo \"\ud83d\ude80 Service deployed to: $SERVICE_URL\"\n"], [75, "          echo \"SERVICE_URL=$SERVICE_URL\" >> $GITHUB_ENV\n"], [76, "      \n"], [77, "      - name: Verify deployment\n"], [78, "        run: |\n"]], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [69, 78], "resource": "jobs(deploy).steps[7](Get Cloud Run URL)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": ["deploy"], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}, {"check_id": "CKV_GHA_3", "bc_check_id": null, "check_name": "Suspicious use of curl with secrets", "check_result": {"result": "PASSED", "results_configuration": {"name": "Verify deployment", "run": "echo \"Waiting for service to be ready...\"\nsleep 30\n\n# Health check\ncurl -f ${{ env.SERVICE_URL }}/health || exit 1\necho \"\u2705 Health check passed\"\n\n# Basic functionality check\necho \"\u2705 Deployment verification completed successfully\"", "__startline__": 77, "__endline__": 87}}, "code_block": [[77, "      - name: Verify deployment\n"], [78, "        run: |\n"], [79, "          echo \"Waiting for service to be ready...\"\n"], [80, "          sleep 30\n"], [81, "          \n"], [82, "          # Health check\n"], [83, "          curl -f ${{ env.SERVICE_URL }}/health || exit 1\n"], [84, "          echo \"\u2705 Health check passed\"\n"], [85, "          \n"], [86, "          # Basic functionality check\n"], [87, "          echo \"\u2705 Deployment verification completed successfully\""]], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [77, 88], "resource": "jobs(deploy).steps[8](Verify deployment)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": ["deploy"], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"name": "Checkout code", "uses": "actions/checkout@v4", "__startline__": 27, "__endline__": 30}}, "code_block": [[27, "      - name: Checkout code\n"], [28, "        uses: actions/checkout@v4\n"], [29, "      \n"], [30, "      - name: Authenticate to Google Cloud\n"], [31, "        uses: google-github-actions/auth@v2\n"]], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [27, 31], "resource": "jobs(deploy).steps[1](Checkout code)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": ["deploy"], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"name": "Authenticate to Google Cloud", "uses": "google-github-actions/auth@v2", "with": {"workload_identity_provider": "${{ secrets.WIF_PROVIDER }}", "service_account": "${{ secrets.WIF_SERVICE_ACCOUNT }}", "__startline__": 33, "__endline__": 36}, "__startline__": 30, "__endline__": 36}}, "code_block": [[30, "      - name: Authenticate to Google Cloud\n"], [31, "        uses: google-github-actions/auth@v2\n"], [32, "        with:\n"], [33, "          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}\n"], [34, "          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}\n"], [35, "      \n"], [36, "      - name: Configure Docker to use gcloud as credential helper\n"], [37, "        run: gcloud auth configure-docker ${{ env.REGISTRY }}\n"]], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [30, 37], "resource": "jobs(deploy).steps[2](Authenticate to Google Cloud)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": ["deploy"], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"name": "Configure Docker to use gcloud as credential helper", "run": "gcloud auth configure-docker ${{ env.REGISTRY }}", "__startline__": 36, "__endline__": 39}}, "code_block": [[36, "      - name: Configure Docker to use gcloud as credential helper\n"], [37, "        run: gcloud auth configure-docker ${{ env.REGISTRY }}\n"], [38, "      \n"], [39, "      - name: Build Docker image\n"], [40, "        working-directory: ./apps/chatbot\n"]], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [36, 40], "resource": "jobs(deploy).steps[3](Configure Docker to use gcloud as credential helper)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": ["deploy"], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"name": "Build Docker image", "working-directory": "./apps/chatbot", "run": "docker build \\\n  --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n  --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest \\\n  .\n", "__startline__": 39, "__endline__": 47}}, "code_block": [[39, "      - name: Build Docker image\n"], [40, "        working-directory: ./apps/chatbot\n"], [41, "        run: |\n"], [42, "          docker build \\\n"], [43, "            --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n"], [44, "            --tag ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest \\\n"], [45, "            .\n"], [46, "      \n"], [47, "      - name: Push Docker image to Artifact Registry\n"], [48, "        run: |\n"]], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [39, 48], "resource": "jobs(deploy).steps[4](Build Docker image)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": ["deploy"], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"name": "Push Docker image to Artifact Registry", "run": "docker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }}\ndocker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest\n", "__startline__": 47, "__endline__": 52}}, "code_block": [[47, "      - name: Push Docker image to Artifact Registry\n"], [48, "        run: |\n"], [49, "          docker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }}\n"], [50, "          docker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:latest\n"], [51, "      \n"], [52, "      - name: Deploy to Cloud Run\n"], [53, "        run: |\n"]], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [47, 53], "resource": "jobs(deploy).steps[5](Push Docker image to Artifact Registry)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": ["deploy"], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"name": "Deploy to Cloud Run", "run": "gcloud run deploy ${{ env.SERVICE_NAME }} \\\n  --image ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n  --region ${{ env.GCP_REGION }} \\\n  --service-account cwe-chatbot-sa@${{ env.GCP_PROJECT_ID }}.iam.gserviceaccount.com \\\n  --ingress internal-and-cloud-load-balancing \\\n  --allow-unauthenticated \\\n  --port 8080 \\\n  --memory 512Mi \\\n  --cpu 1000m \\\n  --min-instances 0 \\\n  --max-instances 10 \\\n  --timeout 300 \\\n  --set-env-vars \"ENVIRONMENT=production\" \\\n  --quiet\n", "__startline__": 52, "__endline__": 69}}, "code_block": [[52, "      - name: Deploy to Cloud Run\n"], [53, "        run: |\n"], [54, "          gcloud run deploy ${{ env.SERVICE_NAME }} \\\n"], [55, "            --image ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/chatbot-repo/${{ env.IMAGE_NAME }}:${{ github.sha }} \\\n"], [56, "            --region ${{ env.GCP_REGION }} \\\n"], [57, "            --service-account cwe-chatbot-sa@${{ env.GCP_PROJECT_ID }}.iam.gserviceaccount.com \\\n"], [58, "            --ingress internal-and-cloud-load-balancing \\\n"], [59, "            --allow-unauthenticated \\\n"], [60, "            --port 8080 \\\n"], [61, "            --memory 512Mi \\\n"], [62, "            --cpu 1000m \\\n"], [63, "            --min-instances 0 \\\n"], [64, "            --max-instances 10 \\\n"], [65, "            --timeout 300 \\\n"], [66, "            --set-env-vars \"ENVIRONMENT=production\" \\\n"], [67, "            --quiet\n"], [68, "      \n"], [69, "      - name: Get Cloud Run URL\n"], [70, "        run: |\n"]], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [52, 70], "resource": "jobs(deploy).steps[6](Deploy to Cloud Run)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": ["deploy"], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"name": "Get Cloud Run URL", "run": "SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} \\\n  --region ${{ env.GCP_REGION }} \\\n  --format 'value(status.url)')\necho \"\ud83d\ude80 Service deployed to: $SERVICE_URL\"\necho \"SERVICE_URL=$SERVICE_URL\" >> $GITHUB_ENV\n", "__startline__": 69, "__endline__": 77}}, "code_block": [[69, "      - name: Get Cloud Run URL\n"], [70, "        run: |\n"], [71, "          SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} \\\n"], [72, "            --region ${{ env.GCP_REGION }} \\\n"], [73, "            --format 'value(status.url)')\n"], [74, "          echo \"\ud83d\ude80 Service deployed to: $SERVICE_URL\"\n"], [75, "          echo \"SERVICE_URL=$SERVICE_URL\" >> $GITHUB_ENV\n"], [76, "      \n"], [77, "      - name: Verify deployment\n"], [78, "        run: |\n"]], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [69, 78], "resource": "jobs(deploy).steps[7](Get Cloud Run URL)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": ["deploy"], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}, {"check_id": "CKV_GHA_4", "bc_check_id": null, "check_name": "Suspicious use of netcat with IP address", "check_result": {"result": "PASSED", "results_configuration": {"name": "Verify deployment", "run": "echo \"Waiting for service to be ready...\"\nsleep 30\n\n# Health check\ncurl -f ${{ env.SERVICE_URL }}/health || exit 1\necho \"\u2705 Health check passed\"\n\n# Basic functionality check\necho \"\u2705 Deployment verification completed successfully\"", "__startline__": 77, "__endline__": 87}}, "code_block": [[77, "      - name: Verify deployment\n"], [78, "        run: |\n"], [79, "          echo \"Waiting for service to be ready...\"\n"], [80, "          sleep 30\n"], [81, "          \n"], [82, "          # Health check\n"], [83, "          curl -f ${{ env.SERVICE_URL }}/health || exit 1\n"], [84, "          echo \"\u2705 Health check passed\"\n"], [85, "          \n"], [86, "          # Basic functionality check\n"], [87, "          echo \"\u2705 Deployment verification completed successfully\""]], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [77, 88], "resource": "jobs(deploy).steps[8](Verify deployment)", "evaluations": null, "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": ["deploy"], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}, {"check_id": "CKV2_GHA_1", "bc_check_id": null, "check_name": "Ensure top-level permissions are not set to write-all", "check_result": {"result": "PASSED", "evaluated_keys": ["permissions"]}, "code_block": [[7, "  contents: read\n"], [8, "  security-events: write\n"], [9, "\n"], [10, "jobs:\n"], [11, "  lint-type-test:\n"]], "file_path": "/.github/workflows/quality.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/quality.yml", "repo_file_path": "/.github/workflows/quality.yml", "file_line_range": [7, 11], "resource": "on(quality)", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [[]], "job": [""], "workflow_name": "quality"}], "failed_checks": [{"check_id": "CKV2_GHA_1", "bc_check_id": null, "check_name": "Ensure top-level permissions are not set to write-all", "check_result": {"result": "FAILED", "evaluated_keys": ["permissions"]}, "code_block": [], "file_path": "/.github/workflows/deploy-chatbot.yml", "file_abs_path": "/home/chris/work/CyberSecAI/cwe_chatbot_bmad/.github/workflows/deploy-chatbot.yml", "repo_file_path": "/.github/workflows/deploy-chatbot.yml", "file_line_range": [22, 23], "resource": "on(Deploy CWE ChatBot to Cloud Run)", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null, "triggers": [["push", "workflow_dispatch"]], "job": [""], "workflow_name": "Deploy CWE ChatBot to Cloud Run"}], "skipped_checks": [], "parsing_errors": []}, "summary": {"passed": 242, "failed": 1, "skipped": 0, "parsing_errors": 0, "resource_count": 0, "checkov_version": "3.2.477"}, "url": "Add an api key '--bc-api-key <api-key>' to see more detailed insights via https://bridgecrew.cloud"}]